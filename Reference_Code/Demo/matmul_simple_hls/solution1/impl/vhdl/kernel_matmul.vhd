-- ==============================================================
-- Generated by Vitis HLS v2025.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel_matmul is
generic (
    C_M_AXI_GMEM0_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM0_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM1_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM1_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM1_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_WUSER_WIDTH-1 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_RUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_BUSER_WIDTH-1 downto 0);
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_WUSER_WIDTH-1 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_RUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of kernel_matmul is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "kernel_matmul_kernel_matmul,hls_ip_2025_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu250-figd2104-2L-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=3015,HLS_SYN_LUT=3757,HLS_VERSION=2025_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant C_M_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv62_0 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_FFFFFCFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111110011111111";
    constant ap_const_lv32_300 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100000000";
    constant ap_const_lv32_FFFFF7FF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111011111111111";
    constant ap_const_lv32_800 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100000000000";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal i_vec : STD_LOGIC_VECTOR (63 downto 0);
    signal i_mat : STD_LOGIC_VECTOR (63 downto 0);
    signal o_vec : STD_LOGIC_VECTOR (63 downto 0);
    signal vec_size : STD_LOGIC_VECTOR (31 downto 0);
    signal col_size : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal gmem0_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal gmem0_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal col_size_read_reg_380 : STD_LOGIC_VECTOR (31 downto 0);
    signal vec_size_read_reg_386 : STD_LOGIC_VECTOR (31 downto 0);
    signal o_vec_read_reg_391 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_mat_read_reg_396 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_vec_read_reg_401 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln17_1_fu_230_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln17_1_reg_412 : STD_LOGIC_VECTOR (31 downto 0);
    signal vec_size_cast_fu_249_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal vec_size_cast_reg_418 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal sext_ln23_fu_290_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln23_reg_423 : STD_LOGIC_VECTOR (63 downto 0);
    signal phi_mul_load_reg_428 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal gmem0_addr_reg_436 : STD_LOGIC_VECTOR (63 downto 0);
    signal vec_local_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal vec_local_ce0 : STD_LOGIC;
    signal vec_local_we0 : STD_LOGIC;
    signal vec_local_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_ap_start : STD_LOGIC;
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_ap_done : STD_LOGIC;
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_ap_idle : STD_LOGIC;
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_ap_ready : STD_LOGIC;
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_AWVALID : STD_LOGIC;
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_WVALID : STD_LOGIC;
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_WLAST : STD_LOGIC;
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARVALID : STD_LOGIC;
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_RREADY : STD_LOGIC;
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_BREADY : STD_LOGIC;
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_vec_local_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_vec_local_ce0 : STD_LOGIC;
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_vec_local_we0 : STD_LOGIC;
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_vec_local_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_ap_start : STD_LOGIC;
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_ap_done : STD_LOGIC;
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_ap_idle : STD_LOGIC;
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_ap_ready : STD_LOGIC;
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_AWVALID : STD_LOGIC;
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_WVALID : STD_LOGIC;
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_WLAST : STD_LOGIC;
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARVALID : STD_LOGIC;
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_RREADY : STD_LOGIC;
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_BREADY : STD_LOGIC;
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_vec_local_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_vec_local_ce0 : STD_LOGIC;
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_sum_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_sum_out_ap_vld : STD_LOGIC;
    signal gmem0_0_AWVALID : STD_LOGIC;
    signal gmem0_0_AWREADY : STD_LOGIC;
    signal gmem0_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_0_WVALID : STD_LOGIC;
    signal gmem0_0_WREADY : STD_LOGIC;
    signal gmem0_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_0_ARVALID : STD_LOGIC;
    signal gmem0_0_ARREADY : STD_LOGIC;
    signal gmem0_0_RVALID : STD_LOGIC;
    signal gmem0_0_RREADY : STD_LOGIC;
    signal gmem0_0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_0_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem0_0_BVALID : STD_LOGIC;
    signal gmem0_0_BREADY : STD_LOGIC;
    signal gmem1_0_AWREADY : STD_LOGIC;
    signal gmem1_0_WREADY : STD_LOGIC;
    signal gmem1_0_ARVALID : STD_LOGIC;
    signal gmem1_0_ARREADY : STD_LOGIC;
    signal gmem1_0_RVALID : STD_LOGIC;
    signal gmem1_0_RREADY : STD_LOGIC;
    signal gmem1_0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_0_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem1_0_BVALID : STD_LOGIC;
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_ap_start_reg : STD_LOGIC := '0';
    signal grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln23_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln31_fu_338_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal phi_mul_fu_110 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000000000000";
    signal add_ln23_1_fu_301_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal i_1_fu_114 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal add_ln23_fu_311_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_fu_198_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln17_fu_204_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln17_fu_204_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln17_fu_210_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_23_fu_218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln17_1_fu_224_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_24_fu_252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln23_fu_257_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln23_fu_262_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_25_fu_270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln23_1_fu_276_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln23_1_fu_282_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln31_fu_317_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln31_fu_323_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln2_fu_328_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component kernel_matmul_kernel_matmul_Pipeline_VITIS_LOOP_17_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        select_ln17_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_vec : IN STD_LOGIC_VECTOR (63 downto 0);
        vec_local_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        vec_local_ce0 : OUT STD_LOGIC;
        vec_local_we0 : OUT STD_LOGIC;
        vec_local_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kernel_matmul_kernel_matmul_Pipeline_VITIS_LOOP_26_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem1_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem1_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem1_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem1_0_WREADY : IN STD_LOGIC;
        m_axi_gmem1_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem1_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem1_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem1_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_RVALID : IN STD_LOGIC;
        m_axi_gmem1_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem1_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_0_RLAST : IN STD_LOGIC;
        m_axi_gmem1_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem1_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_0_BVALID : IN STD_LOGIC;
        m_axi_gmem1_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem1_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        select_ln17_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        vec_local_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        vec_local_ce0 : OUT STD_LOGIC;
        vec_local_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        phi_mul : IN STD_LOGIC_VECTOR (61 downto 0);
        i_mat : IN STD_LOGIC_VECTOR (63 downto 0);
        sum_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        sum_out_ap_vld : OUT STD_LOGIC );
    end component;


    component kernel_matmul_vec_local_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kernel_matmul_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        i_vec : OUT STD_LOGIC_VECTOR (63 downto 0);
        i_mat : OUT STD_LOGIC_VECTOR (63 downto 0);
        o_vec : OUT STD_LOGIC_VECTOR (63 downto 0);
        vec_size : OUT STD_LOGIC_VECTOR (31 downto 0);
        col_size : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component kernel_matmul_gmem0_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_NUM_READ_OUTSTANDING : INTEGER;
        CH0_NUM_WRITE_OUTSTANDING : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;


    component kernel_matmul_gmem1_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_NUM_READ_OUTSTANDING : INTEGER;
        CH0_NUM_WRITE_OUTSTANDING : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;



begin
    vec_local_U : component kernel_matmul_vec_local_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 768,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => vec_local_address0,
        ce0 => vec_local_ce0,
        we0 => vec_local_we0,
        d0 => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_vec_local_d0,
        q0 => vec_local_q0);

    grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176 : component kernel_matmul_kernel_matmul_Pipeline_VITIS_LOOP_17_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_ap_start,
        ap_done => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_ap_done,
        ap_idle => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_ap_idle,
        ap_ready => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_ap_ready,
        m_axi_gmem0_0_AWVALID => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_AWVALID,
        m_axi_gmem0_0_AWREADY => ap_const_logic_0,
        m_axi_gmem0_0_AWADDR => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_AWADDR,
        m_axi_gmem0_0_AWID => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_AWID,
        m_axi_gmem0_0_AWLEN => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_AWLEN,
        m_axi_gmem0_0_AWSIZE => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_AWSIZE,
        m_axi_gmem0_0_AWBURST => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_AWBURST,
        m_axi_gmem0_0_AWLOCK => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_AWLOCK,
        m_axi_gmem0_0_AWCACHE => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_AWCACHE,
        m_axi_gmem0_0_AWPROT => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_AWPROT,
        m_axi_gmem0_0_AWQOS => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_AWQOS,
        m_axi_gmem0_0_AWREGION => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_AWREGION,
        m_axi_gmem0_0_AWUSER => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_AWUSER,
        m_axi_gmem0_0_WVALID => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_WVALID,
        m_axi_gmem0_0_WREADY => ap_const_logic_0,
        m_axi_gmem0_0_WDATA => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_WDATA,
        m_axi_gmem0_0_WSTRB => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_WSTRB,
        m_axi_gmem0_0_WLAST => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_WLAST,
        m_axi_gmem0_0_WID => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_WID,
        m_axi_gmem0_0_WUSER => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_WUSER,
        m_axi_gmem0_0_ARVALID => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARVALID,
        m_axi_gmem0_0_ARREADY => gmem0_0_ARREADY,
        m_axi_gmem0_0_ARADDR => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARADDR,
        m_axi_gmem0_0_ARID => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARID,
        m_axi_gmem0_0_ARLEN => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARLEN,
        m_axi_gmem0_0_ARSIZE => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARSIZE,
        m_axi_gmem0_0_ARBURST => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARBURST,
        m_axi_gmem0_0_ARLOCK => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARLOCK,
        m_axi_gmem0_0_ARCACHE => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARCACHE,
        m_axi_gmem0_0_ARPROT => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARPROT,
        m_axi_gmem0_0_ARQOS => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARQOS,
        m_axi_gmem0_0_ARREGION => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARREGION,
        m_axi_gmem0_0_ARUSER => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARUSER,
        m_axi_gmem0_0_RVALID => gmem0_0_RVALID,
        m_axi_gmem0_0_RREADY => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_RREADY,
        m_axi_gmem0_0_RDATA => gmem0_0_RDATA,
        m_axi_gmem0_0_RLAST => ap_const_logic_0,
        m_axi_gmem0_0_RID => ap_const_lv1_0,
        m_axi_gmem0_0_RFIFONUM => gmem0_0_RFIFONUM,
        m_axi_gmem0_0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_0_BVALID => ap_const_logic_0,
        m_axi_gmem0_0_BREADY => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_BREADY,
        m_axi_gmem0_0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_0_BID => ap_const_lv1_0,
        m_axi_gmem0_0_BUSER => ap_const_lv1_0,
        select_ln17_1 => select_ln17_1_reg_412,
        i_vec => i_vec_read_reg_401,
        vec_local_address0 => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_vec_local_address0,
        vec_local_ce0 => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_vec_local_ce0,
        vec_local_we0 => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_vec_local_we0,
        vec_local_d0 => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_vec_local_d0);

    grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187 : component kernel_matmul_kernel_matmul_Pipeline_VITIS_LOOP_26_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_ap_start,
        ap_done => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_ap_done,
        ap_idle => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_ap_idle,
        ap_ready => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_ap_ready,
        m_axi_gmem1_0_AWVALID => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_AWVALID,
        m_axi_gmem1_0_AWREADY => ap_const_logic_0,
        m_axi_gmem1_0_AWADDR => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_AWADDR,
        m_axi_gmem1_0_AWID => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_AWID,
        m_axi_gmem1_0_AWLEN => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_AWLEN,
        m_axi_gmem1_0_AWSIZE => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_AWSIZE,
        m_axi_gmem1_0_AWBURST => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_AWBURST,
        m_axi_gmem1_0_AWLOCK => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_AWLOCK,
        m_axi_gmem1_0_AWCACHE => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_AWCACHE,
        m_axi_gmem1_0_AWPROT => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_AWPROT,
        m_axi_gmem1_0_AWQOS => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_AWQOS,
        m_axi_gmem1_0_AWREGION => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_AWREGION,
        m_axi_gmem1_0_AWUSER => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_AWUSER,
        m_axi_gmem1_0_WVALID => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_WVALID,
        m_axi_gmem1_0_WREADY => ap_const_logic_0,
        m_axi_gmem1_0_WDATA => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_WDATA,
        m_axi_gmem1_0_WSTRB => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_WSTRB,
        m_axi_gmem1_0_WLAST => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_WLAST,
        m_axi_gmem1_0_WID => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_WID,
        m_axi_gmem1_0_WUSER => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_WUSER,
        m_axi_gmem1_0_ARVALID => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARVALID,
        m_axi_gmem1_0_ARREADY => gmem1_0_ARREADY,
        m_axi_gmem1_0_ARADDR => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARADDR,
        m_axi_gmem1_0_ARID => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARID,
        m_axi_gmem1_0_ARLEN => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARLEN,
        m_axi_gmem1_0_ARSIZE => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARSIZE,
        m_axi_gmem1_0_ARBURST => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARBURST,
        m_axi_gmem1_0_ARLOCK => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARLOCK,
        m_axi_gmem1_0_ARCACHE => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARCACHE,
        m_axi_gmem1_0_ARPROT => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARPROT,
        m_axi_gmem1_0_ARQOS => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARQOS,
        m_axi_gmem1_0_ARREGION => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARREGION,
        m_axi_gmem1_0_ARUSER => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARUSER,
        m_axi_gmem1_0_RVALID => gmem1_0_RVALID,
        m_axi_gmem1_0_RREADY => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_RREADY,
        m_axi_gmem1_0_RDATA => gmem1_0_RDATA,
        m_axi_gmem1_0_RLAST => ap_const_logic_0,
        m_axi_gmem1_0_RID => ap_const_lv1_0,
        m_axi_gmem1_0_RFIFONUM => gmem1_0_RFIFONUM,
        m_axi_gmem1_0_RUSER => ap_const_lv1_0,
        m_axi_gmem1_0_RRESP => ap_const_lv2_0,
        m_axi_gmem1_0_BVALID => ap_const_logic_0,
        m_axi_gmem1_0_BREADY => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_BREADY,
        m_axi_gmem1_0_BRESP => ap_const_lv2_0,
        m_axi_gmem1_0_BID => ap_const_lv1_0,
        m_axi_gmem1_0_BUSER => ap_const_lv1_0,
        select_ln17_1 => select_ln17_1_reg_412,
        vec_local_address0 => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_vec_local_address0,
        vec_local_ce0 => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_vec_local_ce0,
        vec_local_q0 => vec_local_q0,
        phi_mul => phi_mul_load_reg_428,
        i_mat => i_mat_read_reg_396,
        sum_out => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_sum_out,
        sum_out_ap_vld => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_sum_out_ap_vld);

    control_s_axi_U : component kernel_matmul_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        i_vec => i_vec,
        i_mat => i_mat,
        o_vec => o_vec,
        vec_size => vec_size,
        col_size => col_size,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    gmem0_m_axi_U : component kernel_matmul_gmem0_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM0_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM0_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM0_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM0_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM0_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM0_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM0_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM0_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM0_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM0_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM0_CACHE_VALUE,
        CH0_NUM_READ_OUTSTANDING => 16,
        CH0_NUM_WRITE_OUTSTANDING => 16,
        CH0_USER_RFIFONUM_WIDTH => 9,
        CH0_USER_DW => 32,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem0_AWVALID,
        AWREADY => m_axi_gmem0_AWREADY,
        AWADDR => m_axi_gmem0_AWADDR,
        AWID => m_axi_gmem0_AWID,
        AWLEN => m_axi_gmem0_AWLEN,
        AWSIZE => m_axi_gmem0_AWSIZE,
        AWBURST => m_axi_gmem0_AWBURST,
        AWLOCK => m_axi_gmem0_AWLOCK,
        AWCACHE => m_axi_gmem0_AWCACHE,
        AWPROT => m_axi_gmem0_AWPROT,
        AWQOS => m_axi_gmem0_AWQOS,
        AWREGION => m_axi_gmem0_AWREGION,
        AWUSER => m_axi_gmem0_AWUSER,
        WVALID => m_axi_gmem0_WVALID,
        WREADY => m_axi_gmem0_WREADY,
        WDATA => m_axi_gmem0_WDATA,
        WSTRB => m_axi_gmem0_WSTRB,
        WLAST => m_axi_gmem0_WLAST,
        WID => m_axi_gmem0_WID,
        WUSER => m_axi_gmem0_WUSER,
        ARVALID => m_axi_gmem0_ARVALID,
        ARREADY => m_axi_gmem0_ARREADY,
        ARADDR => m_axi_gmem0_ARADDR,
        ARID => m_axi_gmem0_ARID,
        ARLEN => m_axi_gmem0_ARLEN,
        ARSIZE => m_axi_gmem0_ARSIZE,
        ARBURST => m_axi_gmem0_ARBURST,
        ARLOCK => m_axi_gmem0_ARLOCK,
        ARCACHE => m_axi_gmem0_ARCACHE,
        ARPROT => m_axi_gmem0_ARPROT,
        ARQOS => m_axi_gmem0_ARQOS,
        ARREGION => m_axi_gmem0_ARREGION,
        ARUSER => m_axi_gmem0_ARUSER,
        RVALID => m_axi_gmem0_RVALID,
        RREADY => m_axi_gmem0_RREADY,
        RDATA => m_axi_gmem0_RDATA,
        RLAST => m_axi_gmem0_RLAST,
        RID => m_axi_gmem0_RID,
        RUSER => m_axi_gmem0_RUSER,
        RRESP => m_axi_gmem0_RRESP,
        BVALID => m_axi_gmem0_BVALID,
        BREADY => m_axi_gmem0_BREADY,
        BRESP => m_axi_gmem0_BRESP,
        BID => m_axi_gmem0_BID,
        BUSER => m_axi_gmem0_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => gmem0_0_ARVALID,
        I_CH0_ARREADY => gmem0_0_ARREADY,
        I_CH0_ARADDR => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARADDR,
        I_CH0_ARLEN => grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARLEN,
        I_CH0_RVALID => gmem0_0_RVALID,
        I_CH0_RREADY => gmem0_0_RREADY,
        I_CH0_RDATA => gmem0_0_RDATA,
        I_CH0_RFIFONUM => gmem0_0_RFIFONUM,
        I_CH0_AWVALID => gmem0_0_AWVALID,
        I_CH0_AWREADY => gmem0_0_AWREADY,
        I_CH0_AWADDR => gmem0_addr_reg_436,
        I_CH0_AWLEN => gmem0_0_AWLEN,
        I_CH0_WVALID => gmem0_0_WVALID,
        I_CH0_WREADY => gmem0_0_WREADY,
        I_CH0_WDATA => gmem0_0_WDATA,
        I_CH0_WSTRB => ap_const_lv4_F,
        I_CH0_BVALID => gmem0_0_BVALID,
        I_CH0_BREADY => gmem0_0_BREADY);

    gmem1_m_axi_U : component kernel_matmul_gmem1_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM1_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM1_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM1_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM1_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM1_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM1_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM1_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM1_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM1_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM1_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM1_CACHE_VALUE,
        CH0_NUM_READ_OUTSTANDING => 16,
        CH0_NUM_WRITE_OUTSTANDING => 16,
        CH0_USER_RFIFONUM_WIDTH => 9,
        CH0_USER_DW => 32,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 0)
    port map (
        AWVALID => m_axi_gmem1_AWVALID,
        AWREADY => m_axi_gmem1_AWREADY,
        AWADDR => m_axi_gmem1_AWADDR,
        AWID => m_axi_gmem1_AWID,
        AWLEN => m_axi_gmem1_AWLEN,
        AWSIZE => m_axi_gmem1_AWSIZE,
        AWBURST => m_axi_gmem1_AWBURST,
        AWLOCK => m_axi_gmem1_AWLOCK,
        AWCACHE => m_axi_gmem1_AWCACHE,
        AWPROT => m_axi_gmem1_AWPROT,
        AWQOS => m_axi_gmem1_AWQOS,
        AWREGION => m_axi_gmem1_AWREGION,
        AWUSER => m_axi_gmem1_AWUSER,
        WVALID => m_axi_gmem1_WVALID,
        WREADY => m_axi_gmem1_WREADY,
        WDATA => m_axi_gmem1_WDATA,
        WSTRB => m_axi_gmem1_WSTRB,
        WLAST => m_axi_gmem1_WLAST,
        WID => m_axi_gmem1_WID,
        WUSER => m_axi_gmem1_WUSER,
        ARVALID => m_axi_gmem1_ARVALID,
        ARREADY => m_axi_gmem1_ARREADY,
        ARADDR => m_axi_gmem1_ARADDR,
        ARID => m_axi_gmem1_ARID,
        ARLEN => m_axi_gmem1_ARLEN,
        ARSIZE => m_axi_gmem1_ARSIZE,
        ARBURST => m_axi_gmem1_ARBURST,
        ARLOCK => m_axi_gmem1_ARLOCK,
        ARCACHE => m_axi_gmem1_ARCACHE,
        ARPROT => m_axi_gmem1_ARPROT,
        ARQOS => m_axi_gmem1_ARQOS,
        ARREGION => m_axi_gmem1_ARREGION,
        ARUSER => m_axi_gmem1_ARUSER,
        RVALID => m_axi_gmem1_RVALID,
        RREADY => m_axi_gmem1_RREADY,
        RDATA => m_axi_gmem1_RDATA,
        RLAST => m_axi_gmem1_RLAST,
        RID => m_axi_gmem1_RID,
        RUSER => m_axi_gmem1_RUSER,
        RRESP => m_axi_gmem1_RRESP,
        BVALID => m_axi_gmem1_BVALID,
        BREADY => m_axi_gmem1_BREADY,
        BRESP => m_axi_gmem1_BRESP,
        BID => m_axi_gmem1_BID,
        BUSER => m_axi_gmem1_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => gmem1_0_ARVALID,
        I_CH0_ARREADY => gmem1_0_ARREADY,
        I_CH0_ARADDR => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARADDR,
        I_CH0_ARLEN => grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARLEN,
        I_CH0_RVALID => gmem1_0_RVALID,
        I_CH0_RREADY => gmem1_0_RREADY,
        I_CH0_RDATA => gmem1_0_RDATA,
        I_CH0_RFIFONUM => gmem1_0_RFIFONUM,
        I_CH0_AWVALID => ap_const_logic_0,
        I_CH0_AWREADY => gmem1_0_AWREADY,
        I_CH0_AWADDR => ap_const_lv64_0,
        I_CH0_AWLEN => ap_const_lv32_0,
        I_CH0_WVALID => ap_const_logic_0,
        I_CH0_WREADY => gmem1_0_WREADY,
        I_CH0_WDATA => ap_const_lv32_0,
        I_CH0_WSTRB => ap_const_lv4_0,
        I_CH0_BVALID => gmem1_0_BVALID,
        I_CH0_BREADY => ap_const_logic_0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_ap_ready = ap_const_logic_1)) then 
                    grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln23_fu_306_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_ap_ready = ap_const_logic_1)) then 
                    grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_1_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_1_fu_114 <= ap_const_lv64_0;
            elsif (((icmp_ln23_fu_306_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_1_fu_114 <= add_ln23_fu_311_p2;
            end if; 
        end if;
    end process;

    phi_mul_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                phi_mul_fu_110 <= ap_const_lv62_0;
            elsif (((icmp_ln23_fu_306_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                phi_mul_fu_110 <= add_ln23_1_fu_301_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                col_size_read_reg_380 <= col_size;
                i_mat_read_reg_396 <= i_mat;
                i_vec_read_reg_401 <= i_vec;
                o_vec_read_reg_391 <= o_vec;
                select_ln17_1_reg_412 <= select_ln17_1_fu_230_p3;
                vec_size_read_reg_386 <= vec_size;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                gmem0_addr_reg_436 <= sext_ln31_fu_338_p1;
                phi_mul_load_reg_428 <= phi_mul_fu_110;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                sext_ln23_reg_423 <= sext_ln23_fu_290_p1;
                vec_size_cast_reg_418 <= vec_size_cast_fu_249_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state10, ap_CS_fsm_state2, ap_CS_fsm_state3, grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_ap_done, grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_ap_done, gmem0_0_AWREADY, gmem0_0_WREADY, gmem0_0_BVALID, icmp_ln23_fu_306_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln23_fu_306_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((gmem0_0_AWREADY = ap_const_logic_0) or (grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((gmem0_0_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((gmem0_0_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    add_ln23_1_fu_301_p2 <= std_logic_vector(unsigned(phi_mul_fu_110) + unsigned(vec_size_cast_reg_418));
    add_ln23_fu_311_p2 <= std_logic_vector(unsigned(i_1_fu_114) + unsigned(ap_const_lv64_1));
    add_ln31_fu_323_p2 <= std_logic_vector(unsigned(shl_ln31_fu_317_p2) + unsigned(o_vec_read_reg_391));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_ST_fsm_state10_blk_assign_proc : process(gmem0_0_BVALID)
    begin
        if ((gmem0_0_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_ap_done)
    begin
        if ((grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_ap_done, gmem0_0_AWREADY)
    begin
        if (((gmem0_0_AWREADY = ap_const_logic_0) or (grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_ap_done = ap_const_logic_0))) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(gmem0_0_WREADY)
    begin
        if ((gmem0_0_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state3, icmp_ln23_fu_306_p2)
    begin
        if (((icmp_ln23_fu_306_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3, icmp_ln23_fu_306_p2)
    begin
        if (((icmp_ln23_fu_306_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    empty_23_fu_218_p2 <= "1" when (unsigned(select_ln17_fu_210_p3) > unsigned(ap_const_lv32_FFFFFCFF)) else "0";
    empty_24_fu_252_p2 <= "1" when (signed(col_size_read_reg_380) > signed(ap_const_lv32_0)) else "0";
    empty_25_fu_270_p2 <= "1" when (unsigned(select_ln23_fu_262_p3) > unsigned(ap_const_lv32_FFFFF7FF)) else "0";
    empty_fu_198_p0 <= vec_size;
    empty_fu_198_p2 <= "1" when (signed(empty_fu_198_p0) > signed(ap_const_lv32_0)) else "0";

    gmem0_0_ARVALID_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARVALID)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem0_0_ARVALID <= grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_ARVALID;
        else 
            gmem0_0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    gmem0_0_AWLEN <= ap_const_lv64_1(32 - 1 downto 0);

    gmem0_0_AWVALID_assign_proc : process(ap_CS_fsm_state4, grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_ap_done, gmem0_0_AWREADY)
    begin
        if ((not(((gmem0_0_AWREADY = ap_const_logic_0) or (grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmem0_0_AWVALID <= ap_const_logic_1;
        else 
            gmem0_0_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_0_BREADY_assign_proc : process(ap_CS_fsm_state10, gmem0_0_BVALID)
    begin
        if (((gmem0_0_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem0_0_BREADY <= ap_const_logic_1;
        else 
            gmem0_0_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_0_RREADY_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_RREADY)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem0_0_RREADY <= grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_m_axi_gmem0_0_RREADY;
        else 
            gmem0_0_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    gmem0_0_WDATA <= grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_sum_out;

    gmem0_0_WVALID_assign_proc : process(ap_CS_fsm_state5, gmem0_0_WREADY)
    begin
        if (((gmem0_0_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            gmem0_0_WVALID <= ap_const_logic_1;
        else 
            gmem0_0_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_blk_n_AW_assign_proc : process(m_axi_gmem0_AWREADY, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            gmem0_blk_n_AW <= m_axi_gmem0_AWREADY;
        else 
            gmem0_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem0_blk_n_B_assign_proc : process(m_axi_gmem0_BVALID, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            gmem0_blk_n_B <= m_axi_gmem0_BVALID;
        else 
            gmem0_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem0_blk_n_W_assign_proc : process(m_axi_gmem0_WREADY, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            gmem0_blk_n_W <= m_axi_gmem0_WREADY;
        else 
            gmem0_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_0_ARVALID_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state3, grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARVALID)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmem1_0_ARVALID <= grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_ARVALID;
        else 
            gmem1_0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_0_RREADY_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state3, grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_RREADY)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmem1_0_RREADY <= grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_m_axi_gmem1_0_RREADY;
        else 
            gmem1_0_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_ap_start <= grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_ap_start_reg;
    grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_ap_start <= grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_ap_start_reg;
    icmp_ln23_fu_306_p2 <= "1" when (i_1_fu_114 = sext_ln23_reg_423) else "0";
    select_ln17_1_fu_230_p3 <= 
        xor_ln17_1_fu_224_p2 when (empty_23_fu_218_p2(0) = '1') else 
        ap_const_lv32_300;
    select_ln17_fu_210_p3 <= 
        xor_ln17_fu_204_p2 when (empty_fu_198_p2(0) = '1') else 
        ap_const_lv32_FFFFFFFF;
    select_ln23_1_fu_282_p3 <= 
        xor_ln23_1_fu_276_p2 when (empty_25_fu_270_p2(0) = '1') else 
        ap_const_lv32_800;
    select_ln23_fu_262_p3 <= 
        xor_ln23_fu_257_p2 when (empty_24_fu_252_p2(0) = '1') else 
        ap_const_lv32_FFFFFFFF;
        sext_ln23_fu_290_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln23_1_fu_282_p3),64));

        sext_ln31_fu_338_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln2_fu_328_p4),64));

    shl_ln31_fu_317_p2 <= std_logic_vector(shift_left(unsigned(i_1_fu_114),to_integer(unsigned('0' & ap_const_lv64_2(31-1 downto 0)))));
    trunc_ln2_fu_328_p4 <= add_ln31_fu_323_p2(63 downto 2);

    vec_local_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_vec_local_address0, grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_vec_local_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            vec_local_address0 <= grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_vec_local_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            vec_local_address0 <= grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_vec_local_address0;
        else 
            vec_local_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    vec_local_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_vec_local_ce0, grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_vec_local_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            vec_local_ce0 <= grp_kernel_matmul_Pipeline_VITIS_LOOP_26_3_fu_187_vec_local_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            vec_local_ce0 <= grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_vec_local_ce0;
        else 
            vec_local_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    vec_local_we0_assign_proc : process(ap_CS_fsm_state2, grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_vec_local_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            vec_local_we0 <= grp_kernel_matmul_Pipeline_VITIS_LOOP_17_1_fu_176_vec_local_we0;
        else 
            vec_local_we0 <= ap_const_logic_0;
        end if; 
    end process;

        vec_size_cast_fu_249_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(vec_size_read_reg_386),62));

    xor_ln17_1_fu_224_p2 <= (select_ln17_fu_210_p3 xor ap_const_lv32_FFFFFFFF);
    xor_ln17_fu_204_p0 <= vec_size;
    xor_ln17_fu_204_p2 <= (xor_ln17_fu_204_p0 xor ap_const_lv32_FFFFFFFF);
    xor_ln23_1_fu_276_p2 <= (select_ln23_fu_262_p3 xor ap_const_lv32_FFFFFFFF);
    xor_ln23_fu_257_p2 <= (col_size_read_reg_380 xor ap_const_lv32_FFFFFFFF);
end behav;
