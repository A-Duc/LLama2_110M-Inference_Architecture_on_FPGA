// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module kernel_mhsa_kernel_mhsa_Pipeline_VITIS_LOOP_27_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem1_0_AWVALID,
        m_axi_gmem1_0_AWREADY,
        m_axi_gmem1_0_AWADDR,
        m_axi_gmem1_0_AWID,
        m_axi_gmem1_0_AWLEN,
        m_axi_gmem1_0_AWSIZE,
        m_axi_gmem1_0_AWBURST,
        m_axi_gmem1_0_AWLOCK,
        m_axi_gmem1_0_AWCACHE,
        m_axi_gmem1_0_AWPROT,
        m_axi_gmem1_0_AWQOS,
        m_axi_gmem1_0_AWREGION,
        m_axi_gmem1_0_AWUSER,
        m_axi_gmem1_0_WVALID,
        m_axi_gmem1_0_WREADY,
        m_axi_gmem1_0_WDATA,
        m_axi_gmem1_0_WSTRB,
        m_axi_gmem1_0_WLAST,
        m_axi_gmem1_0_WID,
        m_axi_gmem1_0_WUSER,
        m_axi_gmem1_0_ARVALID,
        m_axi_gmem1_0_ARREADY,
        m_axi_gmem1_0_ARADDR,
        m_axi_gmem1_0_ARID,
        m_axi_gmem1_0_ARLEN,
        m_axi_gmem1_0_ARSIZE,
        m_axi_gmem1_0_ARBURST,
        m_axi_gmem1_0_ARLOCK,
        m_axi_gmem1_0_ARCACHE,
        m_axi_gmem1_0_ARPROT,
        m_axi_gmem1_0_ARQOS,
        m_axi_gmem1_0_ARREGION,
        m_axi_gmem1_0_ARUSER,
        m_axi_gmem1_0_RVALID,
        m_axi_gmem1_0_RREADY,
        m_axi_gmem1_0_RDATA,
        m_axi_gmem1_0_RLAST,
        m_axi_gmem1_0_RID,
        m_axi_gmem1_0_RFIFONUM,
        m_axi_gmem1_0_RUSER,
        m_axi_gmem1_0_RRESP,
        m_axi_gmem1_0_BVALID,
        m_axi_gmem1_0_BREADY,
        m_axi_gmem1_0_BRESP,
        m_axi_gmem1_0_BID,
        m_axi_gmem1_0_BUSER,
        sext_ln27,
        out_rms_vec_7_address0,
        out_rms_vec_7_ce0,
        out_rms_vec_7_we0,
        out_rms_vec_7_d0,
        out_rms_vec_6_address0,
        out_rms_vec_6_ce0,
        out_rms_vec_6_we0,
        out_rms_vec_6_d0,
        out_rms_vec_5_address0,
        out_rms_vec_5_ce0,
        out_rms_vec_5_we0,
        out_rms_vec_5_d0,
        out_rms_vec_4_address0,
        out_rms_vec_4_ce0,
        out_rms_vec_4_we0,
        out_rms_vec_4_d0,
        out_rms_vec_3_address0,
        out_rms_vec_3_ce0,
        out_rms_vec_3_we0,
        out_rms_vec_3_d0,
        out_rms_vec_2_address0,
        out_rms_vec_2_ce0,
        out_rms_vec_2_we0,
        out_rms_vec_2_d0,
        out_rms_vec_1_address0,
        out_rms_vec_1_ce0,
        out_rms_vec_1_we0,
        out_rms_vec_1_d0,
        out_rms_vec_address0,
        out_rms_vec_ce0,
        out_rms_vec_we0,
        out_rms_vec_d0,
        current_input_address0,
        current_input_ce0,
        current_input_q0,
        current_input_8_address0,
        current_input_8_ce0,
        current_input_8_q0,
        current_input_9_address0,
        current_input_9_ce0,
        current_input_9_q0,
        current_input_10_address0,
        current_input_10_ce0,
        current_input_10_q0,
        current_input_11_address0,
        current_input_11_ce0,
        current_input_11_q0,
        current_input_12_address0,
        current_input_12_ce0,
        current_input_12_q0,
        current_input_13_address0,
        current_input_13_ce0,
        current_input_13_q0,
        current_input_14_address0,
        current_input_14_ce0,
        current_input_14_q0,
        norm,
        grp_fu_3617_p_din0,
        grp_fu_3617_p_din1,
        grp_fu_3617_p_dout0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem1_0_AWVALID;
input   m_axi_gmem1_0_AWREADY;
output  [63:0] m_axi_gmem1_0_AWADDR;
output  [0:0] m_axi_gmem1_0_AWID;
output  [31:0] m_axi_gmem1_0_AWLEN;
output  [2:0] m_axi_gmem1_0_AWSIZE;
output  [1:0] m_axi_gmem1_0_AWBURST;
output  [1:0] m_axi_gmem1_0_AWLOCK;
output  [3:0] m_axi_gmem1_0_AWCACHE;
output  [2:0] m_axi_gmem1_0_AWPROT;
output  [3:0] m_axi_gmem1_0_AWQOS;
output  [3:0] m_axi_gmem1_0_AWREGION;
output  [0:0] m_axi_gmem1_0_AWUSER;
output   m_axi_gmem1_0_WVALID;
input   m_axi_gmem1_0_WREADY;
output  [31:0] m_axi_gmem1_0_WDATA;
output  [3:0] m_axi_gmem1_0_WSTRB;
output   m_axi_gmem1_0_WLAST;
output  [0:0] m_axi_gmem1_0_WID;
output  [0:0] m_axi_gmem1_0_WUSER;
output   m_axi_gmem1_0_ARVALID;
input   m_axi_gmem1_0_ARREADY;
output  [63:0] m_axi_gmem1_0_ARADDR;
output  [0:0] m_axi_gmem1_0_ARID;
output  [31:0] m_axi_gmem1_0_ARLEN;
output  [2:0] m_axi_gmem1_0_ARSIZE;
output  [1:0] m_axi_gmem1_0_ARBURST;
output  [1:0] m_axi_gmem1_0_ARLOCK;
output  [3:0] m_axi_gmem1_0_ARCACHE;
output  [2:0] m_axi_gmem1_0_ARPROT;
output  [3:0] m_axi_gmem1_0_ARQOS;
output  [3:0] m_axi_gmem1_0_ARREGION;
output  [0:0] m_axi_gmem1_0_ARUSER;
input   m_axi_gmem1_0_RVALID;
output   m_axi_gmem1_0_RREADY;
input  [31:0] m_axi_gmem1_0_RDATA;
input   m_axi_gmem1_0_RLAST;
input  [0:0] m_axi_gmem1_0_RID;
input  [12:0] m_axi_gmem1_0_RFIFONUM;
input  [0:0] m_axi_gmem1_0_RUSER;
input  [1:0] m_axi_gmem1_0_RRESP;
input   m_axi_gmem1_0_BVALID;
output   m_axi_gmem1_0_BREADY;
input  [1:0] m_axi_gmem1_0_BRESP;
input  [0:0] m_axi_gmem1_0_BID;
input  [0:0] m_axi_gmem1_0_BUSER;
input  [61:0] sext_ln27;
output  [6:0] out_rms_vec_7_address0;
output   out_rms_vec_7_ce0;
output   out_rms_vec_7_we0;
output  [31:0] out_rms_vec_7_d0;
output  [6:0] out_rms_vec_6_address0;
output   out_rms_vec_6_ce0;
output   out_rms_vec_6_we0;
output  [31:0] out_rms_vec_6_d0;
output  [6:0] out_rms_vec_5_address0;
output   out_rms_vec_5_ce0;
output   out_rms_vec_5_we0;
output  [31:0] out_rms_vec_5_d0;
output  [6:0] out_rms_vec_4_address0;
output   out_rms_vec_4_ce0;
output   out_rms_vec_4_we0;
output  [31:0] out_rms_vec_4_d0;
output  [6:0] out_rms_vec_3_address0;
output   out_rms_vec_3_ce0;
output   out_rms_vec_3_we0;
output  [31:0] out_rms_vec_3_d0;
output  [6:0] out_rms_vec_2_address0;
output   out_rms_vec_2_ce0;
output   out_rms_vec_2_we0;
output  [31:0] out_rms_vec_2_d0;
output  [6:0] out_rms_vec_1_address0;
output   out_rms_vec_1_ce0;
output   out_rms_vec_1_we0;
output  [31:0] out_rms_vec_1_d0;
output  [6:0] out_rms_vec_address0;
output   out_rms_vec_ce0;
output   out_rms_vec_we0;
output  [31:0] out_rms_vec_d0;
output  [6:0] current_input_address0;
output   current_input_ce0;
input  [31:0] current_input_q0;
output  [6:0] current_input_8_address0;
output   current_input_8_ce0;
input  [31:0] current_input_8_q0;
output  [6:0] current_input_9_address0;
output   current_input_9_ce0;
input  [31:0] current_input_9_q0;
output  [6:0] current_input_10_address0;
output   current_input_10_ce0;
input  [31:0] current_input_10_q0;
output  [6:0] current_input_11_address0;
output   current_input_11_ce0;
input  [31:0] current_input_11_q0;
output  [6:0] current_input_12_address0;
output   current_input_12_ce0;
input  [31:0] current_input_12_q0;
output  [6:0] current_input_13_address0;
output   current_input_13_ce0;
input  [31:0] current_input_13_q0;
output  [6:0] current_input_14_address0;
output   current_input_14_ce0;
input  [31:0] current_input_14_q0;
input  [31:0] norm;
output  [31:0] grp_fu_3617_p_din0;
output  [31:0] grp_fu_3617_p_din1;
input  [31:0] grp_fu_3617_p_dout0;

reg ap_idle;
reg m_axi_gmem1_0_RREADY;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
reg    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln27_fu_360_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem1_blk_n_R;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [2:0] trunc_ln27_fu_366_p1;
reg   [2:0] trunc_ln27_reg_565;
reg   [2:0] trunc_ln27_reg_565_pp0_iter1_reg;
reg   [2:0] trunc_ln27_reg_565_pp0_iter2_reg;
reg   [2:0] trunc_ln27_reg_565_pp0_iter3_reg;
reg   [2:0] trunc_ln27_reg_565_pp0_iter4_reg;
reg   [2:0] trunc_ln27_reg_565_pp0_iter5_reg;
reg   [6:0] out_rms_vec_addr_reg_610;
reg   [6:0] out_rms_vec_addr_reg_610_pp0_iter1_reg;
reg   [6:0] out_rms_vec_addr_reg_610_pp0_iter2_reg;
reg   [6:0] out_rms_vec_addr_reg_610_pp0_iter3_reg;
reg   [6:0] out_rms_vec_addr_reg_610_pp0_iter4_reg;
reg   [6:0] out_rms_vec_addr_reg_610_pp0_iter5_reg;
reg   [6:0] out_rms_vec_1_addr_reg_616;
reg   [6:0] out_rms_vec_1_addr_reg_616_pp0_iter1_reg;
reg   [6:0] out_rms_vec_1_addr_reg_616_pp0_iter2_reg;
reg   [6:0] out_rms_vec_1_addr_reg_616_pp0_iter3_reg;
reg   [6:0] out_rms_vec_1_addr_reg_616_pp0_iter4_reg;
reg   [6:0] out_rms_vec_1_addr_reg_616_pp0_iter5_reg;
reg   [6:0] out_rms_vec_2_addr_reg_622;
reg   [6:0] out_rms_vec_2_addr_reg_622_pp0_iter1_reg;
reg   [6:0] out_rms_vec_2_addr_reg_622_pp0_iter2_reg;
reg   [6:0] out_rms_vec_2_addr_reg_622_pp0_iter3_reg;
reg   [6:0] out_rms_vec_2_addr_reg_622_pp0_iter4_reg;
reg   [6:0] out_rms_vec_2_addr_reg_622_pp0_iter5_reg;
reg   [6:0] out_rms_vec_3_addr_reg_628;
reg   [6:0] out_rms_vec_3_addr_reg_628_pp0_iter1_reg;
reg   [6:0] out_rms_vec_3_addr_reg_628_pp0_iter2_reg;
reg   [6:0] out_rms_vec_3_addr_reg_628_pp0_iter3_reg;
reg   [6:0] out_rms_vec_3_addr_reg_628_pp0_iter4_reg;
reg   [6:0] out_rms_vec_3_addr_reg_628_pp0_iter5_reg;
reg   [6:0] out_rms_vec_4_addr_reg_634;
reg   [6:0] out_rms_vec_4_addr_reg_634_pp0_iter1_reg;
reg   [6:0] out_rms_vec_4_addr_reg_634_pp0_iter2_reg;
reg   [6:0] out_rms_vec_4_addr_reg_634_pp0_iter3_reg;
reg   [6:0] out_rms_vec_4_addr_reg_634_pp0_iter4_reg;
reg   [6:0] out_rms_vec_4_addr_reg_634_pp0_iter5_reg;
reg   [6:0] out_rms_vec_5_addr_reg_640;
reg   [6:0] out_rms_vec_5_addr_reg_640_pp0_iter1_reg;
reg   [6:0] out_rms_vec_5_addr_reg_640_pp0_iter2_reg;
reg   [6:0] out_rms_vec_5_addr_reg_640_pp0_iter3_reg;
reg   [6:0] out_rms_vec_5_addr_reg_640_pp0_iter4_reg;
reg   [6:0] out_rms_vec_5_addr_reg_640_pp0_iter5_reg;
reg   [6:0] out_rms_vec_6_addr_reg_646;
reg   [6:0] out_rms_vec_6_addr_reg_646_pp0_iter1_reg;
reg   [6:0] out_rms_vec_6_addr_reg_646_pp0_iter2_reg;
reg   [6:0] out_rms_vec_6_addr_reg_646_pp0_iter3_reg;
reg   [6:0] out_rms_vec_6_addr_reg_646_pp0_iter4_reg;
reg   [6:0] out_rms_vec_6_addr_reg_646_pp0_iter5_reg;
reg   [6:0] out_rms_vec_7_addr_reg_652;
reg   [6:0] out_rms_vec_7_addr_reg_652_pp0_iter1_reg;
reg   [6:0] out_rms_vec_7_addr_reg_652_pp0_iter2_reg;
reg   [6:0] out_rms_vec_7_addr_reg_652_pp0_iter3_reg;
reg   [6:0] out_rms_vec_7_addr_reg_652_pp0_iter4_reg;
reg   [6:0] out_rms_vec_7_addr_reg_652_pp0_iter5_reg;
wire   [31:0] tmp_2_fu_455_p19;
reg   [31:0] tmp_2_reg_658;
reg   [31:0] mul10_i_reg_664;
wire   [31:0] bitcast_ln28_fu_508_p1;
wire   [31:0] grp_fu_335_p2;
reg   [31:0] mul13_i_reg_675;
wire   [63:0] zext_ln27_fu_380_p1;
reg   [9:0] i_fu_110;
wire   [9:0] add_ln27_fu_354_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_i_5;
reg    current_input_ce0_local;
reg    current_input_8_ce0_local;
reg    current_input_9_ce0_local;
reg    current_input_10_ce0_local;
reg    current_input_11_ce0_local;
reg    current_input_12_ce0_local;
reg    current_input_13_ce0_local;
reg    current_input_14_ce0_local;
reg    out_rms_vec_6_we0_local;
wire    ap_block_pp0_stage0_11001_grp0;
reg    ap_block_pp0_stage0_subdone_grp0_done_reg;
wire    ap_block_pp0_stage0_subdone_grp0;
wire    ap_block_pp0_stage0_grp0;
reg    out_rms_vec_6_ce0_local;
reg    out_rms_vec_5_we0_local;
reg    out_rms_vec_5_ce0_local;
reg    out_rms_vec_4_we0_local;
reg    out_rms_vec_4_ce0_local;
reg    out_rms_vec_3_we0_local;
reg    out_rms_vec_3_ce0_local;
reg    out_rms_vec_2_we0_local;
reg    out_rms_vec_2_ce0_local;
reg    out_rms_vec_1_we0_local;
reg    out_rms_vec_1_ce0_local;
reg    out_rms_vec_we0_local;
reg    out_rms_vec_ce0_local;
reg    out_rms_vec_7_we0_local;
reg    out_rms_vec_7_ce0_local;
reg   [31:0] grp_fu_331_p0;
reg   [31:0] grp_fu_331_p0_keep;
reg   [31:0] grp_fu_331_p1;
reg   [31:0] grp_fu_331_p1_keep;
reg   [31:0] grp_fu_335_p0;
reg   [31:0] grp_fu_335_p1;
wire   [6:0] lshr_ln3_fu_370_p4;
wire   [31:0] tmp_2_fu_455_p17;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [2:0] tmp_2_fu_455_p1;
wire   [2:0] tmp_2_fu_455_p3;
wire   [2:0] tmp_2_fu_455_p5;
wire   [2:0] tmp_2_fu_455_p7;
wire  signed [2:0] tmp_2_fu_455_p9;
wire  signed [2:0] tmp_2_fu_455_p11;
wire  signed [2:0] tmp_2_fu_455_p13;
wire  signed [2:0] tmp_2_fu_455_p15;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 i_fu_110 = 10'd0;
#0 ap_block_pp0_stage0_subdone_grp0_done_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

kernel_mhsa_fmul_32ns_32ns_32_1_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_1_primitive_dsp_1_U25(
    .din0(grp_fu_335_p0),
    .din1(grp_fu_335_p1),
    .dout(grp_fu_335_p2)
);

(* dissolve_hierarchy = "yes" *) kernel_mhsa_sparsemux_17_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 3'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 3'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 3'h7 ),
    .din7_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
sparsemux_17_3_32_1_1_U26(
    .din0(current_input_q0),
    .din1(current_input_8_q0),
    .din2(current_input_9_q0),
    .din3(current_input_10_q0),
    .din4(current_input_11_q0),
    .din5(current_input_12_q0),
    .din6(current_input_13_q0),
    .din7(current_input_14_q0),
    .def(tmp_2_fu_455_p17),
    .sel(trunc_ln27_reg_565),
    .dout(tmp_2_fu_455_p19)
);

kernel_mhsa_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp0)) begin
            ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln27_fu_360_p2 == 1'd0))) begin
            i_fu_110 <= add_ln27_fu_354_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_110 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        out_rms_vec_1_addr_reg_616 <= zext_ln27_fu_380_p1;
        out_rms_vec_1_addr_reg_616_pp0_iter1_reg <= out_rms_vec_1_addr_reg_616;
        out_rms_vec_2_addr_reg_622 <= zext_ln27_fu_380_p1;
        out_rms_vec_2_addr_reg_622_pp0_iter1_reg <= out_rms_vec_2_addr_reg_622;
        out_rms_vec_3_addr_reg_628 <= zext_ln27_fu_380_p1;
        out_rms_vec_3_addr_reg_628_pp0_iter1_reg <= out_rms_vec_3_addr_reg_628;
        out_rms_vec_4_addr_reg_634 <= zext_ln27_fu_380_p1;
        out_rms_vec_4_addr_reg_634_pp0_iter1_reg <= out_rms_vec_4_addr_reg_634;
        out_rms_vec_5_addr_reg_640 <= zext_ln27_fu_380_p1;
        out_rms_vec_5_addr_reg_640_pp0_iter1_reg <= out_rms_vec_5_addr_reg_640;
        out_rms_vec_6_addr_reg_646 <= zext_ln27_fu_380_p1;
        out_rms_vec_6_addr_reg_646_pp0_iter1_reg <= out_rms_vec_6_addr_reg_646;
        out_rms_vec_7_addr_reg_652 <= zext_ln27_fu_380_p1;
        out_rms_vec_7_addr_reg_652_pp0_iter1_reg <= out_rms_vec_7_addr_reg_652;
        out_rms_vec_addr_reg_610 <= zext_ln27_fu_380_p1;
        out_rms_vec_addr_reg_610_pp0_iter1_reg <= out_rms_vec_addr_reg_610;
        tmp_2_reg_658 <= tmp_2_fu_455_p19;
        trunc_ln27_reg_565 <= trunc_ln27_fu_366_p1;
        trunc_ln27_reg_565_pp0_iter1_reg <= trunc_ln27_reg_565;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        mul10_i_reg_664 <= grp_fu_3617_p_dout0;
        mul13_i_reg_675 <= grp_fu_335_p2;
        out_rms_vec_1_addr_reg_616_pp0_iter2_reg <= out_rms_vec_1_addr_reg_616_pp0_iter1_reg;
        out_rms_vec_1_addr_reg_616_pp0_iter3_reg <= out_rms_vec_1_addr_reg_616_pp0_iter2_reg;
        out_rms_vec_1_addr_reg_616_pp0_iter4_reg <= out_rms_vec_1_addr_reg_616_pp0_iter3_reg;
        out_rms_vec_1_addr_reg_616_pp0_iter5_reg <= out_rms_vec_1_addr_reg_616_pp0_iter4_reg;
        out_rms_vec_2_addr_reg_622_pp0_iter2_reg <= out_rms_vec_2_addr_reg_622_pp0_iter1_reg;
        out_rms_vec_2_addr_reg_622_pp0_iter3_reg <= out_rms_vec_2_addr_reg_622_pp0_iter2_reg;
        out_rms_vec_2_addr_reg_622_pp0_iter4_reg <= out_rms_vec_2_addr_reg_622_pp0_iter3_reg;
        out_rms_vec_2_addr_reg_622_pp0_iter5_reg <= out_rms_vec_2_addr_reg_622_pp0_iter4_reg;
        out_rms_vec_3_addr_reg_628_pp0_iter2_reg <= out_rms_vec_3_addr_reg_628_pp0_iter1_reg;
        out_rms_vec_3_addr_reg_628_pp0_iter3_reg <= out_rms_vec_3_addr_reg_628_pp0_iter2_reg;
        out_rms_vec_3_addr_reg_628_pp0_iter4_reg <= out_rms_vec_3_addr_reg_628_pp0_iter3_reg;
        out_rms_vec_3_addr_reg_628_pp0_iter5_reg <= out_rms_vec_3_addr_reg_628_pp0_iter4_reg;
        out_rms_vec_4_addr_reg_634_pp0_iter2_reg <= out_rms_vec_4_addr_reg_634_pp0_iter1_reg;
        out_rms_vec_4_addr_reg_634_pp0_iter3_reg <= out_rms_vec_4_addr_reg_634_pp0_iter2_reg;
        out_rms_vec_4_addr_reg_634_pp0_iter4_reg <= out_rms_vec_4_addr_reg_634_pp0_iter3_reg;
        out_rms_vec_4_addr_reg_634_pp0_iter5_reg <= out_rms_vec_4_addr_reg_634_pp0_iter4_reg;
        out_rms_vec_5_addr_reg_640_pp0_iter2_reg <= out_rms_vec_5_addr_reg_640_pp0_iter1_reg;
        out_rms_vec_5_addr_reg_640_pp0_iter3_reg <= out_rms_vec_5_addr_reg_640_pp0_iter2_reg;
        out_rms_vec_5_addr_reg_640_pp0_iter4_reg <= out_rms_vec_5_addr_reg_640_pp0_iter3_reg;
        out_rms_vec_5_addr_reg_640_pp0_iter5_reg <= out_rms_vec_5_addr_reg_640_pp0_iter4_reg;
        out_rms_vec_6_addr_reg_646_pp0_iter2_reg <= out_rms_vec_6_addr_reg_646_pp0_iter1_reg;
        out_rms_vec_6_addr_reg_646_pp0_iter3_reg <= out_rms_vec_6_addr_reg_646_pp0_iter2_reg;
        out_rms_vec_6_addr_reg_646_pp0_iter4_reg <= out_rms_vec_6_addr_reg_646_pp0_iter3_reg;
        out_rms_vec_6_addr_reg_646_pp0_iter5_reg <= out_rms_vec_6_addr_reg_646_pp0_iter4_reg;
        out_rms_vec_7_addr_reg_652_pp0_iter2_reg <= out_rms_vec_7_addr_reg_652_pp0_iter1_reg;
        out_rms_vec_7_addr_reg_652_pp0_iter3_reg <= out_rms_vec_7_addr_reg_652_pp0_iter2_reg;
        out_rms_vec_7_addr_reg_652_pp0_iter4_reg <= out_rms_vec_7_addr_reg_652_pp0_iter3_reg;
        out_rms_vec_7_addr_reg_652_pp0_iter5_reg <= out_rms_vec_7_addr_reg_652_pp0_iter4_reg;
        out_rms_vec_addr_reg_610_pp0_iter2_reg <= out_rms_vec_addr_reg_610_pp0_iter1_reg;
        out_rms_vec_addr_reg_610_pp0_iter3_reg <= out_rms_vec_addr_reg_610_pp0_iter2_reg;
        out_rms_vec_addr_reg_610_pp0_iter4_reg <= out_rms_vec_addr_reg_610_pp0_iter3_reg;
        out_rms_vec_addr_reg_610_pp0_iter5_reg <= out_rms_vec_addr_reg_610_pp0_iter4_reg;
        trunc_ln27_reg_565_pp0_iter2_reg <= trunc_ln27_reg_565_pp0_iter1_reg;
        trunc_ln27_reg_565_pp0_iter3_reg <= trunc_ln27_reg_565_pp0_iter2_reg;
        trunc_ln27_reg_565_pp0_iter4_reg <= trunc_ln27_reg_565_pp0_iter3_reg;
        trunc_ln27_reg_565_pp0_iter5_reg <= trunc_ln27_reg_565_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_331_p0_keep <= tmp_2_reg_658;
        grp_fu_331_p1_keep <= norm;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_335_p0 <= mul10_i_reg_664;
        grp_fu_335_p1 <= bitcast_ln28_fu_508_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln27_fu_360_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_5 = 10'd0;
    end else begin
        ap_sig_allocacmp_i_5 = i_fu_110;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln27_fu_360_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_input_10_ce0_local = 1'b1;
    end else begin
        current_input_10_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln27_fu_360_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_input_11_ce0_local = 1'b1;
    end else begin
        current_input_11_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln27_fu_360_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_input_12_ce0_local = 1'b1;
    end else begin
        current_input_12_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln27_fu_360_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_input_13_ce0_local = 1'b1;
    end else begin
        current_input_13_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln27_fu_360_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_input_14_ce0_local = 1'b1;
    end else begin
        current_input_14_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln27_fu_360_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_input_8_ce0_local = 1'b1;
    end else begin
        current_input_8_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln27_fu_360_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_input_9_ce0_local = 1'b1;
    end else begin
        current_input_9_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln27_fu_360_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_input_ce0_local = 1'b1;
    end else begin
        current_input_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        gmem1_blk_n_R = m_axi_gmem1_0_RVALID;
    end else begin
        gmem1_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_331_p0 = tmp_2_reg_658;
    end else begin
        grp_fu_331_p0 = grp_fu_331_p0_keep;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_331_p1 = norm;
    end else begin
        grp_fu_331_p1 = grp_fu_331_p1_keep;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem1_0_RREADY = 1'b1;
    end else begin
        m_axi_gmem1_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (trunc_ln27_reg_565_pp0_iter5_reg == 3'd1) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        out_rms_vec_1_ce0_local = 1'b1;
    end else begin
        out_rms_vec_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (trunc_ln27_reg_565_pp0_iter5_reg == 3'd1) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        out_rms_vec_1_we0_local = 1'b1;
    end else begin
        out_rms_vec_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (trunc_ln27_reg_565_pp0_iter5_reg == 3'd2) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        out_rms_vec_2_ce0_local = 1'b1;
    end else begin
        out_rms_vec_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (trunc_ln27_reg_565_pp0_iter5_reg == 3'd2) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        out_rms_vec_2_we0_local = 1'b1;
    end else begin
        out_rms_vec_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (trunc_ln27_reg_565_pp0_iter5_reg == 3'd3) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        out_rms_vec_3_ce0_local = 1'b1;
    end else begin
        out_rms_vec_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (trunc_ln27_reg_565_pp0_iter5_reg == 3'd3) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        out_rms_vec_3_we0_local = 1'b1;
    end else begin
        out_rms_vec_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (trunc_ln27_reg_565_pp0_iter5_reg == 3'd4) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        out_rms_vec_4_ce0_local = 1'b1;
    end else begin
        out_rms_vec_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (trunc_ln27_reg_565_pp0_iter5_reg == 3'd4) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        out_rms_vec_4_we0_local = 1'b1;
    end else begin
        out_rms_vec_4_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (trunc_ln27_reg_565_pp0_iter5_reg == 3'd5) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        out_rms_vec_5_ce0_local = 1'b1;
    end else begin
        out_rms_vec_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (trunc_ln27_reg_565_pp0_iter5_reg == 3'd5) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        out_rms_vec_5_we0_local = 1'b1;
    end else begin
        out_rms_vec_5_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (trunc_ln27_reg_565_pp0_iter5_reg == 3'd6) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        out_rms_vec_6_ce0_local = 1'b1;
    end else begin
        out_rms_vec_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (trunc_ln27_reg_565_pp0_iter5_reg == 3'd6) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        out_rms_vec_6_we0_local = 1'b1;
    end else begin
        out_rms_vec_6_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (trunc_ln27_reg_565_pp0_iter5_reg == 3'd7) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        out_rms_vec_7_ce0_local = 1'b1;
    end else begin
        out_rms_vec_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (trunc_ln27_reg_565_pp0_iter5_reg == 3'd7) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        out_rms_vec_7_we0_local = 1'b1;
    end else begin
        out_rms_vec_7_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (trunc_ln27_reg_565_pp0_iter5_reg == 3'd0) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        out_rms_vec_ce0_local = 1'b1;
    end else begin
        out_rms_vec_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (trunc_ln27_reg_565_pp0_iter5_reg == 3'd0) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        out_rms_vec_we0_local = 1'b1;
    end else begin
        out_rms_vec_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln27_fu_354_p2 = (ap_sig_allocacmp_i_5 + 10'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter4));
end

assign ap_block_pp0_stage0_11001_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter4));
end

assign ap_block_pp0_stage0_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter4 = (m_axi_gmem1_0_RVALID == 1'b0);
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign bitcast_ln28_fu_508_p1 = m_axi_gmem1_0_RDATA;

assign current_input_10_address0 = zext_ln27_fu_380_p1;

assign current_input_10_ce0 = current_input_10_ce0_local;

assign current_input_11_address0 = zext_ln27_fu_380_p1;

assign current_input_11_ce0 = current_input_11_ce0_local;

assign current_input_12_address0 = zext_ln27_fu_380_p1;

assign current_input_12_ce0 = current_input_12_ce0_local;

assign current_input_13_address0 = zext_ln27_fu_380_p1;

assign current_input_13_ce0 = current_input_13_ce0_local;

assign current_input_14_address0 = zext_ln27_fu_380_p1;

assign current_input_14_ce0 = current_input_14_ce0_local;

assign current_input_8_address0 = zext_ln27_fu_380_p1;

assign current_input_8_ce0 = current_input_8_ce0_local;

assign current_input_9_address0 = zext_ln27_fu_380_p1;

assign current_input_9_ce0 = current_input_9_ce0_local;

assign current_input_address0 = zext_ln27_fu_380_p1;

assign current_input_ce0 = current_input_ce0_local;

assign grp_fu_3617_p_din0 = grp_fu_331_p0;

assign grp_fu_3617_p_din1 = grp_fu_331_p1;

assign icmp_ln27_fu_360_p2 = ((ap_sig_allocacmp_i_5 == 10'd768) ? 1'b1 : 1'b0);

assign lshr_ln3_fu_370_p4 = {{ap_sig_allocacmp_i_5[9:3]}};

assign m_axi_gmem1_0_ARADDR = 64'd0;

assign m_axi_gmem1_0_ARBURST = 2'd0;

assign m_axi_gmem1_0_ARCACHE = 4'd0;

assign m_axi_gmem1_0_ARID = 1'd0;

assign m_axi_gmem1_0_ARLEN = 32'd0;

assign m_axi_gmem1_0_ARLOCK = 2'd0;

assign m_axi_gmem1_0_ARPROT = 3'd0;

assign m_axi_gmem1_0_ARQOS = 4'd0;

assign m_axi_gmem1_0_ARREGION = 4'd0;

assign m_axi_gmem1_0_ARSIZE = 3'd0;

assign m_axi_gmem1_0_ARUSER = 1'd0;

assign m_axi_gmem1_0_ARVALID = 1'b0;

assign m_axi_gmem1_0_AWADDR = 64'd0;

assign m_axi_gmem1_0_AWBURST = 2'd0;

assign m_axi_gmem1_0_AWCACHE = 4'd0;

assign m_axi_gmem1_0_AWID = 1'd0;

assign m_axi_gmem1_0_AWLEN = 32'd0;

assign m_axi_gmem1_0_AWLOCK = 2'd0;

assign m_axi_gmem1_0_AWPROT = 3'd0;

assign m_axi_gmem1_0_AWQOS = 4'd0;

assign m_axi_gmem1_0_AWREGION = 4'd0;

assign m_axi_gmem1_0_AWSIZE = 3'd0;

assign m_axi_gmem1_0_AWUSER = 1'd0;

assign m_axi_gmem1_0_AWVALID = 1'b0;

assign m_axi_gmem1_0_BREADY = 1'b0;

assign m_axi_gmem1_0_WDATA = 32'd0;

assign m_axi_gmem1_0_WID = 1'd0;

assign m_axi_gmem1_0_WLAST = 1'b0;

assign m_axi_gmem1_0_WSTRB = 4'd0;

assign m_axi_gmem1_0_WUSER = 1'd0;

assign m_axi_gmem1_0_WVALID = 1'b0;

assign out_rms_vec_1_address0 = out_rms_vec_1_addr_reg_616_pp0_iter5_reg;

assign out_rms_vec_1_ce0 = out_rms_vec_1_ce0_local;

assign out_rms_vec_1_d0 = mul13_i_reg_675;

assign out_rms_vec_1_we0 = out_rms_vec_1_we0_local;

assign out_rms_vec_2_address0 = out_rms_vec_2_addr_reg_622_pp0_iter5_reg;

assign out_rms_vec_2_ce0 = out_rms_vec_2_ce0_local;

assign out_rms_vec_2_d0 = mul13_i_reg_675;

assign out_rms_vec_2_we0 = out_rms_vec_2_we0_local;

assign out_rms_vec_3_address0 = out_rms_vec_3_addr_reg_628_pp0_iter5_reg;

assign out_rms_vec_3_ce0 = out_rms_vec_3_ce0_local;

assign out_rms_vec_3_d0 = mul13_i_reg_675;

assign out_rms_vec_3_we0 = out_rms_vec_3_we0_local;

assign out_rms_vec_4_address0 = out_rms_vec_4_addr_reg_634_pp0_iter5_reg;

assign out_rms_vec_4_ce0 = out_rms_vec_4_ce0_local;

assign out_rms_vec_4_d0 = mul13_i_reg_675;

assign out_rms_vec_4_we0 = out_rms_vec_4_we0_local;

assign out_rms_vec_5_address0 = out_rms_vec_5_addr_reg_640_pp0_iter5_reg;

assign out_rms_vec_5_ce0 = out_rms_vec_5_ce0_local;

assign out_rms_vec_5_d0 = mul13_i_reg_675;

assign out_rms_vec_5_we0 = out_rms_vec_5_we0_local;

assign out_rms_vec_6_address0 = out_rms_vec_6_addr_reg_646_pp0_iter5_reg;

assign out_rms_vec_6_ce0 = out_rms_vec_6_ce0_local;

assign out_rms_vec_6_d0 = mul13_i_reg_675;

assign out_rms_vec_6_we0 = out_rms_vec_6_we0_local;

assign out_rms_vec_7_address0 = out_rms_vec_7_addr_reg_652_pp0_iter5_reg;

assign out_rms_vec_7_ce0 = out_rms_vec_7_ce0_local;

assign out_rms_vec_7_d0 = mul13_i_reg_675;

assign out_rms_vec_7_we0 = out_rms_vec_7_we0_local;

assign out_rms_vec_address0 = out_rms_vec_addr_reg_610_pp0_iter5_reg;

assign out_rms_vec_ce0 = out_rms_vec_ce0_local;

assign out_rms_vec_d0 = mul13_i_reg_675;

assign out_rms_vec_we0 = out_rms_vec_we0_local;

assign tmp_2_fu_455_p17 = 'bx;

assign trunc_ln27_fu_366_p1 = ap_sig_allocacmp_i_5[2:0];

assign zext_ln27_fu_380_p1 = lshr_ln3_fu_370_p4;

endmodule //kernel_mhsa_kernel_mhsa_Pipeline_VITIS_LOOP_27_2
