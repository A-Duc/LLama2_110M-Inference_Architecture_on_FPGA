// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module kernel_mhsa_Block_entry_att_0_wr_proc_Pipeline_LOAD_K_CACHE_VITIS_LOOP_84_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem2_0_AWVALID,
        m_axi_gmem2_0_AWREADY,
        m_axi_gmem2_0_AWADDR,
        m_axi_gmem2_0_AWID,
        m_axi_gmem2_0_AWLEN,
        m_axi_gmem2_0_AWSIZE,
        m_axi_gmem2_0_AWBURST,
        m_axi_gmem2_0_AWLOCK,
        m_axi_gmem2_0_AWCACHE,
        m_axi_gmem2_0_AWPROT,
        m_axi_gmem2_0_AWQOS,
        m_axi_gmem2_0_AWREGION,
        m_axi_gmem2_0_AWUSER,
        m_axi_gmem2_0_WVALID,
        m_axi_gmem2_0_WREADY,
        m_axi_gmem2_0_WDATA,
        m_axi_gmem2_0_WSTRB,
        m_axi_gmem2_0_WLAST,
        m_axi_gmem2_0_WID,
        m_axi_gmem2_0_WUSER,
        m_axi_gmem2_0_ARVALID,
        m_axi_gmem2_0_ARREADY,
        m_axi_gmem2_0_ARADDR,
        m_axi_gmem2_0_ARID,
        m_axi_gmem2_0_ARLEN,
        m_axi_gmem2_0_ARSIZE,
        m_axi_gmem2_0_ARBURST,
        m_axi_gmem2_0_ARLOCK,
        m_axi_gmem2_0_ARCACHE,
        m_axi_gmem2_0_ARPROT,
        m_axi_gmem2_0_ARQOS,
        m_axi_gmem2_0_ARREGION,
        m_axi_gmem2_0_ARUSER,
        m_axi_gmem2_0_RVALID,
        m_axi_gmem2_0_RREADY,
        m_axi_gmem2_0_RDATA,
        m_axi_gmem2_0_RLAST,
        m_axi_gmem2_0_RID,
        m_axi_gmem2_0_RFIFONUM,
        m_axi_gmem2_0_RUSER,
        m_axi_gmem2_0_RRESP,
        m_axi_gmem2_0_BVALID,
        m_axi_gmem2_0_BREADY,
        m_axi_gmem2_0_BRESP,
        m_axi_gmem2_0_BID,
        m_axi_gmem2_0_BUSER,
        tmp,
        k_cache_local_7_i_i_address0,
        k_cache_local_7_i_i_ce0,
        k_cache_local_7_i_i_we0,
        k_cache_local_7_i_i_d0,
        k_cache_local_6_i_i_address0,
        k_cache_local_6_i_i_ce0,
        k_cache_local_6_i_i_we0,
        k_cache_local_6_i_i_d0,
        k_cache_local_5_i_i_address0,
        k_cache_local_5_i_i_ce0,
        k_cache_local_5_i_i_we0,
        k_cache_local_5_i_i_d0,
        k_cache_local_4_i_i_address0,
        k_cache_local_4_i_i_ce0,
        k_cache_local_4_i_i_we0,
        k_cache_local_4_i_i_d0,
        k_cache_local_3_i_i_address0,
        k_cache_local_3_i_i_ce0,
        k_cache_local_3_i_i_we0,
        k_cache_local_3_i_i_d0,
        k_cache_local_2_i_i_address0,
        k_cache_local_2_i_i_ce0,
        k_cache_local_2_i_i_we0,
        k_cache_local_2_i_i_d0,
        k_cache_local_1_i_i_address0,
        k_cache_local_1_i_i_ce0,
        k_cache_local_1_i_i_we0,
        k_cache_local_1_i_i_d0,
        k_cache_local_0_i_i_address0,
        k_cache_local_0_i_i_ce0,
        k_cache_local_0_i_i_we0,
        k_cache_local_0_i_i_d0,
        sext_ln78,
        key_cache_load
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem2_0_AWVALID;
input   m_axi_gmem2_0_AWREADY;
output  [63:0] m_axi_gmem2_0_AWADDR;
output  [0:0] m_axi_gmem2_0_AWID;
output  [31:0] m_axi_gmem2_0_AWLEN;
output  [2:0] m_axi_gmem2_0_AWSIZE;
output  [1:0] m_axi_gmem2_0_AWBURST;
output  [1:0] m_axi_gmem2_0_AWLOCK;
output  [3:0] m_axi_gmem2_0_AWCACHE;
output  [2:0] m_axi_gmem2_0_AWPROT;
output  [3:0] m_axi_gmem2_0_AWQOS;
output  [3:0] m_axi_gmem2_0_AWREGION;
output  [0:0] m_axi_gmem2_0_AWUSER;
output   m_axi_gmem2_0_WVALID;
input   m_axi_gmem2_0_WREADY;
output  [31:0] m_axi_gmem2_0_WDATA;
output  [3:0] m_axi_gmem2_0_WSTRB;
output   m_axi_gmem2_0_WLAST;
output  [0:0] m_axi_gmem2_0_WID;
output  [0:0] m_axi_gmem2_0_WUSER;
output   m_axi_gmem2_0_ARVALID;
input   m_axi_gmem2_0_ARREADY;
output  [63:0] m_axi_gmem2_0_ARADDR;
output  [0:0] m_axi_gmem2_0_ARID;
output  [31:0] m_axi_gmem2_0_ARLEN;
output  [2:0] m_axi_gmem2_0_ARSIZE;
output  [1:0] m_axi_gmem2_0_ARBURST;
output  [1:0] m_axi_gmem2_0_ARLOCK;
output  [3:0] m_axi_gmem2_0_ARCACHE;
output  [2:0] m_axi_gmem2_0_ARPROT;
output  [3:0] m_axi_gmem2_0_ARQOS;
output  [3:0] m_axi_gmem2_0_ARREGION;
output  [0:0] m_axi_gmem2_0_ARUSER;
input   m_axi_gmem2_0_RVALID;
output   m_axi_gmem2_0_RREADY;
input  [31:0] m_axi_gmem2_0_RDATA;
input   m_axi_gmem2_0_RLAST;
input  [0:0] m_axi_gmem2_0_RID;
input  [12:0] m_axi_gmem2_0_RFIFONUM;
input  [0:0] m_axi_gmem2_0_RUSER;
input  [1:0] m_axi_gmem2_0_RRESP;
input   m_axi_gmem2_0_BVALID;
output   m_axi_gmem2_0_BREADY;
input  [1:0] m_axi_gmem2_0_BRESP;
input  [0:0] m_axi_gmem2_0_BID;
input  [0:0] m_axi_gmem2_0_BUSER;
input  [38:0] tmp;
output  [11:0] k_cache_local_7_i_i_address0;
output   k_cache_local_7_i_i_ce0;
output   k_cache_local_7_i_i_we0;
output  [31:0] k_cache_local_7_i_i_d0;
output  [11:0] k_cache_local_6_i_i_address0;
output   k_cache_local_6_i_i_ce0;
output   k_cache_local_6_i_i_we0;
output  [31:0] k_cache_local_6_i_i_d0;
output  [11:0] k_cache_local_5_i_i_address0;
output   k_cache_local_5_i_i_ce0;
output   k_cache_local_5_i_i_we0;
output  [31:0] k_cache_local_5_i_i_d0;
output  [11:0] k_cache_local_4_i_i_address0;
output   k_cache_local_4_i_i_ce0;
output   k_cache_local_4_i_i_we0;
output  [31:0] k_cache_local_4_i_i_d0;
output  [11:0] k_cache_local_3_i_i_address0;
output   k_cache_local_3_i_i_ce0;
output   k_cache_local_3_i_i_we0;
output  [31:0] k_cache_local_3_i_i_d0;
output  [11:0] k_cache_local_2_i_i_address0;
output   k_cache_local_2_i_i_ce0;
output   k_cache_local_2_i_i_we0;
output  [31:0] k_cache_local_2_i_i_d0;
output  [11:0] k_cache_local_1_i_i_address0;
output   k_cache_local_1_i_i_ce0;
output   k_cache_local_1_i_i_we0;
output  [31:0] k_cache_local_1_i_i_d0;
output  [11:0] k_cache_local_0_i_i_address0;
output   k_cache_local_0_i_i_ce0;
output   k_cache_local_0_i_i_we0;
output  [31:0] k_cache_local_0_i_i_d0;
input  [32:0] sext_ln78;
input  [63:0] key_cache_load;

reg ap_idle;
reg m_axi_gmem2_0_ARVALID;
reg m_axi_gmem2_0_RREADY;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_idle_pp0;
reg   [0:0] first_iter_0_reg_580;
reg    ap_block_state4_io_grp1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln83_fu_297_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem2_blk_n_R;
wire    ap_block_pp0_stage0_grp1;
reg    gmem2_blk_n_AR;
wire    ap_block_pp0_stage0_11001_grp0;
wire    ap_block_pp0_stage0_subdone_grp0;
reg    ap_block_pp0_stage0_11001_grp1;
wire  signed [61:0] sext_ln78_cast_fu_265_p1;
reg  signed [61:0] sext_ln78_cast_reg_566;
wire  signed [69:0] sext_ln76_fu_269_p1;
reg  signed [69:0] sext_ln76_reg_571;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] first_iter_0_fu_341_p2;
wire   [61:0] add_ln83_fu_377_p2;
reg   [61:0] add_ln83_reg_584;
wire   [2:0] trunc_ln84_fu_382_p1;
reg   [2:0] trunc_ln84_reg_589;
reg   [2:0] trunc_ln84_reg_589_pp0_iter3_reg;
reg   [2:0] trunc_ln84_reg_589_pp0_iter4_reg;
reg   [2:0] trunc_ln84_reg_589_pp0_iter5_reg;
reg   [2:0] trunc_ln84_reg_589_pp0_iter6_reg;
reg   [2:0] trunc_ln84_reg_589_pp0_iter7_reg;
reg   [2:0] trunc_ln84_reg_589_pp0_iter8_reg;
reg   [2:0] trunc_ln84_reg_589_pp0_iter9_reg;
reg   [2:0] trunc_ln84_reg_589_pp0_iter10_reg;
reg   [2:0] trunc_ln84_reg_589_pp0_iter11_reg;
reg   [2:0] trunc_ln84_reg_589_pp0_iter12_reg;
reg   [2:0] trunc_ln84_reg_589_pp0_iter13_reg;
reg   [2:0] lshr_ln_reg_593;
reg   [2:0] lshr_ln_reg_593_pp0_iter3_reg;
reg   [2:0] lshr_ln_reg_593_pp0_iter4_reg;
reg   [2:0] lshr_ln_reg_593_pp0_iter5_reg;
reg   [2:0] lshr_ln_reg_593_pp0_iter6_reg;
reg   [2:0] lshr_ln_reg_593_pp0_iter7_reg;
reg   [2:0] lshr_ln_reg_593_pp0_iter8_reg;
reg   [2:0] lshr_ln_reg_593_pp0_iter9_reg;
reg   [2:0] lshr_ln_reg_593_pp0_iter10_reg;
reg   [2:0] lshr_ln_reg_593_pp0_iter11_reg;
reg   [2:0] lshr_ln_reg_593_pp0_iter12_reg;
reg   [2:0] lshr_ln_reg_593_pp0_iter13_reg;
wire   [8:0] trunc_ln86_fu_396_p1;
reg   [8:0] trunc_ln86_reg_598;
reg   [8:0] trunc_ln86_reg_598_pp0_iter3_reg;
reg   [8:0] trunc_ln86_reg_598_pp0_iter4_reg;
reg   [8:0] trunc_ln86_reg_598_pp0_iter5_reg;
reg   [8:0] trunc_ln86_reg_598_pp0_iter6_reg;
reg   [8:0] trunc_ln86_reg_598_pp0_iter7_reg;
reg   [8:0] trunc_ln86_reg_598_pp0_iter8_reg;
reg   [8:0] trunc_ln86_reg_598_pp0_iter9_reg;
reg   [8:0] trunc_ln86_reg_598_pp0_iter10_reg;
reg   [8:0] trunc_ln86_reg_598_pp0_iter11_reg;
reg   [8:0] trunc_ln86_reg_598_pp0_iter12_reg;
reg   [8:0] trunc_ln86_reg_598_pp0_iter13_reg;
wire   [63:0] zext_ln86_fu_496_p1;
wire  signed [63:0] sext_ln84_fu_456_p1;
reg   [6:0] j_fu_116;
wire   [6:0] add_ln84_fu_418_p2;
wire    ap_loop_init;
reg   [63:0] t_fu_120;
wire   [63:0] select_ln83_1_fu_333_p3;
reg   [69:0] indvar_flatten_fu_124;
wire   [69:0] add_ln83_2_fu_291_p2;
wire    ap_block_pp0_stage0;
reg    k_cache_local_6_i_i_we0_local;
wire   [31:0] bitcast_ln86_fu_477_p1;
reg    k_cache_local_6_i_i_ce0_local;
reg    k_cache_local_5_i_i_we0_local;
reg    k_cache_local_5_i_i_ce0_local;
reg    k_cache_local_4_i_i_we0_local;
reg    k_cache_local_4_i_i_ce0_local;
reg    k_cache_local_3_i_i_we0_local;
reg    k_cache_local_3_i_i_ce0_local;
reg    k_cache_local_2_i_i_we0_local;
reg    k_cache_local_2_i_i_ce0_local;
reg    k_cache_local_1_i_i_we0_local;
reg    k_cache_local_1_i_i_ce0_local;
reg    k_cache_local_0_i_i_we0_local;
reg    k_cache_local_0_i_i_ce0_local;
reg    k_cache_local_7_i_i_we0_local;
reg    k_cache_local_7_i_i_ce0_local;
wire   [0:0] icmp_ln84_fu_313_p2;
wire   [63:0] add_ln83_3_fu_327_p2;
wire   [6:0] select_ln83_fu_319_p3;
wire   [51:0] trunc_ln83_fu_347_p1;
wire   [53:0] trunc_ln83_1_fu_359_p1;
wire   [61:0] p_shl_fu_351_p3;
wire   [61:0] p_shl9_fu_363_p3;
wire   [61:0] sub_ln83_fu_371_p2;
wire   [63:0] shl_ln3_fu_434_p3;
wire   [63:0] add_ln83_1_fu_441_p2;
wire   [61:0] trunc_ln_fu_446_p4;
wire   [11:0] or_ln_fu_490_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 j_fu_116 = 7'd0;
#0 t_fu_120 = 64'd0;
#0 indvar_flatten_fu_124 = 70'd0;
#0 ap_done_reg = 1'b0;
end

kernel_mhsa_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter13_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_124 <= 70'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln83_fu_297_p2 == 1'd0))) begin
            indvar_flatten_fu_124 <= add_ln83_2_fu_291_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            j_fu_116 <= 7'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            j_fu_116 <= add_ln84_fu_418_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            t_fu_120 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            t_fu_120 <= select_ln83_1_fu_333_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        add_ln83_reg_584 <= add_ln83_fu_377_p2;
        first_iter_0_reg_580 <= first_iter_0_fu_341_p2;
        lshr_ln_reg_593 <= {{select_ln83_fu_319_p3[5:3]}};
        lshr_ln_reg_593_pp0_iter10_reg <= lshr_ln_reg_593_pp0_iter9_reg;
        lshr_ln_reg_593_pp0_iter11_reg <= lshr_ln_reg_593_pp0_iter10_reg;
        lshr_ln_reg_593_pp0_iter12_reg <= lshr_ln_reg_593_pp0_iter11_reg;
        lshr_ln_reg_593_pp0_iter13_reg <= lshr_ln_reg_593_pp0_iter12_reg;
        lshr_ln_reg_593_pp0_iter3_reg <= lshr_ln_reg_593;
        lshr_ln_reg_593_pp0_iter4_reg <= lshr_ln_reg_593_pp0_iter3_reg;
        lshr_ln_reg_593_pp0_iter5_reg <= lshr_ln_reg_593_pp0_iter4_reg;
        lshr_ln_reg_593_pp0_iter6_reg <= lshr_ln_reg_593_pp0_iter5_reg;
        lshr_ln_reg_593_pp0_iter7_reg <= lshr_ln_reg_593_pp0_iter6_reg;
        lshr_ln_reg_593_pp0_iter8_reg <= lshr_ln_reg_593_pp0_iter7_reg;
        lshr_ln_reg_593_pp0_iter9_reg <= lshr_ln_reg_593_pp0_iter8_reg;
        trunc_ln84_reg_589 <= trunc_ln84_fu_382_p1;
        trunc_ln84_reg_589_pp0_iter10_reg <= trunc_ln84_reg_589_pp0_iter9_reg;
        trunc_ln84_reg_589_pp0_iter11_reg <= trunc_ln84_reg_589_pp0_iter10_reg;
        trunc_ln84_reg_589_pp0_iter12_reg <= trunc_ln84_reg_589_pp0_iter11_reg;
        trunc_ln84_reg_589_pp0_iter13_reg <= trunc_ln84_reg_589_pp0_iter12_reg;
        trunc_ln84_reg_589_pp0_iter3_reg <= trunc_ln84_reg_589;
        trunc_ln84_reg_589_pp0_iter4_reg <= trunc_ln84_reg_589_pp0_iter3_reg;
        trunc_ln84_reg_589_pp0_iter5_reg <= trunc_ln84_reg_589_pp0_iter4_reg;
        trunc_ln84_reg_589_pp0_iter6_reg <= trunc_ln84_reg_589_pp0_iter5_reg;
        trunc_ln84_reg_589_pp0_iter7_reg <= trunc_ln84_reg_589_pp0_iter6_reg;
        trunc_ln84_reg_589_pp0_iter8_reg <= trunc_ln84_reg_589_pp0_iter7_reg;
        trunc_ln84_reg_589_pp0_iter9_reg <= trunc_ln84_reg_589_pp0_iter8_reg;
        trunc_ln86_reg_598 <= trunc_ln86_fu_396_p1;
        trunc_ln86_reg_598_pp0_iter10_reg <= trunc_ln86_reg_598_pp0_iter9_reg;
        trunc_ln86_reg_598_pp0_iter11_reg <= trunc_ln86_reg_598_pp0_iter10_reg;
        trunc_ln86_reg_598_pp0_iter12_reg <= trunc_ln86_reg_598_pp0_iter11_reg;
        trunc_ln86_reg_598_pp0_iter13_reg <= trunc_ln86_reg_598_pp0_iter12_reg;
        trunc_ln86_reg_598_pp0_iter3_reg <= trunc_ln86_reg_598;
        trunc_ln86_reg_598_pp0_iter4_reg <= trunc_ln86_reg_598_pp0_iter3_reg;
        trunc_ln86_reg_598_pp0_iter5_reg <= trunc_ln86_reg_598_pp0_iter4_reg;
        trunc_ln86_reg_598_pp0_iter6_reg <= trunc_ln86_reg_598_pp0_iter5_reg;
        trunc_ln86_reg_598_pp0_iter7_reg <= trunc_ln86_reg_598_pp0_iter6_reg;
        trunc_ln86_reg_598_pp0_iter8_reg <= trunc_ln86_reg_598_pp0_iter7_reg;
        trunc_ln86_reg_598_pp0_iter9_reg <= trunc_ln86_reg_598_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        sext_ln76_reg_571 <= sext_ln76_fu_269_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        sext_ln78_cast_reg_566 <= sext_ln78_cast_fu_265_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln83_fu_297_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter13_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_grp1) & (first_iter_0_reg_580 == 1'd1))) begin
        gmem2_blk_n_AR = m_axi_gmem2_0_ARREADY;
    end else begin
        gmem2_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_grp1))) begin
        gmem2_blk_n_R = m_axi_gmem2_0_RVALID;
    end else begin
        gmem2_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln84_reg_589_pp0_iter13_reg == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        k_cache_local_0_i_i_ce0_local = 1'b1;
    end else begin
        k_cache_local_0_i_i_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln84_reg_589_pp0_iter13_reg == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        k_cache_local_0_i_i_we0_local = 1'b1;
    end else begin
        k_cache_local_0_i_i_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln84_reg_589_pp0_iter13_reg == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        k_cache_local_1_i_i_ce0_local = 1'b1;
    end else begin
        k_cache_local_1_i_i_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln84_reg_589_pp0_iter13_reg == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        k_cache_local_1_i_i_we0_local = 1'b1;
    end else begin
        k_cache_local_1_i_i_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln84_reg_589_pp0_iter13_reg == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        k_cache_local_2_i_i_ce0_local = 1'b1;
    end else begin
        k_cache_local_2_i_i_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln84_reg_589_pp0_iter13_reg == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        k_cache_local_2_i_i_we0_local = 1'b1;
    end else begin
        k_cache_local_2_i_i_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln84_reg_589_pp0_iter13_reg == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        k_cache_local_3_i_i_ce0_local = 1'b1;
    end else begin
        k_cache_local_3_i_i_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln84_reg_589_pp0_iter13_reg == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        k_cache_local_3_i_i_we0_local = 1'b1;
    end else begin
        k_cache_local_3_i_i_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln84_reg_589_pp0_iter13_reg == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        k_cache_local_4_i_i_ce0_local = 1'b1;
    end else begin
        k_cache_local_4_i_i_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln84_reg_589_pp0_iter13_reg == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        k_cache_local_4_i_i_we0_local = 1'b1;
    end else begin
        k_cache_local_4_i_i_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln84_reg_589_pp0_iter13_reg == 3'd5) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        k_cache_local_5_i_i_ce0_local = 1'b1;
    end else begin
        k_cache_local_5_i_i_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln84_reg_589_pp0_iter13_reg == 3'd5) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        k_cache_local_5_i_i_we0_local = 1'b1;
    end else begin
        k_cache_local_5_i_i_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln84_reg_589_pp0_iter13_reg == 3'd6) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        k_cache_local_6_i_i_ce0_local = 1'b1;
    end else begin
        k_cache_local_6_i_i_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln84_reg_589_pp0_iter13_reg == 3'd6) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        k_cache_local_6_i_i_we0_local = 1'b1;
    end else begin
        k_cache_local_6_i_i_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln84_reg_589_pp0_iter13_reg == 3'd7) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        k_cache_local_7_i_i_ce0_local = 1'b1;
    end else begin
        k_cache_local_7_i_i_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (trunc_ln84_reg_589_pp0_iter13_reg == 3'd7) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        k_cache_local_7_i_i_we0_local = 1'b1;
    end else begin
        k_cache_local_7_i_i_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001_grp1) & (first_iter_0_reg_580 == 1'd1))) begin
        m_axi_gmem2_0_ARVALID = 1'b1;
    end else begin
        m_axi_gmem2_0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        m_axi_gmem2_0_RREADY = 1'b1;
    end else begin
        m_axi_gmem2_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln83_1_fu_441_p2 = (key_cache_load + shl_ln3_fu_434_p3);

assign add_ln83_2_fu_291_p2 = (indvar_flatten_fu_124 + 70'd1);

assign add_ln83_3_fu_327_p2 = (t_fu_120 + 64'd1);

assign add_ln83_fu_377_p2 = ($signed(sub_ln83_fu_371_p2) + $signed(sext_ln78_cast_reg_566));

assign add_ln84_fu_418_p2 = (select_ln83_fu_319_p3 + 7'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter14 == 1'b1) & (m_axi_gmem2_0_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_io_grp1)));
end

assign ap_block_pp0_stage0_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001_grp1 = (((ap_enable_reg_pp0_iter14 == 1'b1) & (m_axi_gmem2_0_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_io_grp1)));
end

assign ap_block_pp0_stage0_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter14 == 1'b1) & (m_axi_gmem2_0_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_io_grp1)));
end

assign ap_block_pp0_stage0_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io_grp1 = ((m_axi_gmem2_0_ARREADY == 1'b0) & (first_iter_0_reg_580 == 1'd1));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_ready = ap_ready_sig;

assign bitcast_ln86_fu_477_p1 = m_axi_gmem2_0_RDATA;

assign first_iter_0_fu_341_p2 = ((select_ln83_fu_319_p3 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_297_p2 = ((indvar_flatten_fu_124 == sext_ln76_reg_571) ? 1'b1 : 1'b0);

assign icmp_ln84_fu_313_p2 = ((j_fu_116 == 7'd64) ? 1'b1 : 1'b0);

assign k_cache_local_0_i_i_address0 = zext_ln86_fu_496_p1;

assign k_cache_local_0_i_i_ce0 = k_cache_local_0_i_i_ce0_local;

assign k_cache_local_0_i_i_d0 = bitcast_ln86_fu_477_p1;

assign k_cache_local_0_i_i_we0 = k_cache_local_0_i_i_we0_local;

assign k_cache_local_1_i_i_address0 = zext_ln86_fu_496_p1;

assign k_cache_local_1_i_i_ce0 = k_cache_local_1_i_i_ce0_local;

assign k_cache_local_1_i_i_d0 = bitcast_ln86_fu_477_p1;

assign k_cache_local_1_i_i_we0 = k_cache_local_1_i_i_we0_local;

assign k_cache_local_2_i_i_address0 = zext_ln86_fu_496_p1;

assign k_cache_local_2_i_i_ce0 = k_cache_local_2_i_i_ce0_local;

assign k_cache_local_2_i_i_d0 = bitcast_ln86_fu_477_p1;

assign k_cache_local_2_i_i_we0 = k_cache_local_2_i_i_we0_local;

assign k_cache_local_3_i_i_address0 = zext_ln86_fu_496_p1;

assign k_cache_local_3_i_i_ce0 = k_cache_local_3_i_i_ce0_local;

assign k_cache_local_3_i_i_d0 = bitcast_ln86_fu_477_p1;

assign k_cache_local_3_i_i_we0 = k_cache_local_3_i_i_we0_local;

assign k_cache_local_4_i_i_address0 = zext_ln86_fu_496_p1;

assign k_cache_local_4_i_i_ce0 = k_cache_local_4_i_i_ce0_local;

assign k_cache_local_4_i_i_d0 = bitcast_ln86_fu_477_p1;

assign k_cache_local_4_i_i_we0 = k_cache_local_4_i_i_we0_local;

assign k_cache_local_5_i_i_address0 = zext_ln86_fu_496_p1;

assign k_cache_local_5_i_i_ce0 = k_cache_local_5_i_i_ce0_local;

assign k_cache_local_5_i_i_d0 = bitcast_ln86_fu_477_p1;

assign k_cache_local_5_i_i_we0 = k_cache_local_5_i_i_we0_local;

assign k_cache_local_6_i_i_address0 = zext_ln86_fu_496_p1;

assign k_cache_local_6_i_i_ce0 = k_cache_local_6_i_i_ce0_local;

assign k_cache_local_6_i_i_d0 = bitcast_ln86_fu_477_p1;

assign k_cache_local_6_i_i_we0 = k_cache_local_6_i_i_we0_local;

assign k_cache_local_7_i_i_address0 = zext_ln86_fu_496_p1;

assign k_cache_local_7_i_i_ce0 = k_cache_local_7_i_i_ce0_local;

assign k_cache_local_7_i_i_d0 = bitcast_ln86_fu_477_p1;

assign k_cache_local_7_i_i_we0 = k_cache_local_7_i_i_we0_local;

assign m_axi_gmem2_0_ARADDR = sext_ln84_fu_456_p1;

assign m_axi_gmem2_0_ARBURST = 2'd0;

assign m_axi_gmem2_0_ARCACHE = 4'd0;

assign m_axi_gmem2_0_ARID = 1'd0;

assign m_axi_gmem2_0_ARLEN = 64'd64;

assign m_axi_gmem2_0_ARLOCK = 2'd0;

assign m_axi_gmem2_0_ARPROT = 3'd0;

assign m_axi_gmem2_0_ARQOS = 4'd0;

assign m_axi_gmem2_0_ARREGION = 4'd0;

assign m_axi_gmem2_0_ARSIZE = 3'd0;

assign m_axi_gmem2_0_ARUSER = 1'd0;

assign m_axi_gmem2_0_AWADDR = 64'd0;

assign m_axi_gmem2_0_AWBURST = 2'd0;

assign m_axi_gmem2_0_AWCACHE = 4'd0;

assign m_axi_gmem2_0_AWID = 1'd0;

assign m_axi_gmem2_0_AWLEN = 32'd0;

assign m_axi_gmem2_0_AWLOCK = 2'd0;

assign m_axi_gmem2_0_AWPROT = 3'd0;

assign m_axi_gmem2_0_AWQOS = 4'd0;

assign m_axi_gmem2_0_AWREGION = 4'd0;

assign m_axi_gmem2_0_AWSIZE = 3'd0;

assign m_axi_gmem2_0_AWUSER = 1'd0;

assign m_axi_gmem2_0_AWVALID = 1'b0;

assign m_axi_gmem2_0_BREADY = 1'b0;

assign m_axi_gmem2_0_WDATA = 32'd0;

assign m_axi_gmem2_0_WID = 1'd0;

assign m_axi_gmem2_0_WLAST = 1'b0;

assign m_axi_gmem2_0_WSTRB = 4'd0;

assign m_axi_gmem2_0_WUSER = 1'd0;

assign m_axi_gmem2_0_WVALID = 1'b0;

assign or_ln_fu_490_p3 = {{trunc_ln86_reg_598_pp0_iter13_reg}, {lshr_ln_reg_593_pp0_iter13_reg}};

assign p_shl9_fu_363_p3 = {{trunc_ln83_1_fu_359_p1}, {8'd0}};

assign p_shl_fu_351_p3 = {{trunc_ln83_fu_347_p1}, {10'd0}};

assign select_ln83_1_fu_333_p3 = ((icmp_ln84_fu_313_p2[0:0] == 1'b1) ? add_ln83_3_fu_327_p2 : t_fu_120);

assign select_ln83_fu_319_p3 = ((icmp_ln84_fu_313_p2[0:0] == 1'b1) ? 7'd0 : j_fu_116);

assign sext_ln76_fu_269_p1 = $signed(tmp);

assign sext_ln78_cast_fu_265_p1 = $signed(sext_ln78);

assign sext_ln84_fu_456_p1 = $signed(trunc_ln_fu_446_p4);

assign shl_ln3_fu_434_p3 = {{add_ln83_reg_584}, {2'd0}};

assign sub_ln83_fu_371_p2 = (p_shl_fu_351_p3 - p_shl9_fu_363_p3);

assign trunc_ln83_1_fu_359_p1 = select_ln83_1_fu_333_p3[53:0];

assign trunc_ln83_fu_347_p1 = select_ln83_1_fu_333_p3[51:0];

assign trunc_ln84_fu_382_p1 = select_ln83_fu_319_p3[2:0];

assign trunc_ln86_fu_396_p1 = select_ln83_1_fu_333_p3[8:0];

assign trunc_ln_fu_446_p4 = {{add_ln83_1_fu_441_p2[63:2]}};

assign zext_ln86_fu_496_p1 = or_ln_fu_490_p3;

endmodule //kernel_mhsa_Block_entry_att_0_wr_proc_Pipeline_LOAD_K_CACHE_VITIS_LOOP_84_2
