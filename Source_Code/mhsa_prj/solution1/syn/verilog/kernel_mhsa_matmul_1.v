// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module kernel_mhsa_matmul_1 (
        o_vec_0_address0,
        o_vec_0_ce0,
        o_vec_0_d0,
        o_vec_0_q0,
        o_vec_0_we0,
        o_vec_0_address1,
        o_vec_0_ce1,
        o_vec_0_d1,
        o_vec_0_q1,
        o_vec_0_we1,
        o_vec_1_address0,
        o_vec_1_ce0,
        o_vec_1_d0,
        o_vec_1_q0,
        o_vec_1_we0,
        o_vec_1_address1,
        o_vec_1_ce1,
        o_vec_1_d1,
        o_vec_1_q1,
        o_vec_1_we1,
        o_vec_2_address0,
        o_vec_2_ce0,
        o_vec_2_d0,
        o_vec_2_q0,
        o_vec_2_we0,
        o_vec_2_address1,
        o_vec_2_ce1,
        o_vec_2_d1,
        o_vec_2_q1,
        o_vec_2_we1,
        o_vec_3_address0,
        o_vec_3_ce0,
        o_vec_3_d0,
        o_vec_3_q0,
        o_vec_3_we0,
        o_vec_3_address1,
        o_vec_3_ce1,
        o_vec_3_d1,
        o_vec_3_q1,
        o_vec_3_we1,
        o_vec_4_address0,
        o_vec_4_ce0,
        o_vec_4_d0,
        o_vec_4_q0,
        o_vec_4_we0,
        o_vec_4_address1,
        o_vec_4_ce1,
        o_vec_4_d1,
        o_vec_4_q1,
        o_vec_4_we1,
        o_vec_5_address0,
        o_vec_5_ce0,
        o_vec_5_d0,
        o_vec_5_q0,
        o_vec_5_we0,
        o_vec_5_address1,
        o_vec_5_ce1,
        o_vec_5_d1,
        o_vec_5_q1,
        o_vec_5_we1,
        o_vec_6_address0,
        o_vec_6_ce0,
        o_vec_6_d0,
        o_vec_6_q0,
        o_vec_6_we0,
        o_vec_6_address1,
        o_vec_6_ce1,
        o_vec_6_d1,
        o_vec_6_q1,
        o_vec_6_we1,
        o_vec_7_address0,
        o_vec_7_ce0,
        o_vec_7_d0,
        o_vec_7_q0,
        o_vec_7_we0,
        o_vec_7_address1,
        o_vec_7_ce1,
        o_vec_7_d1,
        o_vec_7_q1,
        o_vec_7_we1,
        i_vec_0_address0,
        i_vec_0_ce0,
        i_vec_0_d0,
        i_vec_0_q0,
        i_vec_0_we0,
        i_vec_0_address1,
        i_vec_0_ce1,
        i_vec_0_d1,
        i_vec_0_q1,
        i_vec_0_we1,
        i_vec_1_address0,
        i_vec_1_ce0,
        i_vec_1_d0,
        i_vec_1_q0,
        i_vec_1_we0,
        i_vec_1_address1,
        i_vec_1_ce1,
        i_vec_1_d1,
        i_vec_1_q1,
        i_vec_1_we1,
        i_vec_2_address0,
        i_vec_2_ce0,
        i_vec_2_d0,
        i_vec_2_q0,
        i_vec_2_we0,
        i_vec_2_address1,
        i_vec_2_ce1,
        i_vec_2_d1,
        i_vec_2_q1,
        i_vec_2_we1,
        i_vec_3_address0,
        i_vec_3_ce0,
        i_vec_3_d0,
        i_vec_3_q0,
        i_vec_3_we0,
        i_vec_3_address1,
        i_vec_3_ce1,
        i_vec_3_d1,
        i_vec_3_q1,
        i_vec_3_we1,
        i_vec_4_address0,
        i_vec_4_ce0,
        i_vec_4_d0,
        i_vec_4_q0,
        i_vec_4_we0,
        i_vec_4_address1,
        i_vec_4_ce1,
        i_vec_4_d1,
        i_vec_4_q1,
        i_vec_4_we1,
        i_vec_5_address0,
        i_vec_5_ce0,
        i_vec_5_d0,
        i_vec_5_q0,
        i_vec_5_we0,
        i_vec_5_address1,
        i_vec_5_ce1,
        i_vec_5_d1,
        i_vec_5_q1,
        i_vec_5_we1,
        i_vec_6_address0,
        i_vec_6_ce0,
        i_vec_6_d0,
        i_vec_6_q0,
        i_vec_6_we0,
        i_vec_6_address1,
        i_vec_6_ce1,
        i_vec_6_d1,
        i_vec_6_q1,
        i_vec_6_we1,
        i_vec_7_address0,
        i_vec_7_ce0,
        i_vec_7_d0,
        i_vec_7_q0,
        i_vec_7_we0,
        i_vec_7_address1,
        i_vec_7_ce1,
        i_vec_7_d1,
        i_vec_7_q1,
        i_vec_7_we1,
        m_axi_gmem1_0_AWVALID,
        m_axi_gmem1_0_AWREADY,
        m_axi_gmem1_0_AWADDR,
        m_axi_gmem1_0_AWID,
        m_axi_gmem1_0_AWLEN,
        m_axi_gmem1_0_AWSIZE,
        m_axi_gmem1_0_AWBURST,
        m_axi_gmem1_0_AWLOCK,
        m_axi_gmem1_0_AWCACHE,
        m_axi_gmem1_0_AWPROT,
        m_axi_gmem1_0_AWQOS,
        m_axi_gmem1_0_AWREGION,
        m_axi_gmem1_0_AWUSER,
        m_axi_gmem1_0_WVALID,
        m_axi_gmem1_0_WREADY,
        m_axi_gmem1_0_WDATA,
        m_axi_gmem1_0_WSTRB,
        m_axi_gmem1_0_WLAST,
        m_axi_gmem1_0_WID,
        m_axi_gmem1_0_WUSER,
        m_axi_gmem1_0_ARVALID,
        m_axi_gmem1_0_ARREADY,
        m_axi_gmem1_0_ARADDR,
        m_axi_gmem1_0_ARID,
        m_axi_gmem1_0_ARLEN,
        m_axi_gmem1_0_ARSIZE,
        m_axi_gmem1_0_ARBURST,
        m_axi_gmem1_0_ARLOCK,
        m_axi_gmem1_0_ARCACHE,
        m_axi_gmem1_0_ARPROT,
        m_axi_gmem1_0_ARQOS,
        m_axi_gmem1_0_ARREGION,
        m_axi_gmem1_0_ARUSER,
        m_axi_gmem1_0_RVALID,
        m_axi_gmem1_0_RREADY,
        m_axi_gmem1_0_RDATA,
        m_axi_gmem1_0_RLAST,
        m_axi_gmem1_0_RID,
        m_axi_gmem1_0_RFIFONUM,
        m_axi_gmem1_0_RUSER,
        m_axi_gmem1_0_RRESP,
        m_axi_gmem1_0_BVALID,
        m_axi_gmem1_0_BREADY,
        m_axi_gmem1_0_BRESP,
        m_axi_gmem1_0_BID,
        m_axi_gmem1_0_BUSER,
        i_mat,
        ap_clk,
        ap_rst,
        ap_start,
        i_mat_ap_vld,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


output  [6:0] o_vec_0_address0;
output   o_vec_0_ce0;
output  [31:0] o_vec_0_d0;
input  [31:0] o_vec_0_q0;
output   o_vec_0_we0;
output  [6:0] o_vec_0_address1;
output   o_vec_0_ce1;
output  [31:0] o_vec_0_d1;
input  [31:0] o_vec_0_q1;
output   o_vec_0_we1;
output  [6:0] o_vec_1_address0;
output   o_vec_1_ce0;
output  [31:0] o_vec_1_d0;
input  [31:0] o_vec_1_q0;
output   o_vec_1_we0;
output  [6:0] o_vec_1_address1;
output   o_vec_1_ce1;
output  [31:0] o_vec_1_d1;
input  [31:0] o_vec_1_q1;
output   o_vec_1_we1;
output  [6:0] o_vec_2_address0;
output   o_vec_2_ce0;
output  [31:0] o_vec_2_d0;
input  [31:0] o_vec_2_q0;
output   o_vec_2_we0;
output  [6:0] o_vec_2_address1;
output   o_vec_2_ce1;
output  [31:0] o_vec_2_d1;
input  [31:0] o_vec_2_q1;
output   o_vec_2_we1;
output  [6:0] o_vec_3_address0;
output   o_vec_3_ce0;
output  [31:0] o_vec_3_d0;
input  [31:0] o_vec_3_q0;
output   o_vec_3_we0;
output  [6:0] o_vec_3_address1;
output   o_vec_3_ce1;
output  [31:0] o_vec_3_d1;
input  [31:0] o_vec_3_q1;
output   o_vec_3_we1;
output  [6:0] o_vec_4_address0;
output   o_vec_4_ce0;
output  [31:0] o_vec_4_d0;
input  [31:0] o_vec_4_q0;
output   o_vec_4_we0;
output  [6:0] o_vec_4_address1;
output   o_vec_4_ce1;
output  [31:0] o_vec_4_d1;
input  [31:0] o_vec_4_q1;
output   o_vec_4_we1;
output  [6:0] o_vec_5_address0;
output   o_vec_5_ce0;
output  [31:0] o_vec_5_d0;
input  [31:0] o_vec_5_q0;
output   o_vec_5_we0;
output  [6:0] o_vec_5_address1;
output   o_vec_5_ce1;
output  [31:0] o_vec_5_d1;
input  [31:0] o_vec_5_q1;
output   o_vec_5_we1;
output  [6:0] o_vec_6_address0;
output   o_vec_6_ce0;
output  [31:0] o_vec_6_d0;
input  [31:0] o_vec_6_q0;
output   o_vec_6_we0;
output  [6:0] o_vec_6_address1;
output   o_vec_6_ce1;
output  [31:0] o_vec_6_d1;
input  [31:0] o_vec_6_q1;
output   o_vec_6_we1;
output  [6:0] o_vec_7_address0;
output   o_vec_7_ce0;
output  [31:0] o_vec_7_d0;
input  [31:0] o_vec_7_q0;
output   o_vec_7_we0;
output  [6:0] o_vec_7_address1;
output   o_vec_7_ce1;
output  [31:0] o_vec_7_d1;
input  [31:0] o_vec_7_q1;
output   o_vec_7_we1;
output  [6:0] i_vec_0_address0;
output   i_vec_0_ce0;
output  [31:0] i_vec_0_d0;
input  [31:0] i_vec_0_q0;
output   i_vec_0_we0;
output  [6:0] i_vec_0_address1;
output   i_vec_0_ce1;
output  [31:0] i_vec_0_d1;
input  [31:0] i_vec_0_q1;
output   i_vec_0_we1;
output  [6:0] i_vec_1_address0;
output   i_vec_1_ce0;
output  [31:0] i_vec_1_d0;
input  [31:0] i_vec_1_q0;
output   i_vec_1_we0;
output  [6:0] i_vec_1_address1;
output   i_vec_1_ce1;
output  [31:0] i_vec_1_d1;
input  [31:0] i_vec_1_q1;
output   i_vec_1_we1;
output  [6:0] i_vec_2_address0;
output   i_vec_2_ce0;
output  [31:0] i_vec_2_d0;
input  [31:0] i_vec_2_q0;
output   i_vec_2_we0;
output  [6:0] i_vec_2_address1;
output   i_vec_2_ce1;
output  [31:0] i_vec_2_d1;
input  [31:0] i_vec_2_q1;
output   i_vec_2_we1;
output  [6:0] i_vec_3_address0;
output   i_vec_3_ce0;
output  [31:0] i_vec_3_d0;
input  [31:0] i_vec_3_q0;
output   i_vec_3_we0;
output  [6:0] i_vec_3_address1;
output   i_vec_3_ce1;
output  [31:0] i_vec_3_d1;
input  [31:0] i_vec_3_q1;
output   i_vec_3_we1;
output  [6:0] i_vec_4_address0;
output   i_vec_4_ce0;
output  [31:0] i_vec_4_d0;
input  [31:0] i_vec_4_q0;
output   i_vec_4_we0;
output  [6:0] i_vec_4_address1;
output   i_vec_4_ce1;
output  [31:0] i_vec_4_d1;
input  [31:0] i_vec_4_q1;
output   i_vec_4_we1;
output  [6:0] i_vec_5_address0;
output   i_vec_5_ce0;
output  [31:0] i_vec_5_d0;
input  [31:0] i_vec_5_q0;
output   i_vec_5_we0;
output  [6:0] i_vec_5_address1;
output   i_vec_5_ce1;
output  [31:0] i_vec_5_d1;
input  [31:0] i_vec_5_q1;
output   i_vec_5_we1;
output  [6:0] i_vec_6_address0;
output   i_vec_6_ce0;
output  [31:0] i_vec_6_d0;
input  [31:0] i_vec_6_q0;
output   i_vec_6_we0;
output  [6:0] i_vec_6_address1;
output   i_vec_6_ce1;
output  [31:0] i_vec_6_d1;
input  [31:0] i_vec_6_q1;
output   i_vec_6_we1;
output  [6:0] i_vec_7_address0;
output   i_vec_7_ce0;
output  [31:0] i_vec_7_d0;
input  [31:0] i_vec_7_q0;
output   i_vec_7_we0;
output  [6:0] i_vec_7_address1;
output   i_vec_7_ce1;
output  [31:0] i_vec_7_d1;
input  [31:0] i_vec_7_q1;
output   i_vec_7_we1;
output   m_axi_gmem1_0_AWVALID;
input   m_axi_gmem1_0_AWREADY;
output  [63:0] m_axi_gmem1_0_AWADDR;
output  [0:0] m_axi_gmem1_0_AWID;
output  [31:0] m_axi_gmem1_0_AWLEN;
output  [2:0] m_axi_gmem1_0_AWSIZE;
output  [1:0] m_axi_gmem1_0_AWBURST;
output  [1:0] m_axi_gmem1_0_AWLOCK;
output  [3:0] m_axi_gmem1_0_AWCACHE;
output  [2:0] m_axi_gmem1_0_AWPROT;
output  [3:0] m_axi_gmem1_0_AWQOS;
output  [3:0] m_axi_gmem1_0_AWREGION;
output  [0:0] m_axi_gmem1_0_AWUSER;
output   m_axi_gmem1_0_WVALID;
input   m_axi_gmem1_0_WREADY;
output  [31:0] m_axi_gmem1_0_WDATA;
output  [3:0] m_axi_gmem1_0_WSTRB;
output   m_axi_gmem1_0_WLAST;
output  [0:0] m_axi_gmem1_0_WID;
output  [0:0] m_axi_gmem1_0_WUSER;
output   m_axi_gmem1_0_ARVALID;
input   m_axi_gmem1_0_ARREADY;
output  [63:0] m_axi_gmem1_0_ARADDR;
output  [0:0] m_axi_gmem1_0_ARID;
output  [31:0] m_axi_gmem1_0_ARLEN;
output  [2:0] m_axi_gmem1_0_ARSIZE;
output  [1:0] m_axi_gmem1_0_ARBURST;
output  [1:0] m_axi_gmem1_0_ARLOCK;
output  [3:0] m_axi_gmem1_0_ARCACHE;
output  [2:0] m_axi_gmem1_0_ARPROT;
output  [3:0] m_axi_gmem1_0_ARQOS;
output  [3:0] m_axi_gmem1_0_ARREGION;
output  [0:0] m_axi_gmem1_0_ARUSER;
input   m_axi_gmem1_0_RVALID;
output   m_axi_gmem1_0_RREADY;
input  [31:0] m_axi_gmem1_0_RDATA;
input   m_axi_gmem1_0_RLAST;
input  [0:0] m_axi_gmem1_0_RID;
input  [12:0] m_axi_gmem1_0_RFIFONUM;
input  [0:0] m_axi_gmem1_0_RUSER;
input  [1:0] m_axi_gmem1_0_RRESP;
input   m_axi_gmem1_0_BVALID;
output   m_axi_gmem1_0_BREADY;
input  [1:0] m_axi_gmem1_0_BRESP;
input  [0:0] m_axi_gmem1_0_BID;
input  [0:0] m_axi_gmem1_0_BUSER;
input  [63:0] i_mat;
input   ap_clk;
input   ap_rst;
input   ap_start;
input   i_mat_ap_vld;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    load_vec_U0_ap_start;
wire    load_vec_U0_ap_done;
wire    load_vec_U0_ap_continue;
wire    load_vec_U0_ap_idle;
wire    load_vec_U0_ap_ready;
wire   [31:0] load_vec_U0_vector_stream_din;
wire    load_vec_U0_vector_stream_write;
wire   [31:0] load_vec_U0_vector_stream_num_data_valid;
wire   [31:0] load_vec_U0_vector_stream_fifo_cap;
wire    load_vec_U0_start_out;
wire    load_vec_U0_start_write;
wire   [6:0] load_vec_U0_i_vec_0_address0;
wire    load_vec_U0_i_vec_0_ce0;
wire   [6:0] load_vec_U0_i_vec_1_address0;
wire    load_vec_U0_i_vec_1_ce0;
wire   [6:0] load_vec_U0_i_vec_2_address0;
wire    load_vec_U0_i_vec_2_ce0;
wire   [6:0] load_vec_U0_i_vec_3_address0;
wire    load_vec_U0_i_vec_3_ce0;
wire   [6:0] load_vec_U0_i_vec_4_address0;
wire    load_vec_U0_i_vec_4_ce0;
wire   [6:0] load_vec_U0_i_vec_5_address0;
wire    load_vec_U0_i_vec_5_ce0;
wire   [6:0] load_vec_U0_i_vec_6_address0;
wire    load_vec_U0_i_vec_6_ce0;
wire   [6:0] load_vec_U0_i_vec_7_address0;
wire    load_vec_U0_i_vec_7_ce0;
wire    load_mat_U0_ap_start;
wire    load_mat_U0_ap_done;
wire    load_mat_U0_ap_continue;
wire    load_mat_U0_ap_idle;
wire    load_mat_U0_ap_ready;
wire    load_mat_U0_m_axi_gmem1_0_AWVALID;
wire   [63:0] load_mat_U0_m_axi_gmem1_0_AWADDR;
wire   [0:0] load_mat_U0_m_axi_gmem1_0_AWID;
wire   [31:0] load_mat_U0_m_axi_gmem1_0_AWLEN;
wire   [2:0] load_mat_U0_m_axi_gmem1_0_AWSIZE;
wire   [1:0] load_mat_U0_m_axi_gmem1_0_AWBURST;
wire   [1:0] load_mat_U0_m_axi_gmem1_0_AWLOCK;
wire   [3:0] load_mat_U0_m_axi_gmem1_0_AWCACHE;
wire   [2:0] load_mat_U0_m_axi_gmem1_0_AWPROT;
wire   [3:0] load_mat_U0_m_axi_gmem1_0_AWQOS;
wire   [3:0] load_mat_U0_m_axi_gmem1_0_AWREGION;
wire   [0:0] load_mat_U0_m_axi_gmem1_0_AWUSER;
wire    load_mat_U0_m_axi_gmem1_0_WVALID;
wire   [31:0] load_mat_U0_m_axi_gmem1_0_WDATA;
wire   [3:0] load_mat_U0_m_axi_gmem1_0_WSTRB;
wire    load_mat_U0_m_axi_gmem1_0_WLAST;
wire   [0:0] load_mat_U0_m_axi_gmem1_0_WID;
wire   [0:0] load_mat_U0_m_axi_gmem1_0_WUSER;
wire    load_mat_U0_m_axi_gmem1_0_ARVALID;
wire   [63:0] load_mat_U0_m_axi_gmem1_0_ARADDR;
wire   [0:0] load_mat_U0_m_axi_gmem1_0_ARID;
wire   [31:0] load_mat_U0_m_axi_gmem1_0_ARLEN;
wire   [2:0] load_mat_U0_m_axi_gmem1_0_ARSIZE;
wire   [1:0] load_mat_U0_m_axi_gmem1_0_ARBURST;
wire   [1:0] load_mat_U0_m_axi_gmem1_0_ARLOCK;
wire   [3:0] load_mat_U0_m_axi_gmem1_0_ARCACHE;
wire   [2:0] load_mat_U0_m_axi_gmem1_0_ARPROT;
wire   [3:0] load_mat_U0_m_axi_gmem1_0_ARQOS;
wire   [3:0] load_mat_U0_m_axi_gmem1_0_ARREGION;
wire   [0:0] load_mat_U0_m_axi_gmem1_0_ARUSER;
wire    load_mat_U0_m_axi_gmem1_0_RREADY;
wire    load_mat_U0_m_axi_gmem1_0_BREADY;
wire   [31:0] load_mat_U0_matrix_stream_din;
wire    load_mat_U0_matrix_stream_write;
wire    compute_matmul_U0_ap_start;
wire    compute_matmul_U0_ap_done;
wire    compute_matmul_U0_ap_continue;
wire    compute_matmul_U0_ap_idle;
wire    compute_matmul_U0_ap_ready;
wire    compute_matmul_U0_start_out;
wire    compute_matmul_U0_start_write;
wire    compute_matmul_U0_vector_stream_read;
wire    compute_matmul_U0_matrix_stream_read;
wire   [31:0] compute_matmul_U0_result_stream_din;
wire    compute_matmul_U0_result_stream_write;
wire   [31:0] compute_matmul_U0_result_stream_num_data_valid;
wire   [31:0] compute_matmul_U0_result_stream_fifo_cap;
wire    store_result_U0_ap_start;
wire    store_result_U0_ap_done;
wire    store_result_U0_ap_continue;
wire    store_result_U0_ap_idle;
wire    store_result_U0_ap_ready;
wire    store_result_U0_result_stream_read;
wire   [6:0] store_result_U0_out_0_address0;
wire    store_result_U0_out_0_ce0;
wire    store_result_U0_out_0_we0;
wire   [31:0] store_result_U0_out_0_d0;
wire   [6:0] store_result_U0_out_1_address0;
wire    store_result_U0_out_1_ce0;
wire    store_result_U0_out_1_we0;
wire   [31:0] store_result_U0_out_1_d0;
wire   [6:0] store_result_U0_out_2_address0;
wire    store_result_U0_out_2_ce0;
wire    store_result_U0_out_2_we0;
wire   [31:0] store_result_U0_out_2_d0;
wire   [6:0] store_result_U0_out_3_address0;
wire    store_result_U0_out_3_ce0;
wire    store_result_U0_out_3_we0;
wire   [31:0] store_result_U0_out_3_d0;
wire   [6:0] store_result_U0_out_4_address0;
wire    store_result_U0_out_4_ce0;
wire    store_result_U0_out_4_we0;
wire   [31:0] store_result_U0_out_4_d0;
wire   [6:0] store_result_U0_out_5_address0;
wire    store_result_U0_out_5_ce0;
wire    store_result_U0_out_5_we0;
wire   [31:0] store_result_U0_out_5_d0;
wire   [6:0] store_result_U0_out_6_address0;
wire    store_result_U0_out_6_ce0;
wire    store_result_U0_out_6_we0;
wire   [31:0] store_result_U0_out_6_d0;
wire   [6:0] store_result_U0_out_7_address0;
wire    store_result_U0_out_7_ce0;
wire    store_result_U0_out_7_we0;
wire   [31:0] store_result_U0_out_7_d0;
wire    vector_stream_full_n;
wire   [31:0] vector_stream_dout;
wire    vector_stream_empty_n;
wire   [6:0] vector_stream_num_data_valid;
wire   [6:0] vector_stream_fifo_cap;
wire    matrix_stream_full_n;
wire   [31:0] matrix_stream_dout;
wire    matrix_stream_empty_n;
wire   [6:0] matrix_stream_num_data_valid;
wire   [6:0] matrix_stream_fifo_cap;
wire    result_stream_full_n;
wire   [31:0] result_stream_dout;
wire    result_stream_empty_n;
wire   [6:0] result_stream_num_data_valid;
wire   [6:0] result_stream_fifo_cap;
reg    ap_sync_ready;
reg    ap_sync_reg_load_vec_U0_ap_ready;
wire    ap_sync_load_vec_U0_ap_ready;
reg    ap_sync_reg_load_mat_U0_ap_ready;
wire    ap_sync_load_mat_U0_ap_ready;
wire   [0:0] start_for_compute_matmul_U0_din;
wire    start_for_compute_matmul_U0_full_n;
wire   [0:0] start_for_compute_matmul_U0_dout;
wire    start_for_compute_matmul_U0_empty_n;
wire   [0:0] start_for_store_result_U0_din;
wire    start_for_store_result_U0_full_n;
wire   [0:0] start_for_store_result_U0_dout;
wire    start_for_store_result_U0_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_load_vec_U0_ap_ready = 1'b0;
#0 ap_sync_reg_load_mat_U0_ap_ready = 1'b0;
end

kernel_mhsa_load_vec load_vec_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(load_vec_U0_ap_start),
    .start_full_n(start_for_compute_matmul_U0_full_n),
    .ap_done(load_vec_U0_ap_done),
    .ap_continue(load_vec_U0_ap_continue),
    .ap_idle(load_vec_U0_ap_idle),
    .ap_ready(load_vec_U0_ap_ready),
    .vector_stream_din(load_vec_U0_vector_stream_din),
    .vector_stream_full_n(vector_stream_full_n),
    .vector_stream_write(load_vec_U0_vector_stream_write),
    .vector_stream_num_data_valid(load_vec_U0_vector_stream_num_data_valid),
    .vector_stream_fifo_cap(load_vec_U0_vector_stream_fifo_cap),
    .start_out(load_vec_U0_start_out),
    .start_write(load_vec_U0_start_write),
    .i_vec_0_address0(load_vec_U0_i_vec_0_address0),
    .i_vec_0_ce0(load_vec_U0_i_vec_0_ce0),
    .i_vec_0_q0(i_vec_0_q0),
    .i_vec_1_address0(load_vec_U0_i_vec_1_address0),
    .i_vec_1_ce0(load_vec_U0_i_vec_1_ce0),
    .i_vec_1_q0(i_vec_1_q0),
    .i_vec_2_address0(load_vec_U0_i_vec_2_address0),
    .i_vec_2_ce0(load_vec_U0_i_vec_2_ce0),
    .i_vec_2_q0(i_vec_2_q0),
    .i_vec_3_address0(load_vec_U0_i_vec_3_address0),
    .i_vec_3_ce0(load_vec_U0_i_vec_3_ce0),
    .i_vec_3_q0(i_vec_3_q0),
    .i_vec_4_address0(load_vec_U0_i_vec_4_address0),
    .i_vec_4_ce0(load_vec_U0_i_vec_4_ce0),
    .i_vec_4_q0(i_vec_4_q0),
    .i_vec_5_address0(load_vec_U0_i_vec_5_address0),
    .i_vec_5_ce0(load_vec_U0_i_vec_5_ce0),
    .i_vec_5_q0(i_vec_5_q0),
    .i_vec_6_address0(load_vec_U0_i_vec_6_address0),
    .i_vec_6_ce0(load_vec_U0_i_vec_6_ce0),
    .i_vec_6_q0(i_vec_6_q0),
    .i_vec_7_address0(load_vec_U0_i_vec_7_address0),
    .i_vec_7_ce0(load_vec_U0_i_vec_7_ce0),
    .i_vec_7_q0(i_vec_7_q0)
);

kernel_mhsa_load_mat load_mat_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(load_mat_U0_ap_start),
    .ap_done(load_mat_U0_ap_done),
    .ap_continue(load_mat_U0_ap_continue),
    .ap_idle(load_mat_U0_ap_idle),
    .ap_ready(load_mat_U0_ap_ready),
    .m_axi_gmem1_0_AWVALID(load_mat_U0_m_axi_gmem1_0_AWVALID),
    .m_axi_gmem1_0_AWREADY(1'b0),
    .m_axi_gmem1_0_AWADDR(load_mat_U0_m_axi_gmem1_0_AWADDR),
    .m_axi_gmem1_0_AWID(load_mat_U0_m_axi_gmem1_0_AWID),
    .m_axi_gmem1_0_AWLEN(load_mat_U0_m_axi_gmem1_0_AWLEN),
    .m_axi_gmem1_0_AWSIZE(load_mat_U0_m_axi_gmem1_0_AWSIZE),
    .m_axi_gmem1_0_AWBURST(load_mat_U0_m_axi_gmem1_0_AWBURST),
    .m_axi_gmem1_0_AWLOCK(load_mat_U0_m_axi_gmem1_0_AWLOCK),
    .m_axi_gmem1_0_AWCACHE(load_mat_U0_m_axi_gmem1_0_AWCACHE),
    .m_axi_gmem1_0_AWPROT(load_mat_U0_m_axi_gmem1_0_AWPROT),
    .m_axi_gmem1_0_AWQOS(load_mat_U0_m_axi_gmem1_0_AWQOS),
    .m_axi_gmem1_0_AWREGION(load_mat_U0_m_axi_gmem1_0_AWREGION),
    .m_axi_gmem1_0_AWUSER(load_mat_U0_m_axi_gmem1_0_AWUSER),
    .m_axi_gmem1_0_WVALID(load_mat_U0_m_axi_gmem1_0_WVALID),
    .m_axi_gmem1_0_WREADY(1'b0),
    .m_axi_gmem1_0_WDATA(load_mat_U0_m_axi_gmem1_0_WDATA),
    .m_axi_gmem1_0_WSTRB(load_mat_U0_m_axi_gmem1_0_WSTRB),
    .m_axi_gmem1_0_WLAST(load_mat_U0_m_axi_gmem1_0_WLAST),
    .m_axi_gmem1_0_WID(load_mat_U0_m_axi_gmem1_0_WID),
    .m_axi_gmem1_0_WUSER(load_mat_U0_m_axi_gmem1_0_WUSER),
    .m_axi_gmem1_0_ARVALID(load_mat_U0_m_axi_gmem1_0_ARVALID),
    .m_axi_gmem1_0_ARREADY(m_axi_gmem1_0_ARREADY),
    .m_axi_gmem1_0_ARADDR(load_mat_U0_m_axi_gmem1_0_ARADDR),
    .m_axi_gmem1_0_ARID(load_mat_U0_m_axi_gmem1_0_ARID),
    .m_axi_gmem1_0_ARLEN(load_mat_U0_m_axi_gmem1_0_ARLEN),
    .m_axi_gmem1_0_ARSIZE(load_mat_U0_m_axi_gmem1_0_ARSIZE),
    .m_axi_gmem1_0_ARBURST(load_mat_U0_m_axi_gmem1_0_ARBURST),
    .m_axi_gmem1_0_ARLOCK(load_mat_U0_m_axi_gmem1_0_ARLOCK),
    .m_axi_gmem1_0_ARCACHE(load_mat_U0_m_axi_gmem1_0_ARCACHE),
    .m_axi_gmem1_0_ARPROT(load_mat_U0_m_axi_gmem1_0_ARPROT),
    .m_axi_gmem1_0_ARQOS(load_mat_U0_m_axi_gmem1_0_ARQOS),
    .m_axi_gmem1_0_ARREGION(load_mat_U0_m_axi_gmem1_0_ARREGION),
    .m_axi_gmem1_0_ARUSER(load_mat_U0_m_axi_gmem1_0_ARUSER),
    .m_axi_gmem1_0_RVALID(m_axi_gmem1_0_RVALID),
    .m_axi_gmem1_0_RREADY(load_mat_U0_m_axi_gmem1_0_RREADY),
    .m_axi_gmem1_0_RDATA(m_axi_gmem1_0_RDATA),
    .m_axi_gmem1_0_RLAST(m_axi_gmem1_0_RLAST),
    .m_axi_gmem1_0_RID(m_axi_gmem1_0_RID),
    .m_axi_gmem1_0_RFIFONUM(m_axi_gmem1_0_RFIFONUM),
    .m_axi_gmem1_0_RUSER(m_axi_gmem1_0_RUSER),
    .m_axi_gmem1_0_RRESP(m_axi_gmem1_0_RRESP),
    .m_axi_gmem1_0_BVALID(1'b0),
    .m_axi_gmem1_0_BREADY(load_mat_U0_m_axi_gmem1_0_BREADY),
    .m_axi_gmem1_0_BRESP(2'd0),
    .m_axi_gmem1_0_BID(1'd0),
    .m_axi_gmem1_0_BUSER(1'd0),
    .i_mat(i_mat),
    .matrix_stream_din(load_mat_U0_matrix_stream_din),
    .matrix_stream_full_n(matrix_stream_full_n),
    .matrix_stream_write(load_mat_U0_matrix_stream_write),
    .matrix_stream_num_data_valid(matrix_stream_num_data_valid),
    .matrix_stream_fifo_cap(matrix_stream_fifo_cap)
);

kernel_mhsa_compute_matmul compute_matmul_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(compute_matmul_U0_ap_start),
    .start_full_n(start_for_store_result_U0_full_n),
    .ap_done(compute_matmul_U0_ap_done),
    .ap_continue(compute_matmul_U0_ap_continue),
    .ap_idle(compute_matmul_U0_ap_idle),
    .ap_ready(compute_matmul_U0_ap_ready),
    .start_out(compute_matmul_U0_start_out),
    .start_write(compute_matmul_U0_start_write),
    .vector_stream_dout(vector_stream_dout),
    .vector_stream_empty_n(vector_stream_empty_n),
    .vector_stream_read(compute_matmul_U0_vector_stream_read),
    .vector_stream_num_data_valid(vector_stream_num_data_valid),
    .vector_stream_fifo_cap(vector_stream_fifo_cap),
    .matrix_stream_dout(matrix_stream_dout),
    .matrix_stream_empty_n(matrix_stream_empty_n),
    .matrix_stream_read(compute_matmul_U0_matrix_stream_read),
    .matrix_stream_num_data_valid(matrix_stream_num_data_valid),
    .matrix_stream_fifo_cap(matrix_stream_fifo_cap),
    .result_stream_din(compute_matmul_U0_result_stream_din),
    .result_stream_full_n(result_stream_full_n),
    .result_stream_write(compute_matmul_U0_result_stream_write),
    .result_stream_num_data_valid(compute_matmul_U0_result_stream_num_data_valid),
    .result_stream_fifo_cap(compute_matmul_U0_result_stream_fifo_cap)
);

kernel_mhsa_store_result store_result_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(store_result_U0_ap_start),
    .ap_done(store_result_U0_ap_done),
    .ap_continue(store_result_U0_ap_continue),
    .ap_idle(store_result_U0_ap_idle),
    .ap_ready(store_result_U0_ap_ready),
    .result_stream_dout(result_stream_dout),
    .result_stream_empty_n(result_stream_empty_n),
    .result_stream_read(store_result_U0_result_stream_read),
    .result_stream_num_data_valid(result_stream_num_data_valid),
    .result_stream_fifo_cap(result_stream_fifo_cap),
    .out_0_address0(store_result_U0_out_0_address0),
    .out_0_ce0(store_result_U0_out_0_ce0),
    .out_0_we0(store_result_U0_out_0_we0),
    .out_0_d0(store_result_U0_out_0_d0),
    .out_1_address0(store_result_U0_out_1_address0),
    .out_1_ce0(store_result_U0_out_1_ce0),
    .out_1_we0(store_result_U0_out_1_we0),
    .out_1_d0(store_result_U0_out_1_d0),
    .out_2_address0(store_result_U0_out_2_address0),
    .out_2_ce0(store_result_U0_out_2_ce0),
    .out_2_we0(store_result_U0_out_2_we0),
    .out_2_d0(store_result_U0_out_2_d0),
    .out_3_address0(store_result_U0_out_3_address0),
    .out_3_ce0(store_result_U0_out_3_ce0),
    .out_3_we0(store_result_U0_out_3_we0),
    .out_3_d0(store_result_U0_out_3_d0),
    .out_4_address0(store_result_U0_out_4_address0),
    .out_4_ce0(store_result_U0_out_4_ce0),
    .out_4_we0(store_result_U0_out_4_we0),
    .out_4_d0(store_result_U0_out_4_d0),
    .out_5_address0(store_result_U0_out_5_address0),
    .out_5_ce0(store_result_U0_out_5_ce0),
    .out_5_we0(store_result_U0_out_5_we0),
    .out_5_d0(store_result_U0_out_5_d0),
    .out_6_address0(store_result_U0_out_6_address0),
    .out_6_ce0(store_result_U0_out_6_ce0),
    .out_6_we0(store_result_U0_out_6_we0),
    .out_6_d0(store_result_U0_out_6_d0),
    .out_7_address0(store_result_U0_out_7_address0),
    .out_7_ce0(store_result_U0_out_7_ce0),
    .out_7_we0(store_result_U0_out_7_we0),
    .out_7_d0(store_result_U0_out_7_d0)
);

kernel_mhsa_fifo_w32_d64_A vector_stream_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_vec_U0_vector_stream_din),
    .if_full_n(vector_stream_full_n),
    .if_write(load_vec_U0_vector_stream_write),
    .if_dout(vector_stream_dout),
    .if_empty_n(vector_stream_empty_n),
    .if_read(compute_matmul_U0_vector_stream_read),
    .if_num_data_valid(vector_stream_num_data_valid),
    .if_fifo_cap(vector_stream_fifo_cap)
);

kernel_mhsa_fifo_w32_d64_A matrix_stream_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_mat_U0_matrix_stream_din),
    .if_full_n(matrix_stream_full_n),
    .if_write(load_mat_U0_matrix_stream_write),
    .if_dout(matrix_stream_dout),
    .if_empty_n(matrix_stream_empty_n),
    .if_read(compute_matmul_U0_matrix_stream_read),
    .if_num_data_valid(matrix_stream_num_data_valid),
    .if_fifo_cap(matrix_stream_fifo_cap)
);

kernel_mhsa_fifo_w32_d64_A result_stream_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(compute_matmul_U0_result_stream_din),
    .if_full_n(result_stream_full_n),
    .if_write(compute_matmul_U0_result_stream_write),
    .if_dout(result_stream_dout),
    .if_empty_n(result_stream_empty_n),
    .if_read(store_result_U0_result_stream_read),
    .if_num_data_valid(result_stream_num_data_valid),
    .if_fifo_cap(result_stream_fifo_cap)
);

kernel_mhsa_start_for_compute_matmul_U0 start_for_compute_matmul_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_compute_matmul_U0_din),
    .if_full_n(start_for_compute_matmul_U0_full_n),
    .if_write(load_vec_U0_start_write),
    .if_dout(start_for_compute_matmul_U0_dout),
    .if_empty_n(start_for_compute_matmul_U0_empty_n),
    .if_read(compute_matmul_U0_ap_ready)
);

kernel_mhsa_start_for_store_result_U0 start_for_store_result_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_store_result_U0_din),
    .if_full_n(start_for_store_result_U0_full_n),
    .if_write(compute_matmul_U0_start_write),
    .if_dout(start_for_store_result_U0_dout),
    .if_empty_n(start_for_store_result_U0_empty_n),
    .if_read(store_result_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_load_mat_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_load_mat_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_load_mat_U0_ap_ready <= ap_sync_load_mat_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_load_vec_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_load_vec_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_load_vec_U0_ap_ready <= ap_sync_load_vec_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_sync_ready <= (~ap_sync_ready & ap_sync_load_vec_U0_ap_ready & ap_sync_load_mat_U0_ap_ready & ap_start);
end

assign ap_done = store_result_U0_ap_done;

assign ap_idle = (store_result_U0_ap_idle & load_vec_U0_ap_idle & load_mat_U0_ap_idle & compute_matmul_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_load_mat_U0_ap_ready = (load_mat_U0_ap_ready | ap_sync_reg_load_mat_U0_ap_ready);

assign ap_sync_load_vec_U0_ap_ready = (load_vec_U0_ap_ready | ap_sync_reg_load_vec_U0_ap_ready);

assign compute_matmul_U0_ap_continue = 1'b1;

assign compute_matmul_U0_ap_start = start_for_compute_matmul_U0_empty_n;

assign compute_matmul_U0_result_stream_fifo_cap = result_stream_fifo_cap;

assign compute_matmul_U0_result_stream_num_data_valid = result_stream_num_data_valid;

assign i_vec_0_address0 = load_vec_U0_i_vec_0_address0;

assign i_vec_0_address1 = 7'd0;

assign i_vec_0_ce0 = load_vec_U0_i_vec_0_ce0;

assign i_vec_0_ce1 = 1'b0;

assign i_vec_0_d0 = 32'd0;

assign i_vec_0_d1 = 32'd0;

assign i_vec_0_we0 = 1'b0;

assign i_vec_0_we1 = 1'b0;

assign i_vec_1_address0 = load_vec_U0_i_vec_1_address0;

assign i_vec_1_address1 = 7'd0;

assign i_vec_1_ce0 = load_vec_U0_i_vec_1_ce0;

assign i_vec_1_ce1 = 1'b0;

assign i_vec_1_d0 = 32'd0;

assign i_vec_1_d1 = 32'd0;

assign i_vec_1_we0 = 1'b0;

assign i_vec_1_we1 = 1'b0;

assign i_vec_2_address0 = load_vec_U0_i_vec_2_address0;

assign i_vec_2_address1 = 7'd0;

assign i_vec_2_ce0 = load_vec_U0_i_vec_2_ce0;

assign i_vec_2_ce1 = 1'b0;

assign i_vec_2_d0 = 32'd0;

assign i_vec_2_d1 = 32'd0;

assign i_vec_2_we0 = 1'b0;

assign i_vec_2_we1 = 1'b0;

assign i_vec_3_address0 = load_vec_U0_i_vec_3_address0;

assign i_vec_3_address1 = 7'd0;

assign i_vec_3_ce0 = load_vec_U0_i_vec_3_ce0;

assign i_vec_3_ce1 = 1'b0;

assign i_vec_3_d0 = 32'd0;

assign i_vec_3_d1 = 32'd0;

assign i_vec_3_we0 = 1'b0;

assign i_vec_3_we1 = 1'b0;

assign i_vec_4_address0 = load_vec_U0_i_vec_4_address0;

assign i_vec_4_address1 = 7'd0;

assign i_vec_4_ce0 = load_vec_U0_i_vec_4_ce0;

assign i_vec_4_ce1 = 1'b0;

assign i_vec_4_d0 = 32'd0;

assign i_vec_4_d1 = 32'd0;

assign i_vec_4_we0 = 1'b0;

assign i_vec_4_we1 = 1'b0;

assign i_vec_5_address0 = load_vec_U0_i_vec_5_address0;

assign i_vec_5_address1 = 7'd0;

assign i_vec_5_ce0 = load_vec_U0_i_vec_5_ce0;

assign i_vec_5_ce1 = 1'b0;

assign i_vec_5_d0 = 32'd0;

assign i_vec_5_d1 = 32'd0;

assign i_vec_5_we0 = 1'b0;

assign i_vec_5_we1 = 1'b0;

assign i_vec_6_address0 = load_vec_U0_i_vec_6_address0;

assign i_vec_6_address1 = 7'd0;

assign i_vec_6_ce0 = load_vec_U0_i_vec_6_ce0;

assign i_vec_6_ce1 = 1'b0;

assign i_vec_6_d0 = 32'd0;

assign i_vec_6_d1 = 32'd0;

assign i_vec_6_we0 = 1'b0;

assign i_vec_6_we1 = 1'b0;

assign i_vec_7_address0 = load_vec_U0_i_vec_7_address0;

assign i_vec_7_address1 = 7'd0;

assign i_vec_7_ce0 = load_vec_U0_i_vec_7_ce0;

assign i_vec_7_ce1 = 1'b0;

assign i_vec_7_d0 = 32'd0;

assign i_vec_7_d1 = 32'd0;

assign i_vec_7_we0 = 1'b0;

assign i_vec_7_we1 = 1'b0;

assign load_mat_U0_ap_continue = 1'b1;

assign load_mat_U0_ap_start = ((ap_sync_reg_load_mat_U0_ap_ready ^ 1'b1) & ~ap_sync_ready & ap_start);

assign load_vec_U0_ap_continue = 1'b1;

assign load_vec_U0_ap_start = ((ap_sync_reg_load_vec_U0_ap_ready ^ 1'b1) & ~ap_sync_ready & ap_start);

assign load_vec_U0_vector_stream_fifo_cap = vector_stream_fifo_cap;

assign load_vec_U0_vector_stream_num_data_valid = vector_stream_num_data_valid;

assign m_axi_gmem1_0_ARADDR = load_mat_U0_m_axi_gmem1_0_ARADDR;

assign m_axi_gmem1_0_ARBURST = load_mat_U0_m_axi_gmem1_0_ARBURST;

assign m_axi_gmem1_0_ARCACHE = load_mat_U0_m_axi_gmem1_0_ARCACHE;

assign m_axi_gmem1_0_ARID = load_mat_U0_m_axi_gmem1_0_ARID;

assign m_axi_gmem1_0_ARLEN = load_mat_U0_m_axi_gmem1_0_ARLEN;

assign m_axi_gmem1_0_ARLOCK = load_mat_U0_m_axi_gmem1_0_ARLOCK;

assign m_axi_gmem1_0_ARPROT = load_mat_U0_m_axi_gmem1_0_ARPROT;

assign m_axi_gmem1_0_ARQOS = load_mat_U0_m_axi_gmem1_0_ARQOS;

assign m_axi_gmem1_0_ARREGION = load_mat_U0_m_axi_gmem1_0_ARREGION;

assign m_axi_gmem1_0_ARSIZE = load_mat_U0_m_axi_gmem1_0_ARSIZE;

assign m_axi_gmem1_0_ARUSER = load_mat_U0_m_axi_gmem1_0_ARUSER;

assign m_axi_gmem1_0_ARVALID = load_mat_U0_m_axi_gmem1_0_ARVALID;

assign m_axi_gmem1_0_AWADDR = 64'd0;

assign m_axi_gmem1_0_AWBURST = 2'd0;

assign m_axi_gmem1_0_AWCACHE = 4'd0;

assign m_axi_gmem1_0_AWID = 1'd0;

assign m_axi_gmem1_0_AWLEN = 32'd0;

assign m_axi_gmem1_0_AWLOCK = 2'd0;

assign m_axi_gmem1_0_AWPROT = 3'd0;

assign m_axi_gmem1_0_AWQOS = 4'd0;

assign m_axi_gmem1_0_AWREGION = 4'd0;

assign m_axi_gmem1_0_AWSIZE = 3'd0;

assign m_axi_gmem1_0_AWUSER = 1'd0;

assign m_axi_gmem1_0_AWVALID = 1'b0;

assign m_axi_gmem1_0_BREADY = 1'b0;

assign m_axi_gmem1_0_RREADY = load_mat_U0_m_axi_gmem1_0_RREADY;

assign m_axi_gmem1_0_WDATA = 32'd0;

assign m_axi_gmem1_0_WID = 1'd0;

assign m_axi_gmem1_0_WLAST = 1'b0;

assign m_axi_gmem1_0_WSTRB = 4'd0;

assign m_axi_gmem1_0_WUSER = 1'd0;

assign m_axi_gmem1_0_WVALID = 1'b0;

assign o_vec_0_address0 = store_result_U0_out_0_address0;

assign o_vec_0_address1 = 7'd0;

assign o_vec_0_ce0 = store_result_U0_out_0_ce0;

assign o_vec_0_ce1 = 1'b0;

assign o_vec_0_d0 = store_result_U0_out_0_d0;

assign o_vec_0_d1 = 32'd0;

assign o_vec_0_we0 = store_result_U0_out_0_we0;

assign o_vec_0_we1 = 1'b0;

assign o_vec_1_address0 = store_result_U0_out_1_address0;

assign o_vec_1_address1 = 7'd0;

assign o_vec_1_ce0 = store_result_U0_out_1_ce0;

assign o_vec_1_ce1 = 1'b0;

assign o_vec_1_d0 = store_result_U0_out_1_d0;

assign o_vec_1_d1 = 32'd0;

assign o_vec_1_we0 = store_result_U0_out_1_we0;

assign o_vec_1_we1 = 1'b0;

assign o_vec_2_address0 = store_result_U0_out_2_address0;

assign o_vec_2_address1 = 7'd0;

assign o_vec_2_ce0 = store_result_U0_out_2_ce0;

assign o_vec_2_ce1 = 1'b0;

assign o_vec_2_d0 = store_result_U0_out_2_d0;

assign o_vec_2_d1 = 32'd0;

assign o_vec_2_we0 = store_result_U0_out_2_we0;

assign o_vec_2_we1 = 1'b0;

assign o_vec_3_address0 = store_result_U0_out_3_address0;

assign o_vec_3_address1 = 7'd0;

assign o_vec_3_ce0 = store_result_U0_out_3_ce0;

assign o_vec_3_ce1 = 1'b0;

assign o_vec_3_d0 = store_result_U0_out_3_d0;

assign o_vec_3_d1 = 32'd0;

assign o_vec_3_we0 = store_result_U0_out_3_we0;

assign o_vec_3_we1 = 1'b0;

assign o_vec_4_address0 = store_result_U0_out_4_address0;

assign o_vec_4_address1 = 7'd0;

assign o_vec_4_ce0 = store_result_U0_out_4_ce0;

assign o_vec_4_ce1 = 1'b0;

assign o_vec_4_d0 = store_result_U0_out_4_d0;

assign o_vec_4_d1 = 32'd0;

assign o_vec_4_we0 = store_result_U0_out_4_we0;

assign o_vec_4_we1 = 1'b0;

assign o_vec_5_address0 = store_result_U0_out_5_address0;

assign o_vec_5_address1 = 7'd0;

assign o_vec_5_ce0 = store_result_U0_out_5_ce0;

assign o_vec_5_ce1 = 1'b0;

assign o_vec_5_d0 = store_result_U0_out_5_d0;

assign o_vec_5_d1 = 32'd0;

assign o_vec_5_we0 = store_result_U0_out_5_we0;

assign o_vec_5_we1 = 1'b0;

assign o_vec_6_address0 = store_result_U0_out_6_address0;

assign o_vec_6_address1 = 7'd0;

assign o_vec_6_ce0 = store_result_U0_out_6_ce0;

assign o_vec_6_ce1 = 1'b0;

assign o_vec_6_d0 = store_result_U0_out_6_d0;

assign o_vec_6_d1 = 32'd0;

assign o_vec_6_we0 = store_result_U0_out_6_we0;

assign o_vec_6_we1 = 1'b0;

assign o_vec_7_address0 = store_result_U0_out_7_address0;

assign o_vec_7_address1 = 7'd0;

assign o_vec_7_ce0 = store_result_U0_out_7_ce0;

assign o_vec_7_ce1 = 1'b0;

assign o_vec_7_d0 = store_result_U0_out_7_d0;

assign o_vec_7_d1 = 32'd0;

assign o_vec_7_we0 = store_result_U0_out_7_we0;

assign o_vec_7_we1 = 1'b0;

assign start_for_compute_matmul_U0_din = 1'b1;

assign start_for_store_result_U0_din = 1'b1;

assign store_result_U0_ap_continue = ap_continue;

assign store_result_U0_ap_start = start_for_store_result_U0_empty_n;

endmodule //kernel_mhsa_matmul_1
