// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module kernel_mhsa_RoPE_Pipeline_VITIS_LOOP_16_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        out_7_address0,
        out_7_ce0,
        out_7_we0,
        out_7_d0,
        out_6_address0,
        out_6_ce0,
        out_6_we0,
        out_6_d0,
        out_5_address0,
        out_5_ce0,
        out_5_we0,
        out_5_d0,
        out_4_address0,
        out_4_ce0,
        out_4_we0,
        out_4_d0,
        out_3_address0,
        out_3_ce0,
        out_3_we0,
        out_3_d0,
        out_2_address0,
        out_2_ce0,
        out_2_we0,
        out_2_d0,
        out_1_address0,
        out_1_ce0,
        out_1_we0,
        out_1_d0,
        out_0_address0,
        out_0_ce0,
        out_0_we0,
        out_0_d0,
        conv,
        in_0_address0,
        in_0_ce0,
        in_0_q0,
        in_2_address0,
        in_2_ce0,
        in_2_q0,
        in_4_address0,
        in_4_ce0,
        in_4_q0,
        in_6_address0,
        in_6_ce0,
        in_6_q0,
        in_8_address0,
        in_8_ce0,
        in_8_q0,
        in_10_address0,
        in_10_ce0,
        in_10_q0,
        in_12_address0,
        in_12_ce0,
        in_12_q0,
        in_14_address0,
        in_14_ce0,
        in_14_q0,
        in_1_address0,
        in_1_ce0,
        in_1_q0,
        in_3_address0,
        in_3_ce0,
        in_3_q0,
        in_5_address0,
        in_5_ce0,
        in_5_q0,
        in_7_address0,
        in_7_ce0,
        in_7_q0,
        in_9_address0,
        in_9_ce0,
        in_9_q0,
        in_11_address0,
        in_11_ce0,
        in_11_q0,
        in_13_address0,
        in_13_ce0,
        in_13_q0,
        in_15_address0,
        in_15_ce0,
        in_15_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] out_7_address0;
output   out_7_ce0;
output   out_7_we0;
output  [31:0] out_7_d0;
output  [6:0] out_6_address0;
output   out_6_ce0;
output   out_6_we0;
output  [31:0] out_6_d0;
output  [6:0] out_5_address0;
output   out_5_ce0;
output   out_5_we0;
output  [31:0] out_5_d0;
output  [6:0] out_4_address0;
output   out_4_ce0;
output   out_4_we0;
output  [31:0] out_4_d0;
output  [6:0] out_3_address0;
output   out_3_ce0;
output   out_3_we0;
output  [31:0] out_3_d0;
output  [6:0] out_2_address0;
output   out_2_ce0;
output   out_2_we0;
output  [31:0] out_2_d0;
output  [6:0] out_1_address0;
output   out_1_ce0;
output   out_1_we0;
output  [31:0] out_1_d0;
output  [6:0] out_0_address0;
output   out_0_ce0;
output   out_0_we0;
output  [31:0] out_0_d0;
input  [31:0] conv;
output  [5:0] in_0_address0;
output   in_0_ce0;
input  [31:0] in_0_q0;
output  [5:0] in_2_address0;
output   in_2_ce0;
input  [31:0] in_2_q0;
output  [5:0] in_4_address0;
output   in_4_ce0;
input  [31:0] in_4_q0;
output  [5:0] in_6_address0;
output   in_6_ce0;
input  [31:0] in_6_q0;
output  [5:0] in_8_address0;
output   in_8_ce0;
input  [31:0] in_8_q0;
output  [5:0] in_10_address0;
output   in_10_ce0;
input  [31:0] in_10_q0;
output  [5:0] in_12_address0;
output   in_12_ce0;
input  [31:0] in_12_q0;
output  [5:0] in_14_address0;
output   in_14_ce0;
input  [31:0] in_14_q0;
output  [5:0] in_1_address0;
output   in_1_ce0;
input  [31:0] in_1_q0;
output  [5:0] in_3_address0;
output   in_3_ce0;
input  [31:0] in_3_q0;
output  [5:0] in_5_address0;
output   in_5_ce0;
input  [31:0] in_5_q0;
output  [5:0] in_7_address0;
output   in_7_ce0;
input  [31:0] in_7_q0;
output  [5:0] in_9_address0;
output   in_9_ce0;
input  [31:0] in_9_q0;
output  [5:0] in_11_address0;
output   in_11_ce0;
input  [31:0] in_11_q0;
output  [5:0] in_13_address0;
output   in_13_ce0;
input  [31:0] in_13_q0;
output  [5:0] in_15_address0;
output   in_15_ce0;
input  [31:0] in_15_q0;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln16_fu_877_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [3:0] ref_4oPi_table_100_address0;
wire   [99:0] ref_4oPi_table_100_q0;
wire   [6:0] second_order_float_cos_K0_address0;
wire   [27:0] second_order_float_cos_K0_q0;
wire   [6:0] second_order_float_cos_K1_address0;
wire   [21:0] second_order_float_cos_K1_q0;
wire   [6:0] second_order_float_cos_K2_address0;
wire   [13:0] second_order_float_cos_K2_q0;
wire   [6:0] second_order_float_sin_K0_address0;
wire   [28:0] second_order_float_sin_K0_q0;
wire   [6:0] second_order_float_sin_K1_address0;
wire  signed [20:0] second_order_float_sin_K1_q0;
wire   [6:0] second_order_float_sin_K2_address0;
wire  signed [12:0] second_order_float_sin_K2_q0;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] trunc_ln16_fu_829_p1;
reg   [3:0] trunc_ln16_reg_2396;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter1_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter2_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter3_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter4_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter5_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter6_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter7_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter8_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter9_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter10_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter11_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter12_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter13_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter14_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter15_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter16_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter17_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter18_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter19_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter20_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter21_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter22_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter23_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter24_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter25_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter26_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter27_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter28_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter29_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter30_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter31_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter32_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter33_reg;
reg   [3:0] trunc_ln16_reg_2396_pp0_iter34_reg;
wire   [2:0] trunc_ln16_1_fu_833_p1;
reg   [2:0] trunc_ln16_1_reg_2402;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter1_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter2_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter3_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter4_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter5_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter6_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter7_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter8_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter9_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter10_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter11_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter12_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter13_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter14_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter15_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter16_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter17_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter18_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter19_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter20_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter21_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter22_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter23_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter24_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter25_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter26_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter27_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter28_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter29_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter30_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter31_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter32_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter33_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter34_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter35_reg;
reg   [2:0] trunc_ln16_1_reg_2402_pp0_iter36_reg;
reg   [6:0] lshr_ln_reg_2406;
reg   [6:0] lshr_ln_reg_2406_pp0_iter1_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter2_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter3_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter4_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter5_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter6_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter7_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter8_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter9_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter10_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter11_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter12_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter13_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter14_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter15_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter16_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter17_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter18_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter19_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter20_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter21_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter22_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter23_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter24_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter25_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter26_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter27_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter28_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter29_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter30_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter31_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter32_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter33_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter34_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter35_reg;
reg   [6:0] lshr_ln_reg_2406_pp0_iter36_reg;
reg   [5:0] lshr_ln16_2_reg_2411;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter1_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter2_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter3_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter4_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter5_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter6_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter7_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter8_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter9_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter10_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter11_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter12_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter13_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter14_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter15_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter16_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter17_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter18_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter19_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter20_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter21_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter22_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter23_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter24_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter25_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter26_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter27_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter28_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter29_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter30_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter31_reg;
reg   [5:0] lshr_ln16_2_reg_2411_pp0_iter32_reg;
wire   [5:0] head_dim_fu_857_p1;
reg   [5:0] head_dim_reg_2416;
wire   [31:0] grp_fu_780_p1;
wire   [31:0] grp_fu_758_p2;
reg   [31:0] mul_reg_2435;
wire   [31:0] grp_fu_763_p2;
reg   [31:0] y_assign_reg_2441;
wire   [31:0] grp_pow_generic_float_s_fu_749_ap_return;
reg   [31:0] tmp_reg_2446;
wire    ap_block_pp0_stage0_11001_ignoreCallOp95;
wire   [31:0] grp_fu_768_p2;
reg   [31:0] val_reg_2452;
reg   [0:0] din_sign_reg_2457;
reg   [0:0] din_sign_reg_2457_pp0_iter23_reg;
reg   [0:0] din_sign_reg_2457_pp0_iter24_reg;
reg   [0:0] din_sign_reg_2457_pp0_iter25_reg;
reg   [0:0] din_sign_reg_2457_pp0_iter26_reg;
reg   [0:0] din_sign_reg_2457_pp0_iter27_reg;
reg   [0:0] din_sign_reg_2457_pp0_iter28_reg;
reg   [0:0] din_sign_reg_2457_pp0_iter29_reg;
reg   [0:0] din_sign_reg_2457_pp0_iter30_reg;
reg   [0:0] din_sign_reg_2457_pp0_iter31_reg;
reg   [0:0] din_sign_reg_2457_pp0_iter32_reg;
wire   [7:0] din_exp_fu_928_p3;
reg   [7:0] din_exp_reg_2463;
reg   [7:0] din_exp_reg_2463_pp0_iter23_reg;
reg   [7:0] din_exp_reg_2463_pp0_iter24_reg;
reg   [7:0] din_exp_reg_2463_pp0_iter25_reg;
wire   [22:0] din_sig_fu_936_p1;
reg   [22:0] din_sig_reg_2470;
reg   [22:0] din_sig_reg_2470_pp0_iter23_reg;
wire   [0:0] closepath_fu_940_p2;
reg   [0:0] closepath_reg_2476;
reg   [0:0] closepath_reg_2476_pp0_iter23_reg;
reg   [0:0] closepath_reg_2476_pp0_iter24_reg;
reg   [0:0] closepath_reg_2476_pp0_iter25_reg;
wire   [3:0] trunc_ln379_fu_979_p1;
reg   [3:0] trunc_ln379_reg_2487;
reg  signed [79:0] Med_reg_2492;
wire   [0:0] and_ln179_fu_1029_p2;
reg   [0:0] and_ln179_reg_2503;
reg   [0:0] and_ln179_reg_2503_pp0_iter25_reg;
reg   [0:0] and_ln179_reg_2503_pp0_iter26_reg;
reg   [0:0] and_ln179_reg_2503_pp0_iter27_reg;
reg   [0:0] and_ln179_reg_2503_pp0_iter28_reg;
reg   [0:0] and_ln179_reg_2503_pp0_iter29_reg;
reg   [0:0] and_ln179_reg_2503_pp0_iter30_reg;
reg   [0:0] and_ln179_reg_2503_pp0_iter31_reg;
reg   [0:0] and_ln179_reg_2503_pp0_iter32_reg;
wire   [2:0] k_fu_1055_p3;
reg   [2:0] k_reg_2513;
reg   [2:0] k_reg_2513_pp0_iter26_reg;
reg   [2:0] k_reg_2513_pp0_iter27_reg;
reg   [2:0] k_reg_2513_pp0_iter28_reg;
reg   [2:0] k_reg_2513_pp0_iter29_reg;
reg   [2:0] k_reg_2513_pp0_iter30_reg;
reg   [2:0] k_reg_2513_pp0_iter31_reg;
reg   [2:0] k_reg_2513_pp0_iter32_reg;
wire   [57:0] Mx_bits_3_fu_1072_p3;
reg   [57:0] Mx_bits_3_reg_2519;
reg   [28:0] tmp_s_reg_2524;
wire  signed [7:0] Ex_1_fu_1128_p2;
reg  signed [7:0] Ex_1_reg_2529;
reg  signed [7:0] Ex_1_reg_2529_pp0_iter27_reg;
reg  signed [7:0] Ex_1_reg_2529_pp0_iter28_reg;
reg  signed [7:0] Ex_1_reg_2529_pp0_iter29_reg;
reg  signed [7:0] Ex_1_reg_2529_pp0_iter30_reg;
reg  signed [7:0] Ex_1_reg_2529_pp0_iter31_reg;
reg  signed [7:0] Ex_1_reg_2529_pp0_iter32_reg;
reg   [0:0] tmp_19_reg_2536;
reg   [28:0] tmp_1_reg_2542;
reg   [28:0] tmp_1_reg_2542_pp0_iter27_reg;
reg   [28:0] tmp_1_reg_2542_pp0_iter28_reg;
reg   [28:0] tmp_1_reg_2542_pp0_iter29_reg;
reg   [28:0] tmp_1_reg_2542_pp0_iter30_reg;
wire   [0:0] icmp_ln186_fu_1152_p2;
reg   [0:0] icmp_ln186_reg_2548;
reg   [0:0] icmp_ln186_reg_2548_pp0_iter27_reg;
reg   [0:0] icmp_ln186_reg_2548_pp0_iter28_reg;
reg   [0:0] icmp_ln186_reg_2548_pp0_iter29_reg;
reg   [0:0] icmp_ln186_reg_2548_pp0_iter30_reg;
reg   [0:0] icmp_ln186_reg_2548_pp0_iter31_reg;
reg   [0:0] icmp_ln186_reg_2548_pp0_iter32_reg;
wire   [21:0] B_fu_1194_p1;
reg   [21:0] B_reg_2557;
reg   [21:0] B_reg_2557_pp0_iter28_reg;
reg   [6:0] A_reg_2563;
reg   [14:0] B_trunc_reg_2568;
reg   [14:0] tmp_3_reg_2583;
reg   [26:0] trunc_ln1_reg_2609;
reg   [20:0] tmp_2_reg_2614;
reg   [12:0] tmp_4_reg_2619;
reg   [19:0] trunc_ln2_reg_2624;
reg   [11:0] trunc_ln3_reg_2629;
reg   [27:0] trunc_ln4_reg_2634;
wire   [26:0] add_ln75_1_fu_1433_p2;
reg   [26:0] add_ln75_1_reg_2639;
reg   [26:0] add_ln75_1_reg_2639_pp0_iter31_reg;
wire   [27:0] add_ln80_1_fu_1455_p2;
reg   [27:0] add_ln80_1_reg_2644;
wire   [28:0] cos_result_fu_1479_p2;
reg   [28:0] cos_result_reg_2659;
wire   [12:0] trunc_ln276_fu_1511_p1;
reg   [12:0] trunc_ln276_reg_2664;
wire   [31:0] c_3_fu_1515_p3;
reg   [31:0] c_3_reg_2669;
wire   [5:0] trunc_ln281_fu_1523_p1;
reg   [5:0] trunc_ln281_reg_2674;
wire   [31:0] c_4_fu_1567_p3;
reg   [31:0] c_4_reg_2680;
wire   [5:0] trunc_ln281_2_fu_1575_p1;
reg   [5:0] trunc_ln281_2_reg_2685;
wire   [31:0] c_2_fu_1579_p3;
reg   [31:0] c_2_reg_2691;
wire   [5:0] trunc_ln281_3_fu_1587_p1;
reg   [5:0] trunc_ln281_3_reg_2696;
reg   [26:0] trunc_ln6_reg_2701;
wire   [0:0] icmp_ln306_fu_1601_p2;
reg   [0:0] icmp_ln306_reg_2706;
wire   [63:0] zext_ln16_1_fu_1607_p1;
reg   [63:0] zext_ln16_1_reg_2711;
wire   [0:0] sin_results_sign_2_fu_2023_p3;
reg   [0:0] sin_results_sign_2_reg_2723;
wire   [7:0] sin_results_exp_1_fu_2029_p3;
reg   [7:0] sin_results_exp_1_reg_2728;
wire   [22:0] sin_results_sig_1_fu_2036_p3;
reg   [22:0] sin_results_sig_1_reg_2733;
wire   [0:0] cos_results_sign_2_fu_2048_p2;
reg   [0:0] cos_results_sign_2_reg_2738;
wire   [7:0] cos_results_exp_1_fu_2065_p3;
reg   [7:0] cos_results_exp_1_reg_2743;
wire   [22:0] cos_results_sig_1_fu_2081_p3;
reg   [22:0] cos_results_sig_1_reg_2748;
wire   [0:0] tmp_12_fu_2089_p19;
reg   [0:0] tmp_12_reg_2753;
wire   [31:0] s_out_2_fu_2182_p3;
reg   [31:0] s_out_2_reg_2799;
reg   [31:0] s_out_2_reg_2799_pp0_iter35_reg;
wire   [31:0] c_out_2_fu_2189_p3;
reg   [31:0] c_out_2_reg_2806;
reg   [31:0] c_out_2_reg_2806_pp0_iter35_reg;
wire   [31:0] tmp_14_fu_2228_p19;
wire   [31:0] tmp_13_fu_2283_p19;
reg   [31:0] tmp_13_reg_2859;
wire   [31:0] grp_fu_772_p2;
reg   [31:0] mul7_reg_2867;
wire   [31:0] grp_fu_776_p2;
reg   [31:0] mul5_reg_2873;
wire    ap_block_pp0_stage0_ignoreCallOp83;
wire   [63:0] zext_ln378_fu_970_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln72_fu_1235_p1;
wire   [63:0] zext_ln16_fu_2340_p1;
reg   [9:0] i183_fu_336;
wire   [9:0] i_fu_871_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_i183_load;
reg    ref_4oPi_table_100_ce0_local;
reg    second_order_float_cos_K0_ce0_local;
reg    second_order_float_cos_K1_ce0_local;
reg    second_order_float_cos_K2_ce0_local;
reg    second_order_float_sin_K0_ce0_local;
reg    second_order_float_sin_K1_ce0_local;
reg    second_order_float_sin_K2_ce0_local;
reg    in_1_ce0_local;
reg    in_3_ce0_local;
reg    in_5_ce0_local;
reg    in_7_ce0_local;
reg    in_9_ce0_local;
reg    in_11_ce0_local;
reg    in_13_ce0_local;
reg    in_15_ce0_local;
reg    in_0_ce0_local;
reg    in_2_ce0_local;
reg    in_4_ce0_local;
reg    in_6_ce0_local;
reg    in_8_ce0_local;
reg    in_10_ce0_local;
reg    in_12_ce0_local;
reg    in_14_ce0_local;
reg    out_4_we0_local;
wire   [31:0] grp_fu_794_p4;
reg    out_4_ce0_local;
reg    out_5_we0_local;
wire   [31:0] grp_fu_783_p4;
reg    out_5_ce0_local;
reg    out_2_we0_local;
reg    out_2_ce0_local;
reg    out_3_we0_local;
reg    out_3_ce0_local;
reg    out_0_we0_local;
reg    out_0_ce0_local;
reg    out_1_we0_local;
reg    out_1_ce0_local;
reg    out_6_we0_local;
reg    out_6_ce0_local;
reg    out_7_we0_local;
reg    out_7_ce0_local;
reg   [31:0] grp_fu_758_p0;
wire   [31:0] grp_fu_758_p1;
reg   [31:0] grp_fu_763_p0;
wire   [31:0] grp_fu_763_p1;
reg   [31:0] grp_fu_768_p0;
reg   [31:0] grp_fu_768_p1;
reg   [31:0] grp_fu_772_p0;
reg   [31:0] grp_fu_772_p1;
reg   [31:0] grp_fu_776_p0;
reg   [31:0] grp_fu_776_p1;
wire   [31:0] grp_fu_780_p0;
wire   [28:0] grp_fu_805_p0;
wire   [27:0] grp_fu_805_p1;
wire   [23:0] grp_fu_809_p1;
wire   [31:0] data_fu_917_p1;
wire   [7:0] add_ln376_fu_946_p2;
wire   [7:0] addr_fu_952_p3;
wire   [3:0] lshr_ln6_fu_960_p4;
wire   [99:0] zext_ln379_fu_983_p1;
wire   [99:0] shl_ln379_fu_986_p2;
wire   [23:0] X_fu_1000_p3;
wire   [0:0] icmp_ln179_fu_1019_p2;
wire   [0:0] icmp_ln179_1_fu_1024_p2;
wire   [79:0] grp_fu_809_p2;
wire   [2:0] trunc_ln_fu_1045_p4;
wire   [57:0] Mx_bits_fu_1035_p4;
wire   [0:0] trunc_ln491_fu_1062_p1;
wire   [57:0] Mx_bits_1_fu_1066_p2;
wire   [7:0] Ex_fu_1088_p2;
wire   [29:0] Mx_zeros_fu_1107_p1;
wire   [29:0] Mx_zeros_fu_1107_p3;
wire   [57:0] zext_ln504_fu_1115_p1;
wire   [7:0] select_ln453_fu_1093_p3;
wire   [7:0] trunc_ln505_fu_1124_p1;
wire   [57:0] shl_ln504_fu_1119_p2;
wire   [7:0] sub_ln506_fu_1157_p2;
wire   [7:0] select_ln506_fu_1162_p3;
wire   [31:0] zext_ln506_1_fu_1172_p1;
wire   [31:0] zext_ln506_fu_1168_p1;
wire   [31:0] lshr_ln506_fu_1175_p2;
wire   [31:0] shl_ln506_fu_1181_p2;
wire   [31:0] select_ln506_1_fu_1187_p3;
wire   [14:0] mul_ln69_fu_1229_p0;
wire   [29:0] zext_ln69_fu_1218_p1;
wire   [14:0] mul_ln69_fu_1229_p1;
wire   [29:0] mul_ln69_fu_1229_p2;
wire   [21:0] mul_ln73_fu_1303_p0;
wire   [21:0] mul_ln73_fu_1303_p1;
wire   [43:0] mul_ln73_fu_1303_p2;
wire   [14:0] mul_ln74_fu_1334_p0;
wire   [13:0] mul_ln74_fu_1334_p1;
wire   [28:0] mul_ln74_fu_1334_p2;
wire   [21:0] mul_ln78_fu_1365_p0;
wire   [42:0] mul_ln78_fu_1365_p2;
wire   [14:0] mul_ln79_fu_1396_p0;
wire   [27:0] mul_ln79_fu_1396_p2;
wire   [26:0] zext_ln74_2_fu_1425_p1;
wire   [26:0] add_ln75_fu_1428_p2;
wire   [26:0] zext_ln73_2_fu_1422_p1;
wire  signed [20:0] sext_ln80_fu_1439_p1;
wire  signed [20:0] sext_ln80_1_fu_1442_p1;
wire   [20:0] add_ln80_fu_1445_p2;
wire  signed [27:0] sext_ln80_2_fu_1451_p1;
wire   [28:0] zext_ln75_fu_1476_p1;
wire   [56:0] grp_fu_805_p2;
wire   [15:0] tmp_5_fu_1495_p3;
wire   [31:0] c_3_fu_1515_p1;
wire   [14:0] tmp_8_fu_1527_p4;
wire   [30:0] out_bits_4_fu_1537_p3;
wire   [12:0] tmp_9_fu_1549_p4;
wire   [31:0] c_4_fu_1567_p1;
wire   [31:0] c_2_fu_1579_p1;
wire   [27:0] trunc_ln5_fu_1485_p4;
wire   [31:0] c_1_fu_1625_p1;
wire   [31:0] c_1_fu_1625_p3;
wire   [31:0] zext_ln291_fu_1637_p1;
wire   [31:0] shl_ln291_fu_1640_p2;
wire   [5:0] trunc_ln281_1_fu_1633_p1;
wire   [27:0] in_shift_1_fu_1645_p1;
wire   [31:0] zext_ln291_1_fu_1660_p1;
wire   [0:0] icmp_ln292_fu_1649_p2;
wire   [5:0] shift_1_fu_1654_p2;
wire   [5:0] shift_2_fu_1670_p3;
wire   [6:0] zext_ln287_fu_1677_p1;
wire   [6:0] newexp_2_fu_1681_p2;
wire   [31:0] shl_ln291_1_fu_1664_p2;
wire   [22:0] tmp_6_fu_1691_p4;
wire   [22:0] tmp_7_fu_1701_p4;
wire   [31:0] zext_ln291_2_fu_1722_p1;
wire   [31:0] shl_ln291_2_fu_1725_p2;
wire   [27:0] in_shift_2_fu_1730_p1;
wire   [31:0] zext_ln291_3_fu_1744_p1;
wire   [0:0] icmp_ln292_1_fu_1734_p2;
wire   [5:0] shift_4_fu_1739_p2;
wire   [5:0] shift_5_fu_1753_p3;
wire  signed [8:0] sext_ln163_fu_1719_p1;
wire   [8:0] add_ln300_fu_1764_p2;
wire   [8:0] zext_ln287_1_fu_1760_p1;
wire   [8:0] newexp_fu_1770_p2;
wire   [0:0] tmp_20_fu_1776_p3;
wire   [31:0] shl_ln291_3_fu_1748_p2;
wire   [22:0] tmp_10_fu_1793_p4;
wire   [22:0] tmp_11_fu_1803_p4;
wire   [0:0] sin_results_sign_fu_1827_p33;
wire   [3:0] index_fu_1821_p3;
wire   [0:0] cos_results_sign_fu_1899_p33;
wire   [0:0] sin_results_sign_fu_1827_p35;
wire   [0:0] xor_ln186_fu_1971_p2;
wire   [0:0] or_ln306_fu_1784_p2;
wire   [0:0] or_ln186_fu_1989_p2;
wire   [7:0] select_ln186_fu_1982_p3;
wire   [7:0] empty_fu_1789_p1;
wire   [22:0] select_ln186_2_fu_2002_p3;
wire   [22:0] empty_502_fu_1813_p3;
wire   [0:0] cos_results_sign_fu_1899_p35;
wire   [0:0] sin_results_sign_1_fu_1976_p2;
wire   [7:0] sin_results_exp_fu_1994_p3;
wire   [22:0] sin_results_sig_fu_2009_p3;
wire   [0:0] cos_results_sign_1_fu_2017_p2;
wire   [0:0] not_and_ln179_fu_2043_p2;
wire   [0:0] empty_503_fu_2061_p2;
wire   [7:0] cos_results_exp_3_fu_2054_p3;
wire   [7:0] out_exp_fu_1687_p1;
wire   [22:0] cos_results_sig_3_cast_fu_2073_p3;
wire   [22:0] significand_fu_1711_p3;
wire   [0:0] tmp_12_fu_2089_p17;
wire   [31:0] t_3_fu_2160_p4;
wire   [31:0] t_4_fu_2167_p4;
wire   [31:0] s_out_fu_2174_p1;
wire   [31:0] c_out_fu_2178_p1;
wire   [31:0] tmp_14_fu_2228_p17;
wire   [31:0] tmp_13_fu_2283_p17;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [56:0] grp_fu_805_p00;
wire   [56:0] grp_fu_805_p10;
wire   [79:0] grp_fu_809_p10;
wire   [43:0] mul_ln73_fu_1303_p00;
wire   [43:0] mul_ln73_fu_1303_p10;
wire   [28:0] mul_ln74_fu_1334_p00;
wire   [28:0] mul_ln74_fu_1334_p10;
wire   [42:0] mul_ln78_fu_1365_p00;
wire   [27:0] mul_ln79_fu_1396_p00;
wire   [29:0] Mx_zeros_fu_1107_p0;
wire   [0:0] Mx_zeros_fu_1107_p2;
wire   [31:0] c_3_fu_1515_p0;
wire   [0:0] c_3_fu_1515_p2;
wire   [31:0] c_4_fu_1567_p0;
wire   [0:0] c_4_fu_1567_p2;
wire   [31:0] c_2_fu_1579_p0;
wire   [0:0] c_2_fu_1579_p2;
wire   [31:0] c_1_fu_1625_p0;
wire   [0:0] c_1_fu_1625_p2;
wire   [3:0] sin_results_sign_fu_1827_p1;
wire   [3:0] sin_results_sign_fu_1827_p3;
wire   [3:0] sin_results_sign_fu_1827_p5;
wire   [3:0] sin_results_sign_fu_1827_p7;
wire   [3:0] sin_results_sign_fu_1827_p9;
wire   [3:0] sin_results_sign_fu_1827_p11;
wire   [3:0] sin_results_sign_fu_1827_p13;
wire   [3:0] sin_results_sign_fu_1827_p15;
wire  signed [3:0] sin_results_sign_fu_1827_p17;
wire  signed [3:0] sin_results_sign_fu_1827_p19;
wire  signed [3:0] sin_results_sign_fu_1827_p21;
wire  signed [3:0] sin_results_sign_fu_1827_p23;
wire  signed [3:0] sin_results_sign_fu_1827_p25;
wire  signed [3:0] sin_results_sign_fu_1827_p27;
wire  signed [3:0] sin_results_sign_fu_1827_p29;
wire  signed [3:0] sin_results_sign_fu_1827_p31;
wire   [3:0] cos_results_sign_fu_1899_p1;
wire   [3:0] cos_results_sign_fu_1899_p3;
wire   [3:0] cos_results_sign_fu_1899_p5;
wire   [3:0] cos_results_sign_fu_1899_p7;
wire   [3:0] cos_results_sign_fu_1899_p9;
wire   [3:0] cos_results_sign_fu_1899_p11;
wire   [3:0] cos_results_sign_fu_1899_p13;
wire   [3:0] cos_results_sign_fu_1899_p15;
wire  signed [3:0] cos_results_sign_fu_1899_p17;
wire  signed [3:0] cos_results_sign_fu_1899_p19;
wire  signed [3:0] cos_results_sign_fu_1899_p21;
wire  signed [3:0] cos_results_sign_fu_1899_p23;
wire  signed [3:0] cos_results_sign_fu_1899_p25;
wire  signed [3:0] cos_results_sign_fu_1899_p27;
wire  signed [3:0] cos_results_sign_fu_1899_p29;
wire  signed [3:0] cos_results_sign_fu_1899_p31;
wire   [2:0] tmp_12_fu_2089_p1;
wire   [2:0] tmp_12_fu_2089_p3;
wire   [2:0] tmp_12_fu_2089_p5;
wire   [2:0] tmp_12_fu_2089_p7;
wire  signed [2:0] tmp_12_fu_2089_p9;
wire  signed [2:0] tmp_12_fu_2089_p11;
wire  signed [2:0] tmp_12_fu_2089_p13;
wire  signed [2:0] tmp_12_fu_2089_p15;
wire   [3:0] tmp_14_fu_2228_p1;
wire   [3:0] tmp_14_fu_2228_p3;
wire   [3:0] tmp_14_fu_2228_p5;
wire   [3:0] tmp_14_fu_2228_p7;
wire  signed [3:0] tmp_14_fu_2228_p9;
wire  signed [3:0] tmp_14_fu_2228_p11;
wire  signed [3:0] tmp_14_fu_2228_p13;
wire  signed [3:0] tmp_14_fu_2228_p15;
wire   [3:0] tmp_13_fu_2283_p1;
wire   [3:0] tmp_13_fu_2283_p3;
wire   [3:0] tmp_13_fu_2283_p5;
wire   [3:0] tmp_13_fu_2283_p7;
wire  signed [3:0] tmp_13_fu_2283_p9;
wire  signed [3:0] tmp_13_fu_2283_p11;
wire  signed [3:0] tmp_13_fu_2283_p13;
wire  signed [3:0] tmp_13_fu_2283_p15;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 i183_fu_336 = 10'd0;
#0 ap_done_reg = 1'b0;
end

kernel_mhsa_RoPE_Pipeline_VITIS_LOOP_16_1_ref_4oPi_table_100_ROM_1P_LUTRAM_1R #(
    .DataWidth( 100 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
ref_4oPi_table_100_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ref_4oPi_table_100_address0),
    .ce0(ref_4oPi_table_100_ce0_local),
    .q0(ref_4oPi_table_100_q0)
);

kernel_mhsa_RoPE_Pipeline_VITIS_LOOP_16_1_second_order_float_cos_K0_ROM_1P_LUTRAM_1R #(
    .DataWidth( 28 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
second_order_float_cos_K0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(second_order_float_cos_K0_address0),
    .ce0(second_order_float_cos_K0_ce0_local),
    .q0(second_order_float_cos_K0_q0)
);

kernel_mhsa_RoPE_Pipeline_VITIS_LOOP_16_1_second_order_float_cos_K1_ROM_1P_LUTRAM_1R #(
    .DataWidth( 22 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
second_order_float_cos_K1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(second_order_float_cos_K1_address0),
    .ce0(second_order_float_cos_K1_ce0_local),
    .q0(second_order_float_cos_K1_q0)
);

kernel_mhsa_RoPE_Pipeline_VITIS_LOOP_16_1_second_order_float_cos_K2_ROM_1P_LUTRAM_1R #(
    .DataWidth( 14 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
second_order_float_cos_K2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(second_order_float_cos_K2_address0),
    .ce0(second_order_float_cos_K2_ce0_local),
    .q0(second_order_float_cos_K2_q0)
);

kernel_mhsa_RoPE_Pipeline_VITIS_LOOP_16_1_second_order_float_sin_K0_ROM_1P_LUTRAM_1R #(
    .DataWidth( 29 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
second_order_float_sin_K0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(second_order_float_sin_K0_address0),
    .ce0(second_order_float_sin_K0_ce0_local),
    .q0(second_order_float_sin_K0_q0)
);

kernel_mhsa_RoPE_Pipeline_VITIS_LOOP_16_1_second_order_float_sin_K1_ROM_1P_LUTRAM_1R #(
    .DataWidth( 21 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
second_order_float_sin_K1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(second_order_float_sin_K1_address0),
    .ce0(second_order_float_sin_K1_ce0_local),
    .q0(second_order_float_sin_K1_q0)
);

kernel_mhsa_RoPE_Pipeline_VITIS_LOOP_16_1_second_order_float_sin_K2_ROM_1P_LUTRAM_1R #(
    .DataWidth( 13 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
second_order_float_sin_K2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(second_order_float_sin_K2_address0),
    .ce0(second_order_float_sin_K2_ce0_local),
    .q0(second_order_float_sin_K2_q0)
);

kernel_mhsa_pow_generic_float_s grp_pow_generic_float_s_fu_749(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .exp(y_assign_reg_2441),
    .ap_return(grp_pow_generic_float_s_fu_749_ap_return)
);

kernel_mhsa_fmul_32ns_32ns_32_1_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_1_primitive_dsp_1_U340(
    .din0(grp_fu_758_p0),
    .din1(grp_fu_758_p1),
    .dout(grp_fu_758_p2)
);

kernel_mhsa_fmul_32ns_32ns_32_1_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_1_primitive_dsp_1_U341(
    .din0(grp_fu_763_p0),
    .din1(grp_fu_763_p1),
    .dout(grp_fu_763_p2)
);

kernel_mhsa_fmul_32ns_32ns_32_1_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_1_primitive_dsp_1_U342(
    .din0(grp_fu_768_p0),
    .din1(grp_fu_768_p1),
    .dout(grp_fu_768_p2)
);

kernel_mhsa_fmul_32ns_32ns_32_1_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_1_primitive_dsp_1_U343(
    .din0(grp_fu_772_p0),
    .din1(grp_fu_772_p1),
    .dout(grp_fu_772_p2)
);

kernel_mhsa_fmul_32ns_32ns_32_1_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_1_primitive_dsp_1_U344(
    .din0(grp_fu_776_p0),
    .din1(grp_fu_776_p1),
    .dout(grp_fu_776_p2)
);

kernel_mhsa_sitofp_32ns_32_3_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32ns_32_3_no_dsp_1_U345(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_780_p0),
    .ce(1'b1),
    .dout(grp_fu_780_p1)
);

kernel_mhsa_fmadd_32ns_32ns_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmadd_32ns_32ns_32ns_32ns_32_2_primitive_dsp_1_U346(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(tmp_13_reg_2859),
    .din2(s_out_2_reg_2799_pp0_iter35_reg),
    .din3(mul5_reg_2873),
    .ce(1'b1),
    .dout(grp_fu_783_p4)
);

kernel_mhsa_fmsub_32ns_32ns_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmsub_32ns_32ns_32ns_32ns_32_2_primitive_dsp_1_U347(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(tmp_13_reg_2859),
    .din2(c_out_2_reg_2806_pp0_iter35_reg),
    .din3(mul7_reg_2867),
    .ce(1'b1),
    .dout(grp_fu_794_p4)
);

kernel_mhsa_mul_29ns_28ns_57_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 28 ),
    .dout_WIDTH( 57 ))
mul_29ns_28ns_57_2_1_U348(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_805_p0),
    .din1(grp_fu_805_p1),
    .ce(1'b1),
    .dout(grp_fu_805_p2)
);

kernel_mhsa_mul_80s_24ns_80_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 80 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 80 ))
mul_80s_24ns_80_2_1_U349(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(Med_reg_2492),
    .din1(grp_fu_809_p1),
    .ce(1'b1),
    .dout(grp_fu_809_p2)
);

kernel_mhsa_ctlz_30_30_1_1 #(
    .din_WIDTH( 30 ),
    .dout_WIDTH( 30 ))
ctlz_30_30_1_1_U350(
    .din(Mx_zeros_fu_1107_p1),
    .dout(Mx_zeros_fu_1107_p3)
);

kernel_mhsa_mul_15ns_15ns_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
mul_15ns_15ns_30_1_1_U351(
    .din0(mul_ln69_fu_1229_p0),
    .din1(mul_ln69_fu_1229_p1),
    .dout(mul_ln69_fu_1229_p2)
);

kernel_mhsa_mul_22ns_22ns_44_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 44 ))
mul_22ns_22ns_44_1_1_U352(
    .din0(mul_ln73_fu_1303_p0),
    .din1(mul_ln73_fu_1303_p1),
    .dout(mul_ln73_fu_1303_p2)
);

kernel_mhsa_mul_15ns_14ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
mul_15ns_14ns_29_1_1_U353(
    .din0(mul_ln74_fu_1334_p0),
    .din1(mul_ln74_fu_1334_p1),
    .dout(mul_ln74_fu_1334_p2)
);

kernel_mhsa_mul_22ns_21s_43_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 43 ))
mul_22ns_21s_43_1_1_U354(
    .din0(mul_ln78_fu_1365_p0),
    .din1(second_order_float_sin_K1_q0),
    .dout(mul_ln78_fu_1365_p2)
);

kernel_mhsa_mul_15ns_13s_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 28 ))
mul_15ns_13s_28_1_1_U355(
    .din0(mul_ln79_fu_1396_p0),
    .din1(second_order_float_sin_K2_q0),
    .dout(mul_ln79_fu_1396_p2)
);

kernel_mhsa_ctlz_32_32_1_1 #(
    .din_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
ctlz_32_32_1_1_U356(
    .din(c_3_fu_1515_p1),
    .dout(c_3_fu_1515_p3)
);

kernel_mhsa_ctlz_32_32_1_1 #(
    .din_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
ctlz_32_32_1_1_U357(
    .din(c_4_fu_1567_p1),
    .dout(c_4_fu_1567_p3)
);

kernel_mhsa_ctlz_32_32_1_1 #(
    .din_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
ctlz_32_32_1_1_U358(
    .din(c_2_fu_1579_p1),
    .dout(c_2_fu_1579_p3)
);

kernel_mhsa_ctlz_32_32_1_1 #(
    .din_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
ctlz_32_32_1_1_U359(
    .din(c_1_fu_1625_p1),
    .dout(c_1_fu_1625_p3)
);

(* dissolve_hierarchy = "yes" *) kernel_mhsa_sparsemux_33_4_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 1 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 1 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 1 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 1 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 1 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 1 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 1 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 1 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 1 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 1 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 1 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 1 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 1 ),
    .CASE13( 4'hD ),
    .din13_WIDTH( 1 ),
    .CASE14( 4'hE ),
    .din14_WIDTH( 1 ),
    .CASE15( 4'hF ),
    .din15_WIDTH( 1 ),
    .def_WIDTH( 1 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
sparsemux_33_4_1_1_1_U360(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd0),
    .din7(1'd1),
    .din8(1'd1),
    .din9(1'd0),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd0),
    .din13(1'd1),
    .din14(1'd0),
    .din15(1'd0),
    .def(sin_results_sign_fu_1827_p33),
    .sel(index_fu_1821_p3),
    .dout(sin_results_sign_fu_1827_p35)
);

(* dissolve_hierarchy = "yes" *) kernel_mhsa_sparsemux_33_4_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 1 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 1 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 1 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 1 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 1 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 1 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 1 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 1 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 1 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 1 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 1 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 1 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 1 ),
    .CASE13( 4'hD ),
    .din13_WIDTH( 1 ),
    .CASE14( 4'hE ),
    .din14_WIDTH( 1 ),
    .CASE15( 4'hF ),
    .din15_WIDTH( 1 ),
    .def_WIDTH( 1 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
sparsemux_33_4_1_1_1_U361(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd0),
    .din3(1'd1),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(1'd0),
    .din9(1'd1),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd1),
    .din13(1'd0),
    .din14(1'd0),
    .din15(1'd0),
    .def(cos_results_sign_fu_1899_p33),
    .sel(index_fu_1821_p3),
    .dout(cos_results_sign_fu_1899_p35)
);

(* dissolve_hierarchy = "yes" *) kernel_mhsa_sparsemux_17_3_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 1 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 1 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 1 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 1 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 1 ),
    .CASE5( 3'h5 ),
    .din5_WIDTH( 1 ),
    .CASE6( 3'h6 ),
    .din6_WIDTH( 1 ),
    .CASE7( 3'h7 ),
    .din7_WIDTH( 1 ),
    .def_WIDTH( 1 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
sparsemux_17_3_1_1_1_U362(
    .din0(1'd0),
    .din1(1'd1),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd0),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .def(tmp_12_fu_2089_p17),
    .sel(k_reg_2513_pp0_iter32_reg),
    .dout(tmp_12_fu_2089_p19)
);

(* dissolve_hierarchy = "yes" *) kernel_mhsa_sparsemux_17_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h2 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h4 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h6 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h8 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'hA ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'hC ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'hE ),
    .din7_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_17_4_32_1_1_U363(
    .din0(in_1_q0),
    .din1(in_3_q0),
    .din2(in_5_q0),
    .din3(in_7_q0),
    .din4(in_9_q0),
    .din5(in_11_q0),
    .din6(in_13_q0),
    .din7(in_15_q0),
    .def(tmp_14_fu_2228_p17),
    .sel(trunc_ln16_reg_2396_pp0_iter33_reg),
    .dout(tmp_14_fu_2228_p19)
);

(* dissolve_hierarchy = "yes" *) kernel_mhsa_sparsemux_17_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h2 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h4 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h6 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h8 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'hA ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'hC ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'hE ),
    .din7_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_17_4_32_1_1_U364(
    .din0(in_0_q0),
    .din1(in_2_q0),
    .din2(in_4_q0),
    .din3(in_6_q0),
    .din4(in_8_q0),
    .din5(in_10_q0),
    .din6(in_12_q0),
    .din7(in_14_q0),
    .def(tmp_13_fu_2283_p17),
    .sel(trunc_ln16_reg_2396_pp0_iter34_reg),
    .dout(tmp_13_fu_2283_p19)
);

kernel_mhsa_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter37_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_exit_ready_pp0_iter36_reg == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_loop_exit_ready_pp0_iter37_reg <= 1'b0;
    end else if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
            i183_fu_336 <= i_fu_871_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i183_fu_336 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        A_reg_2563 <= {{select_ln506_1_fu_1187_p3[28:22]}};
        B_reg_2557 <= B_fu_1194_p1;
        B_reg_2557_pp0_iter28_reg <= B_reg_2557;
        B_trunc_reg_2568 <= {{select_ln506_1_fu_1187_p3[21:7]}};
        Ex_1_reg_2529 <= Ex_1_fu_1128_p2;
        Ex_1_reg_2529_pp0_iter27_reg <= Ex_1_reg_2529;
        Ex_1_reg_2529_pp0_iter28_reg <= Ex_1_reg_2529_pp0_iter27_reg;
        Ex_1_reg_2529_pp0_iter29_reg <= Ex_1_reg_2529_pp0_iter28_reg;
        Ex_1_reg_2529_pp0_iter30_reg <= Ex_1_reg_2529_pp0_iter29_reg;
        Ex_1_reg_2529_pp0_iter31_reg <= Ex_1_reg_2529_pp0_iter30_reg;
        Ex_1_reg_2529_pp0_iter32_reg <= Ex_1_reg_2529_pp0_iter31_reg;
        Med_reg_2492 <= {{shl_ln379_fu_986_p2[99:20]}};
        Mx_bits_3_reg_2519 <= Mx_bits_3_fu_1072_p3;
        add_ln75_1_reg_2639 <= add_ln75_1_fu_1433_p2;
        add_ln75_1_reg_2639_pp0_iter31_reg <= add_ln75_1_reg_2639;
        add_ln80_1_reg_2644 <= add_ln80_1_fu_1455_p2;
        and_ln179_reg_2503 <= and_ln179_fu_1029_p2;
        and_ln179_reg_2503_pp0_iter25_reg <= and_ln179_reg_2503;
        and_ln179_reg_2503_pp0_iter26_reg <= and_ln179_reg_2503_pp0_iter25_reg;
        and_ln179_reg_2503_pp0_iter27_reg <= and_ln179_reg_2503_pp0_iter26_reg;
        and_ln179_reg_2503_pp0_iter28_reg <= and_ln179_reg_2503_pp0_iter27_reg;
        and_ln179_reg_2503_pp0_iter29_reg <= and_ln179_reg_2503_pp0_iter28_reg;
        and_ln179_reg_2503_pp0_iter30_reg <= and_ln179_reg_2503_pp0_iter29_reg;
        and_ln179_reg_2503_pp0_iter31_reg <= and_ln179_reg_2503_pp0_iter30_reg;
        and_ln179_reg_2503_pp0_iter32_reg <= and_ln179_reg_2503_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        c_2_reg_2691 <= c_2_fu_1579_p3;
        c_3_reg_2669 <= c_3_fu_1515_p3;
        c_4_reg_2680 <= c_4_fu_1567_p3;
        c_out_2_reg_2806 <= c_out_2_fu_2189_p3;
        c_out_2_reg_2806_pp0_iter35_reg <= c_out_2_reg_2806;
        closepath_reg_2476 <= closepath_fu_940_p2;
        closepath_reg_2476_pp0_iter23_reg <= closepath_reg_2476;
        closepath_reg_2476_pp0_iter24_reg <= closepath_reg_2476_pp0_iter23_reg;
        closepath_reg_2476_pp0_iter25_reg <= closepath_reg_2476_pp0_iter24_reg;
        cos_result_reg_2659 <= cos_result_fu_1479_p2;
        cos_results_exp_1_reg_2743 <= cos_results_exp_1_fu_2065_p3;
        cos_results_sig_1_reg_2748 <= cos_results_sig_1_fu_2081_p3;
        cos_results_sign_2_reg_2738 <= cos_results_sign_2_fu_2048_p2;
        din_exp_reg_2463 <= {{data_fu_917_p1[30:23]}};
        din_exp_reg_2463_pp0_iter23_reg <= din_exp_reg_2463;
        din_exp_reg_2463_pp0_iter24_reg <= din_exp_reg_2463_pp0_iter23_reg;
        din_exp_reg_2463_pp0_iter25_reg <= din_exp_reg_2463_pp0_iter24_reg;
        din_sig_reg_2470 <= din_sig_fu_936_p1;
        din_sig_reg_2470_pp0_iter23_reg <= din_sig_reg_2470;
        din_sign_reg_2457 <= data_fu_917_p1[32'd31];
        din_sign_reg_2457_pp0_iter23_reg <= din_sign_reg_2457;
        din_sign_reg_2457_pp0_iter24_reg <= din_sign_reg_2457_pp0_iter23_reg;
        din_sign_reg_2457_pp0_iter25_reg <= din_sign_reg_2457_pp0_iter24_reg;
        din_sign_reg_2457_pp0_iter26_reg <= din_sign_reg_2457_pp0_iter25_reg;
        din_sign_reg_2457_pp0_iter27_reg <= din_sign_reg_2457_pp0_iter26_reg;
        din_sign_reg_2457_pp0_iter28_reg <= din_sign_reg_2457_pp0_iter27_reg;
        din_sign_reg_2457_pp0_iter29_reg <= din_sign_reg_2457_pp0_iter28_reg;
        din_sign_reg_2457_pp0_iter30_reg <= din_sign_reg_2457_pp0_iter29_reg;
        din_sign_reg_2457_pp0_iter31_reg <= din_sign_reg_2457_pp0_iter30_reg;
        din_sign_reg_2457_pp0_iter32_reg <= din_sign_reg_2457_pp0_iter31_reg;
        icmp_ln186_reg_2548 <= icmp_ln186_fu_1152_p2;
        icmp_ln186_reg_2548_pp0_iter27_reg <= icmp_ln186_reg_2548;
        icmp_ln186_reg_2548_pp0_iter28_reg <= icmp_ln186_reg_2548_pp0_iter27_reg;
        icmp_ln186_reg_2548_pp0_iter29_reg <= icmp_ln186_reg_2548_pp0_iter28_reg;
        icmp_ln186_reg_2548_pp0_iter30_reg <= icmp_ln186_reg_2548_pp0_iter29_reg;
        icmp_ln186_reg_2548_pp0_iter31_reg <= icmp_ln186_reg_2548_pp0_iter30_reg;
        icmp_ln186_reg_2548_pp0_iter32_reg <= icmp_ln186_reg_2548_pp0_iter31_reg;
        icmp_ln306_reg_2706 <= icmp_ln306_fu_1601_p2;
        k_reg_2513 <= k_fu_1055_p3;
        k_reg_2513_pp0_iter26_reg <= k_reg_2513;
        k_reg_2513_pp0_iter27_reg <= k_reg_2513_pp0_iter26_reg;
        k_reg_2513_pp0_iter28_reg <= k_reg_2513_pp0_iter27_reg;
        k_reg_2513_pp0_iter29_reg <= k_reg_2513_pp0_iter28_reg;
        k_reg_2513_pp0_iter30_reg <= k_reg_2513_pp0_iter29_reg;
        k_reg_2513_pp0_iter31_reg <= k_reg_2513_pp0_iter30_reg;
        k_reg_2513_pp0_iter32_reg <= k_reg_2513_pp0_iter31_reg;
        lshr_ln16_2_reg_2411_pp0_iter10_reg <= lshr_ln16_2_reg_2411_pp0_iter9_reg;
        lshr_ln16_2_reg_2411_pp0_iter11_reg <= lshr_ln16_2_reg_2411_pp0_iter10_reg;
        lshr_ln16_2_reg_2411_pp0_iter12_reg <= lshr_ln16_2_reg_2411_pp0_iter11_reg;
        lshr_ln16_2_reg_2411_pp0_iter13_reg <= lshr_ln16_2_reg_2411_pp0_iter12_reg;
        lshr_ln16_2_reg_2411_pp0_iter14_reg <= lshr_ln16_2_reg_2411_pp0_iter13_reg;
        lshr_ln16_2_reg_2411_pp0_iter15_reg <= lshr_ln16_2_reg_2411_pp0_iter14_reg;
        lshr_ln16_2_reg_2411_pp0_iter16_reg <= lshr_ln16_2_reg_2411_pp0_iter15_reg;
        lshr_ln16_2_reg_2411_pp0_iter17_reg <= lshr_ln16_2_reg_2411_pp0_iter16_reg;
        lshr_ln16_2_reg_2411_pp0_iter18_reg <= lshr_ln16_2_reg_2411_pp0_iter17_reg;
        lshr_ln16_2_reg_2411_pp0_iter19_reg <= lshr_ln16_2_reg_2411_pp0_iter18_reg;
        lshr_ln16_2_reg_2411_pp0_iter20_reg <= lshr_ln16_2_reg_2411_pp0_iter19_reg;
        lshr_ln16_2_reg_2411_pp0_iter21_reg <= lshr_ln16_2_reg_2411_pp0_iter20_reg;
        lshr_ln16_2_reg_2411_pp0_iter22_reg <= lshr_ln16_2_reg_2411_pp0_iter21_reg;
        lshr_ln16_2_reg_2411_pp0_iter23_reg <= lshr_ln16_2_reg_2411_pp0_iter22_reg;
        lshr_ln16_2_reg_2411_pp0_iter24_reg <= lshr_ln16_2_reg_2411_pp0_iter23_reg;
        lshr_ln16_2_reg_2411_pp0_iter25_reg <= lshr_ln16_2_reg_2411_pp0_iter24_reg;
        lshr_ln16_2_reg_2411_pp0_iter26_reg <= lshr_ln16_2_reg_2411_pp0_iter25_reg;
        lshr_ln16_2_reg_2411_pp0_iter27_reg <= lshr_ln16_2_reg_2411_pp0_iter26_reg;
        lshr_ln16_2_reg_2411_pp0_iter28_reg <= lshr_ln16_2_reg_2411_pp0_iter27_reg;
        lshr_ln16_2_reg_2411_pp0_iter29_reg <= lshr_ln16_2_reg_2411_pp0_iter28_reg;
        lshr_ln16_2_reg_2411_pp0_iter2_reg <= lshr_ln16_2_reg_2411_pp0_iter1_reg;
        lshr_ln16_2_reg_2411_pp0_iter30_reg <= lshr_ln16_2_reg_2411_pp0_iter29_reg;
        lshr_ln16_2_reg_2411_pp0_iter31_reg <= lshr_ln16_2_reg_2411_pp0_iter30_reg;
        lshr_ln16_2_reg_2411_pp0_iter32_reg <= lshr_ln16_2_reg_2411_pp0_iter31_reg;
        lshr_ln16_2_reg_2411_pp0_iter3_reg <= lshr_ln16_2_reg_2411_pp0_iter2_reg;
        lshr_ln16_2_reg_2411_pp0_iter4_reg <= lshr_ln16_2_reg_2411_pp0_iter3_reg;
        lshr_ln16_2_reg_2411_pp0_iter5_reg <= lshr_ln16_2_reg_2411_pp0_iter4_reg;
        lshr_ln16_2_reg_2411_pp0_iter6_reg <= lshr_ln16_2_reg_2411_pp0_iter5_reg;
        lshr_ln16_2_reg_2411_pp0_iter7_reg <= lshr_ln16_2_reg_2411_pp0_iter6_reg;
        lshr_ln16_2_reg_2411_pp0_iter8_reg <= lshr_ln16_2_reg_2411_pp0_iter7_reg;
        lshr_ln16_2_reg_2411_pp0_iter9_reg <= lshr_ln16_2_reg_2411_pp0_iter8_reg;
        lshr_ln_reg_2406_pp0_iter10_reg <= lshr_ln_reg_2406_pp0_iter9_reg;
        lshr_ln_reg_2406_pp0_iter11_reg <= lshr_ln_reg_2406_pp0_iter10_reg;
        lshr_ln_reg_2406_pp0_iter12_reg <= lshr_ln_reg_2406_pp0_iter11_reg;
        lshr_ln_reg_2406_pp0_iter13_reg <= lshr_ln_reg_2406_pp0_iter12_reg;
        lshr_ln_reg_2406_pp0_iter14_reg <= lshr_ln_reg_2406_pp0_iter13_reg;
        lshr_ln_reg_2406_pp0_iter15_reg <= lshr_ln_reg_2406_pp0_iter14_reg;
        lshr_ln_reg_2406_pp0_iter16_reg <= lshr_ln_reg_2406_pp0_iter15_reg;
        lshr_ln_reg_2406_pp0_iter17_reg <= lshr_ln_reg_2406_pp0_iter16_reg;
        lshr_ln_reg_2406_pp0_iter18_reg <= lshr_ln_reg_2406_pp0_iter17_reg;
        lshr_ln_reg_2406_pp0_iter19_reg <= lshr_ln_reg_2406_pp0_iter18_reg;
        lshr_ln_reg_2406_pp0_iter20_reg <= lshr_ln_reg_2406_pp0_iter19_reg;
        lshr_ln_reg_2406_pp0_iter21_reg <= lshr_ln_reg_2406_pp0_iter20_reg;
        lshr_ln_reg_2406_pp0_iter22_reg <= lshr_ln_reg_2406_pp0_iter21_reg;
        lshr_ln_reg_2406_pp0_iter23_reg <= lshr_ln_reg_2406_pp0_iter22_reg;
        lshr_ln_reg_2406_pp0_iter24_reg <= lshr_ln_reg_2406_pp0_iter23_reg;
        lshr_ln_reg_2406_pp0_iter25_reg <= lshr_ln_reg_2406_pp0_iter24_reg;
        lshr_ln_reg_2406_pp0_iter26_reg <= lshr_ln_reg_2406_pp0_iter25_reg;
        lshr_ln_reg_2406_pp0_iter27_reg <= lshr_ln_reg_2406_pp0_iter26_reg;
        lshr_ln_reg_2406_pp0_iter28_reg <= lshr_ln_reg_2406_pp0_iter27_reg;
        lshr_ln_reg_2406_pp0_iter29_reg <= lshr_ln_reg_2406_pp0_iter28_reg;
        lshr_ln_reg_2406_pp0_iter2_reg <= lshr_ln_reg_2406_pp0_iter1_reg;
        lshr_ln_reg_2406_pp0_iter30_reg <= lshr_ln_reg_2406_pp0_iter29_reg;
        lshr_ln_reg_2406_pp0_iter31_reg <= lshr_ln_reg_2406_pp0_iter30_reg;
        lshr_ln_reg_2406_pp0_iter32_reg <= lshr_ln_reg_2406_pp0_iter31_reg;
        lshr_ln_reg_2406_pp0_iter33_reg <= lshr_ln_reg_2406_pp0_iter32_reg;
        lshr_ln_reg_2406_pp0_iter34_reg <= lshr_ln_reg_2406_pp0_iter33_reg;
        lshr_ln_reg_2406_pp0_iter35_reg <= lshr_ln_reg_2406_pp0_iter34_reg;
        lshr_ln_reg_2406_pp0_iter36_reg <= lshr_ln_reg_2406_pp0_iter35_reg;
        lshr_ln_reg_2406_pp0_iter3_reg <= lshr_ln_reg_2406_pp0_iter2_reg;
        lshr_ln_reg_2406_pp0_iter4_reg <= lshr_ln_reg_2406_pp0_iter3_reg;
        lshr_ln_reg_2406_pp0_iter5_reg <= lshr_ln_reg_2406_pp0_iter4_reg;
        lshr_ln_reg_2406_pp0_iter6_reg <= lshr_ln_reg_2406_pp0_iter5_reg;
        lshr_ln_reg_2406_pp0_iter7_reg <= lshr_ln_reg_2406_pp0_iter6_reg;
        lshr_ln_reg_2406_pp0_iter8_reg <= lshr_ln_reg_2406_pp0_iter7_reg;
        lshr_ln_reg_2406_pp0_iter9_reg <= lshr_ln_reg_2406_pp0_iter8_reg;
        mul5_reg_2873 <= grp_fu_776_p2;
        mul7_reg_2867 <= grp_fu_772_p2;
        mul_reg_2435 <= grp_fu_758_p2;
        s_out_2_reg_2799 <= s_out_2_fu_2182_p3;
        s_out_2_reg_2799_pp0_iter35_reg <= s_out_2_reg_2799;
        sin_results_exp_1_reg_2728 <= sin_results_exp_1_fu_2029_p3;
        sin_results_sig_1_reg_2733 <= sin_results_sig_1_fu_2036_p3;
        sin_results_sign_2_reg_2723 <= sin_results_sign_2_fu_2023_p3;
        tmp_12_reg_2753 <= tmp_12_fu_2089_p19;
        tmp_13_reg_2859 <= tmp_13_fu_2283_p19;
        tmp_19_reg_2536 <= Ex_1_fu_1128_p2[32'd7];
        tmp_1_reg_2542 <= {{shl_ln504_fu_1119_p2[57:29]}};
        tmp_1_reg_2542_pp0_iter27_reg <= tmp_1_reg_2542;
        tmp_1_reg_2542_pp0_iter28_reg <= tmp_1_reg_2542_pp0_iter27_reg;
        tmp_1_reg_2542_pp0_iter29_reg <= tmp_1_reg_2542_pp0_iter28_reg;
        tmp_1_reg_2542_pp0_iter30_reg <= tmp_1_reg_2542_pp0_iter29_reg;
        tmp_2_reg_2614 <= {{mul_ln73_fu_1303_p2[43:23]}};
        tmp_3_reg_2583 <= {{mul_ln69_fu_1229_p2[29:15]}};
        tmp_4_reg_2619 <= {{mul_ln74_fu_1334_p2[28:16]}};
        tmp_s_reg_2524 <= {{Mx_bits_3_fu_1072_p3[57:29]}};
        trunc_ln16_1_reg_2402_pp0_iter10_reg <= trunc_ln16_1_reg_2402_pp0_iter9_reg;
        trunc_ln16_1_reg_2402_pp0_iter11_reg <= trunc_ln16_1_reg_2402_pp0_iter10_reg;
        trunc_ln16_1_reg_2402_pp0_iter12_reg <= trunc_ln16_1_reg_2402_pp0_iter11_reg;
        trunc_ln16_1_reg_2402_pp0_iter13_reg <= trunc_ln16_1_reg_2402_pp0_iter12_reg;
        trunc_ln16_1_reg_2402_pp0_iter14_reg <= trunc_ln16_1_reg_2402_pp0_iter13_reg;
        trunc_ln16_1_reg_2402_pp0_iter15_reg <= trunc_ln16_1_reg_2402_pp0_iter14_reg;
        trunc_ln16_1_reg_2402_pp0_iter16_reg <= trunc_ln16_1_reg_2402_pp0_iter15_reg;
        trunc_ln16_1_reg_2402_pp0_iter17_reg <= trunc_ln16_1_reg_2402_pp0_iter16_reg;
        trunc_ln16_1_reg_2402_pp0_iter18_reg <= trunc_ln16_1_reg_2402_pp0_iter17_reg;
        trunc_ln16_1_reg_2402_pp0_iter19_reg <= trunc_ln16_1_reg_2402_pp0_iter18_reg;
        trunc_ln16_1_reg_2402_pp0_iter20_reg <= trunc_ln16_1_reg_2402_pp0_iter19_reg;
        trunc_ln16_1_reg_2402_pp0_iter21_reg <= trunc_ln16_1_reg_2402_pp0_iter20_reg;
        trunc_ln16_1_reg_2402_pp0_iter22_reg <= trunc_ln16_1_reg_2402_pp0_iter21_reg;
        trunc_ln16_1_reg_2402_pp0_iter23_reg <= trunc_ln16_1_reg_2402_pp0_iter22_reg;
        trunc_ln16_1_reg_2402_pp0_iter24_reg <= trunc_ln16_1_reg_2402_pp0_iter23_reg;
        trunc_ln16_1_reg_2402_pp0_iter25_reg <= trunc_ln16_1_reg_2402_pp0_iter24_reg;
        trunc_ln16_1_reg_2402_pp0_iter26_reg <= trunc_ln16_1_reg_2402_pp0_iter25_reg;
        trunc_ln16_1_reg_2402_pp0_iter27_reg <= trunc_ln16_1_reg_2402_pp0_iter26_reg;
        trunc_ln16_1_reg_2402_pp0_iter28_reg <= trunc_ln16_1_reg_2402_pp0_iter27_reg;
        trunc_ln16_1_reg_2402_pp0_iter29_reg <= trunc_ln16_1_reg_2402_pp0_iter28_reg;
        trunc_ln16_1_reg_2402_pp0_iter2_reg <= trunc_ln16_1_reg_2402_pp0_iter1_reg;
        trunc_ln16_1_reg_2402_pp0_iter30_reg <= trunc_ln16_1_reg_2402_pp0_iter29_reg;
        trunc_ln16_1_reg_2402_pp0_iter31_reg <= trunc_ln16_1_reg_2402_pp0_iter30_reg;
        trunc_ln16_1_reg_2402_pp0_iter32_reg <= trunc_ln16_1_reg_2402_pp0_iter31_reg;
        trunc_ln16_1_reg_2402_pp0_iter33_reg <= trunc_ln16_1_reg_2402_pp0_iter32_reg;
        trunc_ln16_1_reg_2402_pp0_iter34_reg <= trunc_ln16_1_reg_2402_pp0_iter33_reg;
        trunc_ln16_1_reg_2402_pp0_iter35_reg <= trunc_ln16_1_reg_2402_pp0_iter34_reg;
        trunc_ln16_1_reg_2402_pp0_iter36_reg <= trunc_ln16_1_reg_2402_pp0_iter35_reg;
        trunc_ln16_1_reg_2402_pp0_iter3_reg <= trunc_ln16_1_reg_2402_pp0_iter2_reg;
        trunc_ln16_1_reg_2402_pp0_iter4_reg <= trunc_ln16_1_reg_2402_pp0_iter3_reg;
        trunc_ln16_1_reg_2402_pp0_iter5_reg <= trunc_ln16_1_reg_2402_pp0_iter4_reg;
        trunc_ln16_1_reg_2402_pp0_iter6_reg <= trunc_ln16_1_reg_2402_pp0_iter5_reg;
        trunc_ln16_1_reg_2402_pp0_iter7_reg <= trunc_ln16_1_reg_2402_pp0_iter6_reg;
        trunc_ln16_1_reg_2402_pp0_iter8_reg <= trunc_ln16_1_reg_2402_pp0_iter7_reg;
        trunc_ln16_1_reg_2402_pp0_iter9_reg <= trunc_ln16_1_reg_2402_pp0_iter8_reg;
        trunc_ln16_reg_2396_pp0_iter10_reg <= trunc_ln16_reg_2396_pp0_iter9_reg;
        trunc_ln16_reg_2396_pp0_iter11_reg <= trunc_ln16_reg_2396_pp0_iter10_reg;
        trunc_ln16_reg_2396_pp0_iter12_reg <= trunc_ln16_reg_2396_pp0_iter11_reg;
        trunc_ln16_reg_2396_pp0_iter13_reg <= trunc_ln16_reg_2396_pp0_iter12_reg;
        trunc_ln16_reg_2396_pp0_iter14_reg <= trunc_ln16_reg_2396_pp0_iter13_reg;
        trunc_ln16_reg_2396_pp0_iter15_reg <= trunc_ln16_reg_2396_pp0_iter14_reg;
        trunc_ln16_reg_2396_pp0_iter16_reg <= trunc_ln16_reg_2396_pp0_iter15_reg;
        trunc_ln16_reg_2396_pp0_iter17_reg <= trunc_ln16_reg_2396_pp0_iter16_reg;
        trunc_ln16_reg_2396_pp0_iter18_reg <= trunc_ln16_reg_2396_pp0_iter17_reg;
        trunc_ln16_reg_2396_pp0_iter19_reg <= trunc_ln16_reg_2396_pp0_iter18_reg;
        trunc_ln16_reg_2396_pp0_iter20_reg <= trunc_ln16_reg_2396_pp0_iter19_reg;
        trunc_ln16_reg_2396_pp0_iter21_reg <= trunc_ln16_reg_2396_pp0_iter20_reg;
        trunc_ln16_reg_2396_pp0_iter22_reg <= trunc_ln16_reg_2396_pp0_iter21_reg;
        trunc_ln16_reg_2396_pp0_iter23_reg <= trunc_ln16_reg_2396_pp0_iter22_reg;
        trunc_ln16_reg_2396_pp0_iter24_reg <= trunc_ln16_reg_2396_pp0_iter23_reg;
        trunc_ln16_reg_2396_pp0_iter25_reg <= trunc_ln16_reg_2396_pp0_iter24_reg;
        trunc_ln16_reg_2396_pp0_iter26_reg <= trunc_ln16_reg_2396_pp0_iter25_reg;
        trunc_ln16_reg_2396_pp0_iter27_reg <= trunc_ln16_reg_2396_pp0_iter26_reg;
        trunc_ln16_reg_2396_pp0_iter28_reg <= trunc_ln16_reg_2396_pp0_iter27_reg;
        trunc_ln16_reg_2396_pp0_iter29_reg <= trunc_ln16_reg_2396_pp0_iter28_reg;
        trunc_ln16_reg_2396_pp0_iter2_reg <= trunc_ln16_reg_2396_pp0_iter1_reg;
        trunc_ln16_reg_2396_pp0_iter30_reg <= trunc_ln16_reg_2396_pp0_iter29_reg;
        trunc_ln16_reg_2396_pp0_iter31_reg <= trunc_ln16_reg_2396_pp0_iter30_reg;
        trunc_ln16_reg_2396_pp0_iter32_reg <= trunc_ln16_reg_2396_pp0_iter31_reg;
        trunc_ln16_reg_2396_pp0_iter33_reg <= trunc_ln16_reg_2396_pp0_iter32_reg;
        trunc_ln16_reg_2396_pp0_iter34_reg <= trunc_ln16_reg_2396_pp0_iter33_reg;
        trunc_ln16_reg_2396_pp0_iter3_reg <= trunc_ln16_reg_2396_pp0_iter2_reg;
        trunc_ln16_reg_2396_pp0_iter4_reg <= trunc_ln16_reg_2396_pp0_iter3_reg;
        trunc_ln16_reg_2396_pp0_iter5_reg <= trunc_ln16_reg_2396_pp0_iter4_reg;
        trunc_ln16_reg_2396_pp0_iter6_reg <= trunc_ln16_reg_2396_pp0_iter5_reg;
        trunc_ln16_reg_2396_pp0_iter7_reg <= trunc_ln16_reg_2396_pp0_iter6_reg;
        trunc_ln16_reg_2396_pp0_iter8_reg <= trunc_ln16_reg_2396_pp0_iter7_reg;
        trunc_ln16_reg_2396_pp0_iter9_reg <= trunc_ln16_reg_2396_pp0_iter8_reg;
        trunc_ln1_reg_2609 <= {{second_order_float_cos_K0_q0[27:1]}};
        trunc_ln276_reg_2664 <= trunc_ln276_fu_1511_p1;
        trunc_ln281_2_reg_2685 <= trunc_ln281_2_fu_1575_p1;
        trunc_ln281_3_reg_2696 <= trunc_ln281_3_fu_1587_p1;
        trunc_ln281_reg_2674 <= trunc_ln281_fu_1523_p1;
        trunc_ln2_reg_2624 <= {{mul_ln78_fu_1365_p2[42:23]}};
        trunc_ln379_reg_2487 <= trunc_ln379_fu_979_p1;
        trunc_ln3_reg_2629 <= {{mul_ln79_fu_1396_p2[27:16]}};
        trunc_ln4_reg_2634 <= {{second_order_float_sin_K0_q0[28:1]}};
        trunc_ln6_reg_2701 <= {{grp_fu_805_p2[55:29]}};
        val_reg_2452 <= grp_fu_768_p2;
        y_assign_reg_2441 <= grp_fu_763_p2;
        zext_ln16_1_reg_2711[5 : 0] <= zext_ln16_1_fu_1607_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        head_dim_reg_2416 <= head_dim_fu_857_p1;
        lshr_ln16_2_reg_2411 <= {{ap_sig_allocacmp_i183_load[9:4]}};
        lshr_ln16_2_reg_2411_pp0_iter1_reg <= lshr_ln16_2_reg_2411;
        lshr_ln_reg_2406 <= {{ap_sig_allocacmp_i183_load[9:3]}};
        lshr_ln_reg_2406_pp0_iter1_reg <= lshr_ln_reg_2406;
        trunc_ln16_1_reg_2402 <= trunc_ln16_1_fu_833_p1;
        trunc_ln16_1_reg_2402_pp0_iter1_reg <= trunc_ln16_1_reg_2402;
        trunc_ln16_reg_2396 <= trunc_ln16_fu_829_p1;
        trunc_ln16_reg_2396_pp0_iter1_reg <= trunc_ln16_reg_2396;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_758_p0 <= grp_fu_780_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_763_p0 <= mul_reg_2435;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_768_p0 <= conv;
        grp_fu_768_p1 <= tmp_reg_2446;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        grp_fu_772_p0 <= tmp_14_fu_2228_p19;
        grp_fu_772_p1 <= s_out_2_fu_2182_p3;
        grp_fu_776_p0 <= tmp_14_fu_2228_p19;
        grp_fu_776_p1 <= c_out_2_fu_2189_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp95)) begin
        tmp_reg_2446 <= grp_pow_generic_float_s_fu_749_ap_return;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln16_fu_877_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter37_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) 
    & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i183_load = 10'd0;
    end else begin
        ap_sig_allocacmp_i183_load = i183_fu_336;
    end
end

always @ (*) begin
    if (((trunc_ln16_reg_2396_pp0_iter33_reg == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        in_0_ce0_local = 1'b1;
    end else begin
        in_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_reg_2396_pp0_iter33_reg == 4'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        in_10_ce0_local = 1'b1;
    end else begin
        in_10_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_reg_2396_pp0_iter32_reg == 4'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter33 == 1'b1))) begin
        in_11_ce0_local = 1'b1;
    end else begin
        in_11_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_reg_2396_pp0_iter33_reg == 4'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        in_12_ce0_local = 1'b1;
    end else begin
        in_12_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_reg_2396_pp0_iter32_reg == 4'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter33 == 1'b1))) begin
        in_13_ce0_local = 1'b1;
    end else begin
        in_13_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_reg_2396_pp0_iter33_reg == 4'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        in_14_ce0_local = 1'b1;
    end else begin
        in_14_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_reg_2396_pp0_iter32_reg == 4'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter33 == 1'b1))) begin
        in_15_ce0_local = 1'b1;
    end else begin
        in_15_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_reg_2396_pp0_iter32_reg == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter33 == 1'b1))) begin
        in_1_ce0_local = 1'b1;
    end else begin
        in_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_reg_2396_pp0_iter33_reg == 4'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        in_2_ce0_local = 1'b1;
    end else begin
        in_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_reg_2396_pp0_iter32_reg == 4'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter33 == 1'b1))) begin
        in_3_ce0_local = 1'b1;
    end else begin
        in_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_reg_2396_pp0_iter33_reg == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        in_4_ce0_local = 1'b1;
    end else begin
        in_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_reg_2396_pp0_iter32_reg == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter33 == 1'b1))) begin
        in_5_ce0_local = 1'b1;
    end else begin
        in_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_reg_2396_pp0_iter33_reg == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        in_6_ce0_local = 1'b1;
    end else begin
        in_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_reg_2396_pp0_iter32_reg == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter33 == 1'b1))) begin
        in_7_ce0_local = 1'b1;
    end else begin
        in_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_reg_2396_pp0_iter33_reg == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        in_8_ce0_local = 1'b1;
    end else begin
        in_8_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_reg_2396_pp0_iter32_reg == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter33 == 1'b1))) begin
        in_9_ce0_local = 1'b1;
    end else begin
        in_9_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_1_reg_2402_pp0_iter36_reg == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        out_0_ce0_local = 1'b1;
    end else begin
        out_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_1_reg_2402_pp0_iter36_reg == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        out_0_we0_local = 1'b1;
    end else begin
        out_0_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_1_reg_2402_pp0_iter36_reg == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        out_1_ce0_local = 1'b1;
    end else begin
        out_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_1_reg_2402_pp0_iter36_reg == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        out_1_we0_local = 1'b1;
    end else begin
        out_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_1_reg_2402_pp0_iter36_reg == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        out_2_ce0_local = 1'b1;
    end else begin
        out_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_1_reg_2402_pp0_iter36_reg == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        out_2_we0_local = 1'b1;
    end else begin
        out_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_1_reg_2402_pp0_iter36_reg == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        out_3_ce0_local = 1'b1;
    end else begin
        out_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_1_reg_2402_pp0_iter36_reg == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        out_3_we0_local = 1'b1;
    end else begin
        out_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_1_reg_2402_pp0_iter36_reg == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        out_4_ce0_local = 1'b1;
    end else begin
        out_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_1_reg_2402_pp0_iter36_reg == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        out_4_we0_local = 1'b1;
    end else begin
        out_4_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_1_reg_2402_pp0_iter36_reg == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        out_5_ce0_local = 1'b1;
    end else begin
        out_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln16_1_reg_2402_pp0_iter36_reg == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        out_5_we0_local = 1'b1;
    end else begin
        out_5_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln16_1_reg_2402_pp0_iter36_reg == 3'd0) & ~(trunc_ln16_1_reg_2402_pp0_iter36_reg == 3'd2) & ~(trunc_ln16_1_reg_2402_pp0_iter36_reg == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        out_6_ce0_local = 1'b1;
    end else begin
        out_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln16_1_reg_2402_pp0_iter36_reg == 3'd0) & ~(trunc_ln16_1_reg_2402_pp0_iter36_reg == 3'd2) & ~(trunc_ln16_1_reg_2402_pp0_iter36_reg == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        out_6_we0_local = 1'b1;
    end else begin
        out_6_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln16_1_reg_2402_pp0_iter36_reg == 3'd0) & ~(trunc_ln16_1_reg_2402_pp0_iter36_reg == 3'd2) & ~(trunc_ln16_1_reg_2402_pp0_iter36_reg == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        out_7_ce0_local = 1'b1;
    end else begin
        out_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln16_1_reg_2402_pp0_iter36_reg == 3'd0) & ~(trunc_ln16_1_reg_2402_pp0_iter36_reg == 3'd2) & ~(trunc_ln16_1_reg_2402_pp0_iter36_reg == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        out_7_we0_local = 1'b1;
    end else begin
        out_7_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ref_4oPi_table_100_ce0_local = 1'b1;
    end else begin
        ref_4oPi_table_100_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        second_order_float_cos_K0_ce0_local = 1'b1;
    end else begin
        second_order_float_cos_K0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        second_order_float_cos_K1_ce0_local = 1'b1;
    end else begin
        second_order_float_cos_K1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        second_order_float_cos_K2_ce0_local = 1'b1;
    end else begin
        second_order_float_cos_K2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        second_order_float_sin_K0_ce0_local = 1'b1;
    end else begin
        second_order_float_sin_K0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        second_order_float_sin_K1_ce0_local = 1'b1;
    end else begin
        second_order_float_sin_K1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        second_order_float_sin_K2_ce0_local = 1'b1;
    end else begin
        second_order_float_sin_K2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B_fu_1194_p1 = select_ln506_1_fu_1187_p3[21:0];

assign Ex_1_fu_1128_p2 = (select_ln453_fu_1093_p3 - trunc_ln505_fu_1124_p1);

assign Ex_fu_1088_p2 = ($signed(din_exp_reg_2463_pp0_iter25_reg) + $signed(8'd131));

assign Mx_bits_1_fu_1066_p2 = (58'd0 - Mx_bits_fu_1035_p4);

assign Mx_bits_3_fu_1072_p3 = ((trunc_ln491_fu_1062_p1[0:0] == 1'b1) ? Mx_bits_1_fu_1066_p2 : Mx_bits_fu_1035_p4);

assign Mx_bits_fu_1035_p4 = {{grp_fu_809_p2[76:19]}};

assign Mx_zeros_fu_1107_p1 = {{tmp_s_reg_2524}, {1'd1}};

assign X_fu_1000_p3 = {{1'd1}, {din_sig_reg_2470_pp0_iter23_reg}};

assign add_ln300_fu_1764_p2 = ($signed(sext_ln163_fu_1719_p1) + $signed(9'd127));

assign add_ln376_fu_946_p2 = ($signed(din_exp_fu_928_p3) + $signed(8'd194));

assign add_ln75_1_fu_1433_p2 = (add_ln75_fu_1428_p2 + zext_ln73_2_fu_1422_p1);

assign add_ln75_fu_1428_p2 = (trunc_ln1_reg_2609 + zext_ln74_2_fu_1425_p1);

assign add_ln80_1_fu_1455_p2 = ($signed(sext_ln80_2_fu_1451_p1) + $signed(trunc_ln4_reg_2634));

assign add_ln80_fu_1445_p2 = ($signed(sext_ln80_fu_1439_p1) + $signed(sext_ln80_1_fu_1442_p1));

assign addr_fu_952_p3 = ((closepath_fu_940_p2[0:0] == 1'b1) ? 8'd63 : add_ln376_fu_946_p2);

assign and_ln179_fu_1029_p2 = (icmp_ln179_fu_1019_p2 & icmp_ln179_1_fu_1024_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp95 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp83 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign c_1_fu_1625_p1 = {{trunc_ln276_reg_2664}, {19'd262144}};

assign c_2_fu_1579_p1 = {{tmp_9_fu_1549_p4}, {19'd262144}};

assign c_3_fu_1515_p1 = {{tmp_5_fu_1495_p3}, {16'd32768}};

assign c_4_fu_1567_p1 = out_bits_4_fu_1537_p3;

assign c_out_2_fu_2189_p3 = ((tmp_12_reg_2753[0:0] == 1'b1) ? c_out_fu_2178_p1 : s_out_fu_2174_p1);

assign c_out_fu_2178_p1 = t_4_fu_2167_p4;

assign closepath_fu_940_p2 = ((din_exp_fu_928_p3 < 8'd126) ? 1'b1 : 1'b0);

assign cos_result_fu_1479_p2 = ($signed(29'd268435456) - $signed(zext_ln75_fu_1476_p1));

assign cos_results_exp_1_fu_2065_p3 = ((empty_503_fu_2061_p2[0:0] == 1'b1) ? cos_results_exp_3_fu_2054_p3 : out_exp_fu_1687_p1);

assign cos_results_exp_3_fu_2054_p3 = ((and_ln179_reg_2503_pp0_iter32_reg[0:0] == 1'b1) ? 8'd127 : 8'd255);

assign cos_results_sig_1_fu_2081_p3 = ((empty_503_fu_2061_p2[0:0] == 1'b1) ? cos_results_sig_3_cast_fu_2073_p3 : significand_fu_1711_p3);

assign cos_results_sig_3_cast_fu_2073_p3 = ((not_and_ln179_fu_2043_p2[0:0] == 1'b1) ? 23'd8388607 : 23'd0);

assign cos_results_sign_1_fu_2017_p2 = (xor_ln186_fu_1971_p2 & cos_results_sign_fu_1899_p35);

assign cos_results_sign_2_fu_2048_p2 = (not_and_ln179_fu_2043_p2 & cos_results_sign_1_fu_2017_p2);

assign cos_results_sign_fu_1899_p33 = 'bx;

assign data_fu_917_p1 = val_reg_2452;

assign din_exp_fu_928_p3 = {{data_fu_917_p1[30:23]}};

assign din_sig_fu_936_p1 = data_fu_917_p1[22:0];

assign empty_502_fu_1813_p3 = ((icmp_ln292_1_fu_1734_p2[0:0] == 1'b1) ? tmp_10_fu_1793_p4 : tmp_11_fu_1803_p4);

assign empty_503_fu_2061_p2 = (icmp_ln186_reg_2548_pp0_iter32_reg | and_ln179_reg_2503_pp0_iter32_reg);

assign empty_fu_1789_p1 = newexp_fu_1770_p2[7:0];

assign grp_fu_758_p1 = 32'd3221225472;

assign grp_fu_763_p1 = 32'd1015021568;

assign grp_fu_780_p0 = head_dim_reg_2416;

assign grp_fu_805_p0 = grp_fu_805_p00;

assign grp_fu_805_p00 = tmp_1_reg_2542_pp0_iter30_reg;

assign grp_fu_805_p1 = grp_fu_805_p10;

assign grp_fu_805_p10 = add_ln80_1_reg_2644;

assign grp_fu_809_p1 = grp_fu_809_p10;

assign grp_fu_809_p10 = X_fu_1000_p3;

assign head_dim_fu_857_p1 = ap_sig_allocacmp_i183_load[5:0];

assign i_fu_871_p2 = (ap_sig_allocacmp_i183_load + 10'd2);

assign icmp_ln16_fu_877_p2 = ((i_fu_871_p2 < 10'd768) ? 1'b1 : 1'b0);

assign icmp_ln179_1_fu_1024_p2 = ((din_sig_reg_2470_pp0_iter23_reg == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln179_fu_1019_p2 = ((din_exp_reg_2463_pp0_iter23_reg == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln186_fu_1152_p2 = ((din_exp_reg_2463_pp0_iter25_reg == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln292_1_fu_1734_p2 = ((trunc_ln281_2_reg_2685 == 6'd16) ? 1'b1 : 1'b0);

assign icmp_ln292_fu_1649_p2 = ((trunc_ln281_reg_2674 == 6'd16) ? 1'b1 : 1'b0);

assign icmp_ln306_fu_1601_p2 = ((trunc_ln5_fu_1485_p4 == 28'd0) ? 1'b1 : 1'b0);

assign in_0_address0 = zext_ln16_1_reg_2711;

assign in_0_ce0 = in_0_ce0_local;

assign in_10_address0 = zext_ln16_1_reg_2711;

assign in_10_ce0 = in_10_ce0_local;

assign in_11_address0 = zext_ln16_1_fu_1607_p1;

assign in_11_ce0 = in_11_ce0_local;

assign in_12_address0 = zext_ln16_1_reg_2711;

assign in_12_ce0 = in_12_ce0_local;

assign in_13_address0 = zext_ln16_1_fu_1607_p1;

assign in_13_ce0 = in_13_ce0_local;

assign in_14_address0 = zext_ln16_1_reg_2711;

assign in_14_ce0 = in_14_ce0_local;

assign in_15_address0 = zext_ln16_1_fu_1607_p1;

assign in_15_ce0 = in_15_ce0_local;

assign in_1_address0 = zext_ln16_1_fu_1607_p1;

assign in_1_ce0 = in_1_ce0_local;

assign in_2_address0 = zext_ln16_1_reg_2711;

assign in_2_ce0 = in_2_ce0_local;

assign in_3_address0 = zext_ln16_1_fu_1607_p1;

assign in_3_ce0 = in_3_ce0_local;

assign in_4_address0 = zext_ln16_1_reg_2711;

assign in_4_ce0 = in_4_ce0_local;

assign in_5_address0 = zext_ln16_1_fu_1607_p1;

assign in_5_ce0 = in_5_ce0_local;

assign in_6_address0 = zext_ln16_1_reg_2711;

assign in_6_ce0 = in_6_ce0_local;

assign in_7_address0 = zext_ln16_1_fu_1607_p1;

assign in_7_ce0 = in_7_ce0_local;

assign in_8_address0 = zext_ln16_1_reg_2711;

assign in_8_ce0 = in_8_ce0_local;

assign in_9_address0 = zext_ln16_1_fu_1607_p1;

assign in_9_ce0 = in_9_ce0_local;

assign in_shift_1_fu_1645_p1 = shl_ln291_fu_1640_p2[27:0];

assign in_shift_2_fu_1730_p1 = shl_ln291_2_fu_1725_p2[27:0];

assign index_fu_1821_p3 = {{din_sign_reg_2457_pp0_iter32_reg}, {k_reg_2513_pp0_iter32_reg}};

assign k_fu_1055_p3 = ((closepath_reg_2476_pp0_iter24_reg[0:0] == 1'b1) ? 3'd0 : trunc_ln_fu_1045_p4);

assign lshr_ln506_fu_1175_p2 = zext_ln506_1_fu_1172_p1 >> zext_ln506_fu_1168_p1;

assign lshr_ln6_fu_960_p4 = {{addr_fu_952_p3[7:4]}};

assign mul_ln69_fu_1229_p0 = zext_ln69_fu_1218_p1;

assign mul_ln69_fu_1229_p1 = zext_ln69_fu_1218_p1;

assign mul_ln73_fu_1303_p0 = mul_ln73_fu_1303_p00;

assign mul_ln73_fu_1303_p00 = second_order_float_cos_K1_q0;

assign mul_ln73_fu_1303_p1 = mul_ln73_fu_1303_p10;

assign mul_ln73_fu_1303_p10 = B_reg_2557_pp0_iter28_reg;

assign mul_ln74_fu_1334_p0 = mul_ln74_fu_1334_p00;

assign mul_ln74_fu_1334_p00 = tmp_3_reg_2583;

assign mul_ln74_fu_1334_p1 = mul_ln74_fu_1334_p10;

assign mul_ln74_fu_1334_p10 = second_order_float_cos_K2_q0;

assign mul_ln78_fu_1365_p0 = mul_ln78_fu_1365_p00;

assign mul_ln78_fu_1365_p00 = B_reg_2557_pp0_iter28_reg;

assign mul_ln79_fu_1396_p0 = mul_ln79_fu_1396_p00;

assign mul_ln79_fu_1396_p00 = tmp_3_reg_2583;

assign newexp_2_fu_1681_p2 = (zext_ln287_fu_1677_p1 ^ 7'd127);

assign newexp_fu_1770_p2 = (add_ln300_fu_1764_p2 - zext_ln287_1_fu_1760_p1);

assign not_and_ln179_fu_2043_p2 = (1'd1 ^ and_ln179_reg_2503_pp0_iter32_reg);

assign or_ln186_fu_1989_p2 = (or_ln306_fu_1784_p2 | icmp_ln186_reg_2548_pp0_iter32_reg);

assign or_ln306_fu_1784_p2 = (tmp_20_fu_1776_p3 | icmp_ln306_reg_2706);

assign out_0_address0 = zext_ln16_fu_2340_p1;

assign out_0_ce0 = out_0_ce0_local;

assign out_0_d0 = grp_fu_794_p4;

assign out_0_we0 = out_0_we0_local;

assign out_1_address0 = zext_ln16_fu_2340_p1;

assign out_1_ce0 = out_1_ce0_local;

assign out_1_d0 = grp_fu_783_p4;

assign out_1_we0 = out_1_we0_local;

assign out_2_address0 = zext_ln16_fu_2340_p1;

assign out_2_ce0 = out_2_ce0_local;

assign out_2_d0 = grp_fu_794_p4;

assign out_2_we0 = out_2_we0_local;

assign out_3_address0 = zext_ln16_fu_2340_p1;

assign out_3_ce0 = out_3_ce0_local;

assign out_3_d0 = grp_fu_783_p4;

assign out_3_we0 = out_3_we0_local;

assign out_4_address0 = zext_ln16_fu_2340_p1;

assign out_4_ce0 = out_4_ce0_local;

assign out_4_d0 = grp_fu_794_p4;

assign out_4_we0 = out_4_we0_local;

assign out_5_address0 = zext_ln16_fu_2340_p1;

assign out_5_ce0 = out_5_ce0_local;

assign out_5_d0 = grp_fu_783_p4;

assign out_5_we0 = out_5_we0_local;

assign out_6_address0 = zext_ln16_fu_2340_p1;

assign out_6_ce0 = out_6_ce0_local;

assign out_6_d0 = grp_fu_794_p4;

assign out_6_we0 = out_6_we0_local;

assign out_7_address0 = zext_ln16_fu_2340_p1;

assign out_7_ce0 = out_7_ce0_local;

assign out_7_d0 = grp_fu_783_p4;

assign out_7_we0 = out_7_we0_local;

assign out_bits_4_fu_1537_p3 = {{tmp_8_fu_1527_p4}, {16'd32768}};

assign out_exp_fu_1687_p1 = newexp_2_fu_1681_p2;

assign ref_4oPi_table_100_address0 = zext_ln378_fu_970_p1;

assign s_out_2_fu_2182_p3 = ((tmp_12_reg_2753[0:0] == 1'b1) ? s_out_fu_2174_p1 : c_out_fu_2178_p1);

assign s_out_fu_2174_p1 = t_3_fu_2160_p4;

assign second_order_float_cos_K0_address0 = zext_ln72_fu_1235_p1;

assign second_order_float_cos_K1_address0 = zext_ln72_fu_1235_p1;

assign second_order_float_cos_K2_address0 = zext_ln72_fu_1235_p1;

assign second_order_float_sin_K0_address0 = zext_ln72_fu_1235_p1;

assign second_order_float_sin_K1_address0 = zext_ln72_fu_1235_p1;

assign second_order_float_sin_K2_address0 = zext_ln72_fu_1235_p1;

assign select_ln186_2_fu_2002_p3 = ((icmp_ln186_reg_2548_pp0_iter32_reg[0:0] == 1'b1) ? 23'd8388607 : 23'd0);

assign select_ln186_fu_1982_p3 = ((icmp_ln186_reg_2548_pp0_iter32_reg[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign select_ln453_fu_1093_p3 = ((closepath_reg_2476_pp0_iter25_reg[0:0] == 1'b1) ? Ex_fu_1088_p2 : 8'd0);

assign select_ln506_1_fu_1187_p3 = ((tmp_19_reg_2536[0:0] == 1'b1) ? lshr_ln506_fu_1175_p2 : shl_ln506_fu_1181_p2);

assign select_ln506_fu_1162_p3 = ((tmp_19_reg_2536[0:0] == 1'b1) ? sub_ln506_fu_1157_p2 : Ex_1_reg_2529);

assign sext_ln163_fu_1719_p1 = Ex_1_reg_2529_pp0_iter32_reg;

assign sext_ln80_1_fu_1442_p1 = $signed(trunc_ln3_reg_2629);

assign sext_ln80_2_fu_1451_p1 = $signed(add_ln80_fu_1445_p2);

assign sext_ln80_fu_1439_p1 = $signed(trunc_ln2_reg_2624);

assign shift_1_fu_1654_p2 = (trunc_ln281_1_fu_1633_p1 + 6'd16);

assign shift_2_fu_1670_p3 = ((icmp_ln292_fu_1649_p2[0:0] == 1'b1) ? shift_1_fu_1654_p2 : trunc_ln281_reg_2674);

assign shift_4_fu_1739_p2 = (trunc_ln281_3_reg_2696 + 6'd16);

assign shift_5_fu_1753_p3 = ((icmp_ln292_1_fu_1734_p2[0:0] == 1'b1) ? shift_4_fu_1739_p2 : trunc_ln281_2_reg_2685);

assign shl_ln291_1_fu_1664_p2 = zext_ln291_1_fu_1660_p1 << c_1_fu_1625_p3;

assign shl_ln291_2_fu_1725_p2 = zext_ln291_2_fu_1722_p1 << c_4_reg_2680;

assign shl_ln291_3_fu_1748_p2 = zext_ln291_3_fu_1744_p1 << c_2_reg_2691;

assign shl_ln291_fu_1640_p2 = zext_ln291_fu_1637_p1 << c_3_reg_2669;

assign shl_ln379_fu_986_p2 = ref_4oPi_table_100_q0 << zext_ln379_fu_983_p1;

assign shl_ln504_fu_1119_p2 = Mx_bits_3_reg_2519 << zext_ln504_fu_1115_p1;

assign shl_ln506_fu_1181_p2 = zext_ln506_1_fu_1172_p1 << zext_ln506_fu_1168_p1;

assign significand_fu_1711_p3 = ((icmp_ln292_fu_1649_p2[0:0] == 1'b1) ? tmp_6_fu_1691_p4 : tmp_7_fu_1701_p4);

assign sin_results_exp_1_fu_2029_p3 = ((and_ln179_reg_2503_pp0_iter32_reg[0:0] == 1'b1) ? 8'd0 : sin_results_exp_fu_1994_p3);

assign sin_results_exp_fu_1994_p3 = ((or_ln186_fu_1989_p2[0:0] == 1'b1) ? select_ln186_fu_1982_p3 : empty_fu_1789_p1);

assign sin_results_sig_1_fu_2036_p3 = ((and_ln179_reg_2503_pp0_iter32_reg[0:0] == 1'b1) ? 23'd0 : sin_results_sig_fu_2009_p3);

assign sin_results_sig_fu_2009_p3 = ((or_ln186_fu_1989_p2[0:0] == 1'b1) ? select_ln186_2_fu_2002_p3 : empty_502_fu_1813_p3);

assign sin_results_sign_1_fu_1976_p2 = (xor_ln186_fu_1971_p2 & sin_results_sign_fu_1827_p35);

assign sin_results_sign_2_fu_2023_p3 = ((and_ln179_reg_2503_pp0_iter32_reg[0:0] == 1'b1) ? din_sign_reg_2457_pp0_iter32_reg : sin_results_sign_1_fu_1976_p2);

assign sin_results_sign_fu_1827_p33 = 'bx;

assign sub_ln506_fu_1157_p2 = ($signed(8'd0) - $signed(Ex_1_reg_2529));

assign t_3_fu_2160_p4 = {{{cos_results_sign_2_reg_2738}, {cos_results_exp_1_reg_2743}}, {cos_results_sig_1_reg_2748}};

assign t_4_fu_2167_p4 = {{{sin_results_sign_2_reg_2723}, {sin_results_exp_1_reg_2728}}, {sin_results_sig_1_reg_2733}};

assign tmp_10_fu_1793_p4 = {{shl_ln291_3_fu_1748_p2[27:5]}};

assign tmp_11_fu_1803_p4 = {{shl_ln291_2_fu_1725_p2[27:5]}};

assign tmp_12_fu_2089_p17 = 'bx;

assign tmp_13_fu_2283_p17 = 'bx;

assign tmp_14_fu_2228_p17 = 'bx;

assign tmp_20_fu_1776_p3 = newexp_fu_1770_p2[32'd8];

assign tmp_5_fu_1495_p3 = {{cos_result_fu_1479_p2[28:13]}};

assign tmp_6_fu_1691_p4 = {{shl_ln291_1_fu_1664_p2[27:5]}};

assign tmp_7_fu_1701_p4 = {{shl_ln291_fu_1640_p2[27:5]}};

assign tmp_8_fu_1527_p4 = {{grp_fu_805_p2[56:42]}};

assign tmp_9_fu_1549_p4 = {{grp_fu_805_p2[41:29]}};

assign trunc_ln16_1_fu_833_p1 = ap_sig_allocacmp_i183_load[2:0];

assign trunc_ln16_fu_829_p1 = ap_sig_allocacmp_i183_load[3:0];

assign trunc_ln276_fu_1511_p1 = cos_result_fu_1479_p2[12:0];

assign trunc_ln281_1_fu_1633_p1 = c_1_fu_1625_p3[5:0];

assign trunc_ln281_2_fu_1575_p1 = c_4_fu_1567_p3[5:0];

assign trunc_ln281_3_fu_1587_p1 = c_2_fu_1579_p3[5:0];

assign trunc_ln281_fu_1523_p1 = c_3_fu_1515_p3[5:0];

assign trunc_ln379_fu_979_p1 = addr_fu_952_p3[3:0];

assign trunc_ln491_fu_1062_p1 = k_fu_1055_p3[0:0];

assign trunc_ln505_fu_1124_p1 = Mx_zeros_fu_1107_p3[7:0];

assign trunc_ln5_fu_1485_p4 = {{grp_fu_805_p2[56:29]}};

assign trunc_ln_fu_1045_p4 = {{grp_fu_809_p2[79:77]}};

assign xor_ln186_fu_1971_p2 = (icmp_ln186_reg_2548_pp0_iter32_reg ^ 1'd1);

assign zext_ln16_1_fu_1607_p1 = lshr_ln16_2_reg_2411_pp0_iter32_reg;

assign zext_ln16_fu_2340_p1 = lshr_ln_reg_2406_pp0_iter36_reg;

assign zext_ln287_1_fu_1760_p1 = shift_5_fu_1753_p3;

assign zext_ln287_fu_1677_p1 = shift_2_fu_1670_p3;

assign zext_ln291_1_fu_1660_p1 = in_shift_1_fu_1645_p1;

assign zext_ln291_2_fu_1722_p1 = trunc_ln6_reg_2701;

assign zext_ln291_3_fu_1744_p1 = in_shift_2_fu_1730_p1;

assign zext_ln291_fu_1637_p1 = cos_result_reg_2659;

assign zext_ln378_fu_970_p1 = lshr_ln6_fu_960_p4;

assign zext_ln379_fu_983_p1 = trunc_ln379_reg_2487;

assign zext_ln504_fu_1115_p1 = Mx_zeros_fu_1107_p3;

assign zext_ln506_1_fu_1172_p1 = tmp_1_reg_2542;

assign zext_ln506_fu_1168_p1 = select_ln506_fu_1162_p3;

assign zext_ln69_fu_1218_p1 = B_trunc_reg_2568;

assign zext_ln72_fu_1235_p1 = A_reg_2563;

assign zext_ln73_2_fu_1422_p1 = tmp_2_reg_2614;

assign zext_ln74_2_fu_1425_p1 = tmp_4_reg_2619;

assign zext_ln75_fu_1476_p1 = add_ln75_1_reg_2639_pp0_iter31_reg;

always @ (posedge ap_clk) begin
    zext_ln16_1_reg_2711[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //kernel_mhsa_RoPE_Pipeline_VITIS_LOOP_16_1
