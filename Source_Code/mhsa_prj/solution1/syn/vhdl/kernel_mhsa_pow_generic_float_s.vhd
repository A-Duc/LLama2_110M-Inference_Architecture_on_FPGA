-- ==============================================================
-- Generated by Vitis HLS v2025.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel_mhsa_pow_generic_float_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    exp : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of kernel_mhsa_pow_generic_float_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv36_B17217F7D : STD_LOGIC_VECTOR (35 downto 0) := "101100010111001000010111111101111101";
    constant ap_const_lv63_24D763776A : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000010010011010111011000110111011101101010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv15_4000 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv27_4 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000100";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_7FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111111111111111111";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_7F800000 : STD_LOGIC_VECTOR (31 downto 0) := "01111111100000000000000000000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv10_381 : STD_LOGIC_VECTOR (9 downto 0) := "1110000001";
    constant ap_const_lv25_B8A : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000101110001010";

attribute shreg_extract : string;
    signal pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal es_sign_fu_216_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_973 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal es_sign_reg_973_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_973_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_973_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_973_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_973_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_973_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_973_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_973_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_973_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_sign_reg_973_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal es_exp_reg_980 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln18_1_fu_236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_988 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_2_fu_242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_2_reg_993 : STD_LOGIC_VECTOR (0 downto 0);
    signal e_frac_2_fu_266_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal e_frac_2_reg_998 : STD_LOGIC_VECTOR (24 downto 0);
    signal m_exp_fu_277_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal m_exp_reg_1003 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln306_fu_283_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln306_reg_1009 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_is_0_fu_287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1015 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1015_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1015_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1015_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1015_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1015_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1015_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1015_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1015_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_0_reg_1015_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_inf_fu_297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_inf_reg_1020 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_inf_reg_1020_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_inf_reg_1020_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_inf_reg_1020_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_inf_reg_1020_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_inf_reg_1020_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_inf_reg_1020_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_inf_reg_1020_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_inf_reg_1020_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_inf_reg_1020_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln378_fu_307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln378_reg_1027 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln378_reg_1027_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln378_reg_1027_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln378_reg_1027_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln378_reg_1027_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln378_reg_1027_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln378_reg_1027_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln378_reg_1027_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln378_reg_1027_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln378_reg_1027_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal m_frac_l_fu_207_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal m_frac_l_reg_1033 : STD_LOGIC_VECTOR (62 downto 0);
    signal m_frac_l_reg_1033_pp0_iter2_reg : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_reg_1039 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1039_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln545_fu_333_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln545_reg_1047 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_reg_1053 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1059 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1059_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1059_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1059_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1059_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1059_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1059_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1059_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1059_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1059_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln545_1_fu_366_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln545_1_reg_1064 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_fix_l_fu_394_p3 : STD_LOGIC_VECTOR (65 downto 0);
    signal m_fix_l_reg_1069 : STD_LOGIC_VECTOR (65 downto 0);
    signal m_fix_reg_1075 : STD_LOGIC_VECTOR (26 downto 0);
    signal m_fix_reg_1075_pp0_iter3_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal m_fix_reg_1075_pp0_iter4_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal m_fix_reg_1075_pp0_iter5_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal m_fix_reg_1075_pp0_iter6_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_2_reg_1080 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1080_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_reg_1090 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_reg_1090_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_reg_1090_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_reg_1090_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_reg_1090_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_reg_1090_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_reg_1090_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_reg_1090_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_reg_1090_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_1_fu_525_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_1_reg_1095 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_1_reg_1095_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_1_reg_1095_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_1_reg_1095_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_1_reg_1095_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_1_reg_1095_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_1_reg_1095_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_1_reg_1095_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r_exp_fu_581_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_reg_1105 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_reg_1105_pp0_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_reg_1105_pp0_iter7_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_reg_1105_pp0_iter8_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_reg_1105_pp0_iter9_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_reg_1105_pp0_iter10_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal m_fix_a_reg_1112 : STD_LOGIC_VECTOR (26 downto 0);
    signal m_diff_lo_fu_625_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal m_diff_lo_reg_1117 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_Z1_reg_1132 : STD_LOGIC_VECTOR (26 downto 0);
    signal exp_Z1_reg_1132_pp0_iter9_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal r_exp_1_fu_719_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_1_reg_1152 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln611_fu_629_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln159_fu_648_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_ce0_local : STD_LOGIC;
    signal pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_ce0_local : STD_LOGIC;
    signal m_frac_l_fu_207_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal data_fu_212_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal es_sig_fu_232_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal e_frac_fu_248_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln532_fu_256_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal e_frac_1_fu_260_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln317_fu_274_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln18_fu_292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_NaN_fu_302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln545_fu_357_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln545_fu_360_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln539_1_fu_354_p1 : STD_LOGIC_VECTOR (66 downto 0);
    signal zext_ln545_fu_370_p1 : STD_LOGIC_VECTOR (66 downto 0);
    signal ashr_ln545_fu_374_p2 : STD_LOGIC_VECTOR (66 downto 0);
    signal shl_ln545_fu_380_p2 : STD_LOGIC_VECTOR (66 downto 0);
    signal trunc_ln545_fu_386_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal trunc_ln545_1_fu_390_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal zext_ln552_fu_401_p1 : STD_LOGIC_VECTOR (66 downto 0);
    signal select_ln553_fu_410_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln553_fu_415_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln553_fu_419_p1 : STD_LOGIC_VECTOR (66 downto 0);
    signal shl_ln553_fu_423_p2 : STD_LOGIC_VECTOR (66 downto 0);
    signal ashr_ln553_fu_429_p2 : STD_LOGIC_VECTOR (66 downto 0);
    signal select_ln553_1_fu_435_p3 : STD_LOGIC_VECTOR (66 downto 0);
    signal shl_ln552_fu_404_p2 : STD_LOGIC_VECTOR (66 downto 0);
    signal select_ln553_2_fu_442_p3 : STD_LOGIC_VECTOR (66 downto 0);
    signal trunc_ln553_fu_449_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal zext_ln549_fu_453_p1 : STD_LOGIC_VECTOR (66 downto 0);
    signal m_fix_hi_fu_467_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln546_fu_505_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal shl_ln546_fu_508_p2 : STD_LOGIC_VECTOR (65 downto 0);
    signal ashr_ln546_fu_513_p2 : STD_LOGIC_VECTOR (65 downto 0);
    signal sext_ln539_2_fu_502_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal m_fix_back_fu_518_p3 : STD_LOGIC_VECTOR (65 downto 0);
    signal shl_ln_fu_531_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_951_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln563_fu_558_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln_fu_542_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln563_fu_561_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln563_1_fu_567_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_5_fu_551_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln563_fu_573_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln568_fu_202_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal sub_ln574_fu_611_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal m_diff_hi_fu_615_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal Z2_ind_fu_638_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln160_fu_657_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln160_1_fu_660_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln160_fu_664_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal exp_Z1_hi_fu_680_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_Z1P_m_1_fu_670_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln616_fu_706_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_962_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_6_fu_740_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_exp_2_fu_747_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_7_fu_757_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln628_fu_753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln628_2_fu_767_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_786_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_4_fu_795_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln657_fu_812_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal out_exp_fu_816_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal out_sig_fu_804_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal t_fu_822_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln313_fu_830_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln413_fu_731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln378_fu_838_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln431_fu_843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln431_fu_854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln438_fu_736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln438_fu_864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln438_1_fu_870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln431_fu_859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln438_2_fu_876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln628_fu_773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln645_fu_894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln628_fu_888_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln645_fu_900_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln431_1_fu_849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln628_1_fu_882_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln645_1_fu_906_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal UnifiedRetVal_fu_923_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal UnifiedRetVal_fu_923_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal UnifiedRetVal_fu_923_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal UnifiedRetVal_fu_923_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal UnifiedRetVal_fu_923_p12 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_951_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_962_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_962_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_962_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal UnifiedRetVal_fu_923_p13 : STD_LOGIC_VECTOR (31 downto 0);
    signal exp_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_962_p00 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_962_p10 : STD_LOGIC_VECTOR (35 downto 0);
    signal UnifiedRetVal_fu_923_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal UnifiedRetVal_fu_923_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal UnifiedRetVal_fu_923_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal UnifiedRetVal_fu_923_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal UnifiedRetVal_fu_923_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component kernel_mhsa_mul_10s_36s_36_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (35 downto 0);
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component kernel_mhsa_mul_25s_39ns_63_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (24 downto 0);
        din1 : IN STD_LOGIC_VECTOR (38 downto 0);
        dout : OUT STD_LOGIC_VECTOR (62 downto 0) );
    end component;


    component kernel_mhsa_sparsemux_11_4_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (3 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (3 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (3 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (3 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (3 downto 0);
        din4_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        def : IN STD_LOGIC_VECTOR (31 downto 0);
        sel : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kernel_mhsa_mac_muladd_13s_12ns_16s_25_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component kernel_mhsa_mac_muladd_18ns_18ns_44ns_44_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        din2 : IN STD_LOGIC_VECTOR (43 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (43 downto 0) );
    end component;


    component kernel_mhsa_pow_generic_float_s_pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_arrbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component kernel_mhsa_pow_generic_float_s_pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_arraycud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_U : component kernel_mhsa_pow_generic_float_s_pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_arrbkb
    generic map (
        DataWidth => 27,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_address0,
        ce0 => pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_ce0_local,
        q0 => pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_q0);

    pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_U : component kernel_mhsa_pow_generic_float_s_pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_arraycud
    generic map (
        DataWidth => 8,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_address0,
        ce0 => pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_ce0_local,
        q0 => pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_q0);

    mul_10s_36s_36_1_1_U327 : component kernel_mhsa_mul_10s_36s_36_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => r_exp_reg_1105,
        din1 => ap_const_lv36_B17217F7D,
        dout => mul_ln568_fu_202_p2);

    mul_25s_39ns_63_1_1_U328 : component kernel_mhsa_mul_25s_39ns_63_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 39,
        dout_WIDTH => 63)
    port map (
        din0 => e_frac_2_reg_998,
        din1 => m_frac_l_fu_207_p1,
        dout => m_frac_l_fu_207_p2);

    sparsemux_11_4_32_1_1_U329 : component kernel_mhsa_sparsemux_11_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "1000",
        din0_WIDTH => 32,
        CASE1 => "0100",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0001",
        din3_WIDTH => 32,
        CASE4 => "0000",
        din4_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => UnifiedRetVal_fu_923_p2,
        din1 => ap_const_lv32_7F800000,
        din2 => UnifiedRetVal_fu_923_p6,
        din3 => UnifiedRetVal_fu_923_p8,
        din4 => ap_const_lv32_0,
        def => UnifiedRetVal_fu_923_p11,
        sel => UnifiedRetVal_fu_923_p12,
        dout => UnifiedRetVal_fu_923_p13);

    mac_muladd_13s_12ns_16s_25_4_1_U330 : component kernel_mhsa_mac_muladd_13s_12ns_16s_25_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 13,
        din1_WIDTH => 12,
        din2_WIDTH => 16,
        dout_WIDTH => 25)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => m_fix_hi_fu_467_p4,
        din1 => grp_fu_951_p1,
        din2 => shl_ln_fu_531_p3,
        ce => ap_const_logic_1,
        dout => grp_fu_951_p3);

    mac_muladd_18ns_18ns_44ns_44_4_1_U331 : component kernel_mhsa_mac_muladd_18ns_18ns_44ns_44_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        din2_WIDTH => 44,
        dout_WIDTH => 44)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_962_p0,
        din1 => grp_fu_962_p1,
        din2 => grp_fu_962_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_962_p3);





    exp_int_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            exp_int_reg <= exp;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                e_frac_2_reg_998 <= e_frac_2_fu_266_p3;
                es_exp_reg_980 <= data_fu_212_p1(30 downto 23);
                es_sign_reg_973 <= data_fu_212_p1(31 downto 31);
                es_sign_reg_973_pp0_iter10_reg <= es_sign_reg_973_pp0_iter9_reg;
                es_sign_reg_973_pp0_iter1_reg <= es_sign_reg_973;
                es_sign_reg_973_pp0_iter2_reg <= es_sign_reg_973_pp0_iter1_reg;
                es_sign_reg_973_pp0_iter3_reg <= es_sign_reg_973_pp0_iter2_reg;
                es_sign_reg_973_pp0_iter4_reg <= es_sign_reg_973_pp0_iter3_reg;
                es_sign_reg_973_pp0_iter5_reg <= es_sign_reg_973_pp0_iter4_reg;
                es_sign_reg_973_pp0_iter6_reg <= es_sign_reg_973_pp0_iter5_reg;
                es_sign_reg_973_pp0_iter7_reg <= es_sign_reg_973_pp0_iter6_reg;
                es_sign_reg_973_pp0_iter8_reg <= es_sign_reg_973_pp0_iter7_reg;
                es_sign_reg_973_pp0_iter9_reg <= es_sign_reg_973_pp0_iter8_reg;
                exp_Z1_reg_1132 <= pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_q0;
                exp_Z1_reg_1132_pp0_iter9_reg <= exp_Z1_reg_1132;
                icmp_ln18_1_reg_988 <= icmp_ln18_1_fu_236_p2;
                icmp_ln18_2_reg_993 <= icmp_ln18_2_fu_242_p2;
                icmp_ln628_1_reg_1095 <= icmp_ln628_1_fu_525_p2;
                icmp_ln628_1_reg_1095_pp0_iter10_reg <= icmp_ln628_1_reg_1095_pp0_iter9_reg;
                icmp_ln628_1_reg_1095_pp0_iter4_reg <= icmp_ln628_1_reg_1095;
                icmp_ln628_1_reg_1095_pp0_iter5_reg <= icmp_ln628_1_reg_1095_pp0_iter4_reg;
                icmp_ln628_1_reg_1095_pp0_iter6_reg <= icmp_ln628_1_reg_1095_pp0_iter5_reg;
                icmp_ln628_1_reg_1095_pp0_iter7_reg <= icmp_ln628_1_reg_1095_pp0_iter6_reg;
                icmp_ln628_1_reg_1095_pp0_iter8_reg <= icmp_ln628_1_reg_1095_pp0_iter7_reg;
                icmp_ln628_1_reg_1095_pp0_iter9_reg <= icmp_ln628_1_reg_1095_pp0_iter8_reg;
                icmp_ln628_reg_1090 <= icmp_ln628_fu_497_p2;
                icmp_ln628_reg_1090_pp0_iter10_reg <= icmp_ln628_reg_1090_pp0_iter9_reg;
                icmp_ln628_reg_1090_pp0_iter3_reg <= icmp_ln628_reg_1090;
                icmp_ln628_reg_1090_pp0_iter4_reg <= icmp_ln628_reg_1090_pp0_iter3_reg;
                icmp_ln628_reg_1090_pp0_iter5_reg <= icmp_ln628_reg_1090_pp0_iter4_reg;
                icmp_ln628_reg_1090_pp0_iter6_reg <= icmp_ln628_reg_1090_pp0_iter5_reg;
                icmp_ln628_reg_1090_pp0_iter7_reg <= icmp_ln628_reg_1090_pp0_iter6_reg;
                icmp_ln628_reg_1090_pp0_iter8_reg <= icmp_ln628_reg_1090_pp0_iter7_reg;
                icmp_ln628_reg_1090_pp0_iter9_reg <= icmp_ln628_reg_1090_pp0_iter8_reg;
                m_diff_lo_reg_1117 <= m_diff_lo_fu_625_p1;
                m_exp_reg_1003 <= m_exp_fu_277_p2;
                m_fix_a_reg_1112 <= mul_ln568_fu_202_p2(35 downto 9);
                m_fix_l_reg_1069 <= m_fix_l_fu_394_p3;
                m_fix_reg_1075 <= select_ln553_2_fu_442_p3(56 downto 30);
                m_fix_reg_1075_pp0_iter3_reg <= m_fix_reg_1075;
                m_fix_reg_1075_pp0_iter4_reg <= m_fix_reg_1075_pp0_iter3_reg;
                m_fix_reg_1075_pp0_iter5_reg <= m_fix_reg_1075_pp0_iter4_reg;
                m_fix_reg_1075_pp0_iter6_reg <= m_fix_reg_1075_pp0_iter5_reg;
                m_frac_l_reg_1033 <= m_frac_l_fu_207_p2;
                m_frac_l_reg_1033_pp0_iter2_reg <= m_frac_l_reg_1033;
                or_ln378_reg_1027 <= or_ln378_fu_307_p2;
                or_ln378_reg_1027_pp0_iter10_reg <= or_ln378_reg_1027_pp0_iter9_reg;
                or_ln378_reg_1027_pp0_iter2_reg <= or_ln378_reg_1027;
                or_ln378_reg_1027_pp0_iter3_reg <= or_ln378_reg_1027_pp0_iter2_reg;
                or_ln378_reg_1027_pp0_iter4_reg <= or_ln378_reg_1027_pp0_iter3_reg;
                or_ln378_reg_1027_pp0_iter5_reg <= or_ln378_reg_1027_pp0_iter4_reg;
                or_ln378_reg_1027_pp0_iter6_reg <= or_ln378_reg_1027_pp0_iter5_reg;
                or_ln378_reg_1027_pp0_iter7_reg <= or_ln378_reg_1027_pp0_iter6_reg;
                or_ln378_reg_1027_pp0_iter8_reg <= or_ln378_reg_1027_pp0_iter7_reg;
                or_ln378_reg_1027_pp0_iter9_reg <= or_ln378_reg_1027_pp0_iter8_reg;
                r_exp_1_reg_1152 <= r_exp_1_fu_719_p2;
                r_exp_reg_1105 <= r_exp_fu_581_p3;
                r_exp_reg_1105_pp0_iter10_reg <= r_exp_reg_1105_pp0_iter9_reg;
                r_exp_reg_1105_pp0_iter6_reg <= r_exp_reg_1105;
                r_exp_reg_1105_pp0_iter7_reg <= r_exp_reg_1105_pp0_iter6_reg;
                r_exp_reg_1105_pp0_iter8_reg <= r_exp_reg_1105_pp0_iter7_reg;
                r_exp_reg_1105_pp0_iter9_reg <= r_exp_reg_1105_pp0_iter8_reg;
                sext_ln545_1_reg_1064 <= sext_ln545_1_fu_366_p1;
                sub_ln545_reg_1047 <= sub_ln545_fu_333_p2;
                tmp_1_reg_1053 <= sub_ln545_fu_333_p2(7 downto 7);
                tmp_2_reg_1080 <= zext_ln549_fu_453_p1(65 downto 65);
                tmp_2_reg_1080_pp0_iter3_reg <= tmp_2_reg_1080;
                tmp_8_reg_1059 <= m_frac_l_fu_207_p2(62 downto 62);
                tmp_8_reg_1059_pp0_iter10_reg <= tmp_8_reg_1059_pp0_iter9_reg;
                tmp_8_reg_1059_pp0_iter2_reg <= tmp_8_reg_1059;
                tmp_8_reg_1059_pp0_iter3_reg <= tmp_8_reg_1059_pp0_iter2_reg;
                tmp_8_reg_1059_pp0_iter4_reg <= tmp_8_reg_1059_pp0_iter3_reg;
                tmp_8_reg_1059_pp0_iter5_reg <= tmp_8_reg_1059_pp0_iter4_reg;
                tmp_8_reg_1059_pp0_iter6_reg <= tmp_8_reg_1059_pp0_iter5_reg;
                tmp_8_reg_1059_pp0_iter7_reg <= tmp_8_reg_1059_pp0_iter6_reg;
                tmp_8_reg_1059_pp0_iter8_reg <= tmp_8_reg_1059_pp0_iter7_reg;
                tmp_8_reg_1059_pp0_iter9_reg <= tmp_8_reg_1059_pp0_iter8_reg;
                tmp_reg_1039 <= m_exp_fu_277_p2(8 downto 8);
                tmp_reg_1039_pp0_iter2_reg <= tmp_reg_1039;
                trunc_ln306_reg_1009 <= trunc_ln306_fu_283_p1;
                y_is_0_reg_1015 <= y_is_0_fu_287_p2;
                y_is_0_reg_1015_pp0_iter10_reg <= y_is_0_reg_1015_pp0_iter9_reg;
                y_is_0_reg_1015_pp0_iter2_reg <= y_is_0_reg_1015;
                y_is_0_reg_1015_pp0_iter3_reg <= y_is_0_reg_1015_pp0_iter2_reg;
                y_is_0_reg_1015_pp0_iter4_reg <= y_is_0_reg_1015_pp0_iter3_reg;
                y_is_0_reg_1015_pp0_iter5_reg <= y_is_0_reg_1015_pp0_iter4_reg;
                y_is_0_reg_1015_pp0_iter6_reg <= y_is_0_reg_1015_pp0_iter5_reg;
                y_is_0_reg_1015_pp0_iter7_reg <= y_is_0_reg_1015_pp0_iter6_reg;
                y_is_0_reg_1015_pp0_iter8_reg <= y_is_0_reg_1015_pp0_iter7_reg;
                y_is_0_reg_1015_pp0_iter9_reg <= y_is_0_reg_1015_pp0_iter8_reg;
                y_is_inf_reg_1020 <= y_is_inf_fu_297_p2;
                y_is_inf_reg_1020_pp0_iter10_reg <= y_is_inf_reg_1020_pp0_iter9_reg;
                y_is_inf_reg_1020_pp0_iter2_reg <= y_is_inf_reg_1020;
                y_is_inf_reg_1020_pp0_iter3_reg <= y_is_inf_reg_1020_pp0_iter2_reg;
                y_is_inf_reg_1020_pp0_iter4_reg <= y_is_inf_reg_1020_pp0_iter3_reg;
                y_is_inf_reg_1020_pp0_iter5_reg <= y_is_inf_reg_1020_pp0_iter4_reg;
                y_is_inf_reg_1020_pp0_iter6_reg <= y_is_inf_reg_1020_pp0_iter5_reg;
                y_is_inf_reg_1020_pp0_iter7_reg <= y_is_inf_reg_1020_pp0_iter6_reg;
                y_is_inf_reg_1020_pp0_iter8_reg <= y_is_inf_reg_1020_pp0_iter7_reg;
                y_is_inf_reg_1020_pp0_iter9_reg <= y_is_inf_reg_1020_pp0_iter8_reg;
            end if;
        end if;
    end process;
    UnifiedRetVal_fu_923_p11 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    UnifiedRetVal_fu_923_p12 <= (((or_ln378_reg_1027_pp0_iter10_reg & and_ln431_1_fu_849_p2) & and_ln628_1_fu_882_p2) & and_ln645_1_fu_906_p2);
    UnifiedRetVal_fu_923_p2 <= 
        ap_const_lv32_3F800000 when (y_is_0_reg_1015_pp0_iter10_reg(0) = '1') else 
        ap_const_lv32_7FFFFFFF;
    UnifiedRetVal_fu_923_p6 <= 
        ap_const_lv32_0 when (tmp_8_reg_1059_pp0_iter10_reg(0) = '1') else 
        ap_const_lv32_7F800000;
    UnifiedRetVal_fu_923_p8 <= zext_ln313_fu_830_p1;
    Z2_ind_fu_638_p4 <= sub_ln574_fu_611_p2(17 downto 13);
    add_ln160_fu_664_p2 <= std_logic_vector(unsigned(zext_ln160_fu_657_p1) + unsigned(zext_ln160_1_fu_660_p1));
    add_ln563_1_fu_567_p2 <= std_logic_vector(unsigned(trunc_ln_fu_542_p4) + unsigned(ap_const_lv10_1));
    add_ln616_fu_706_p2 <= std_logic_vector(unsigned(exp_Z1_reg_1132_pp0_iter9_reg) + unsigned(ap_const_lv27_4));
    and_ln431_1_fu_849_p2 <= (y_is_inf_reg_1020_pp0_iter10_reg and and_ln431_fu_843_p2);
    and_ln431_fu_843_p2 <= (xor_ln413_fu_731_p2 and xor_ln378_fu_838_p2);
    and_ln438_1_fu_870_p2 <= (xor_ln438_fu_864_p2 and xor_ln378_fu_838_p2);
    and_ln438_2_fu_876_p2 <= (or_ln431_fu_859_p2 and and_ln438_1_fu_870_p2);
    and_ln438_fu_736_p2 <= (y_is_inf_reg_1020_pp0_iter10_reg and es_sign_reg_973_pp0_iter10_reg);
    and_ln628_1_fu_882_p2 <= (or_ln628_fu_773_p2 and and_ln438_2_fu_876_p2);
    and_ln628_fu_753_p2 <= (icmp_ln628_reg_1090_pp0_iter10_reg and icmp_ln628_1_reg_1095_pp0_iter10_reg);
    and_ln645_1_fu_906_p2 <= (and_ln645_fu_900_p2 and and_ln438_2_fu_876_p2);
    and_ln645_fu_900_p2 <= (xor_ln628_fu_888_p2 and icmp_ln645_fu_894_p2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
    ap_return <= UnifiedRetVal_fu_923_p13;
    ashr_ln545_fu_374_p2 <= std_logic_vector(shift_right(signed(sext_ln539_1_fu_354_p1),to_integer(unsigned('0' & zext_ln545_fu_370_p1(31-1 downto 0)))));
    ashr_ln546_fu_513_p2 <= std_logic_vector(shift_right(signed(m_fix_l_reg_1069),to_integer(unsigned('0' & zext_ln546_fu_505_p1(31-1 downto 0)))));
    ashr_ln553_fu_429_p2 <= std_logic_vector(shift_right(signed(sext_ln539_1_fu_354_p1),to_integer(unsigned('0' & zext_ln553_fu_419_p1(31-1 downto 0)))));
    data_fu_212_p1 <= exp_int_reg;
    e_frac_1_fu_260_p2 <= std_logic_vector(unsigned(ap_const_lv25_0) - unsigned(zext_ln532_fu_256_p1));
    e_frac_2_fu_266_p3 <= 
        e_frac_1_fu_260_p2 when (es_sign_fu_216_p3(0) = '1') else 
        zext_ln532_fu_256_p1;
    e_frac_fu_248_p3 <= (ap_const_lv1_1 & es_sig_fu_232_p1);
    es_sig_fu_232_p1 <= data_fu_212_p1(23 - 1 downto 0);
    es_sign_fu_216_p3 <= data_fu_212_p1(31 downto 31);
    exp_Z1P_m_1_fu_670_p4 <= add_ln160_fu_664_p2(18 downto 1);
    exp_Z1_hi_fu_680_p4 <= pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_q0(26 downto 9);
    grp_fu_951_p1 <= ap_const_lv25_B8A(12 - 1 downto 0);
    grp_fu_962_p0 <= grp_fu_962_p00(18 - 1 downto 0);
    grp_fu_962_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1_hi_fu_680_p4),36));
    grp_fu_962_p1 <= grp_fu_962_p10(18 - 1 downto 0);
    grp_fu_962_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1P_m_1_fu_670_p4),36));
    grp_fu_962_p2 <= (add_ln616_fu_706_p2 & ap_const_lv17_0);
    icmp_ln18_1_fu_236_p2 <= "1" when (es_sig_fu_232_p1 = ap_const_lv23_0) else "0";
    icmp_ln18_2_fu_242_p2 <= "0" when (es_sig_fu_232_p1 = ap_const_lv23_0) else "1";
    icmp_ln18_fu_292_p2 <= "1" when (es_exp_reg_980 = ap_const_lv8_FF) else "0";
    icmp_ln563_fu_561_p2 <= "0" when (trunc_ln563_fu_558_p1 = ap_const_lv15_0) else "1";
    icmp_ln628_1_fu_525_p2 <= "0" when (sext_ln539_2_fu_502_p1 = m_fix_back_fu_518_p3) else "1";
    icmp_ln628_2_fu_767_p2 <= "1" when (signed(tmp_7_fu_757_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_ln628_fu_497_p2 <= "1" when (signed(m_exp_reg_1003) > signed(ap_const_lv9_0)) else "0";
    icmp_ln645_fu_894_p2 <= "1" when (signed(r_exp_2_fu_747_p3) > signed(ap_const_lv10_381)) else "0";
    m_diff_hi_fu_615_p4 <= sub_ln574_fu_611_p2(26 downto 18);
    m_diff_lo_fu_625_p1 <= sub_ln574_fu_611_p2(18 - 1 downto 0);
    m_exp_fu_277_p2 <= std_logic_vector(unsigned(zext_ln317_fu_274_p1) + unsigned(ap_const_lv9_181));
    m_fix_back_fu_518_p3 <= 
        shl_ln546_fu_508_p2 when (tmp_reg_1039_pp0_iter2_reg(0) = '1') else 
        ashr_ln546_fu_513_p2;
    m_fix_hi_fu_467_p4 <= select_ln553_2_fu_442_p3(65 downto 53);
    m_fix_l_fu_394_p3 <= 
        trunc_ln545_fu_386_p1 when (tmp_reg_1039(0) = '1') else 
        trunc_ln545_1_fu_390_p1;
    m_frac_l_fu_207_p1 <= ap_const_lv63_24D763776A(39 - 1 downto 0);
    or_ln378_fu_307_p2 <= (y_is_NaN_fu_302_p2 or y_is_0_fu_287_p2);
    or_ln431_fu_859_p2 <= (xor_ln431_fu_854_p2 or es_sign_reg_973_pp0_iter10_reg);
    or_ln628_fu_773_p2 <= (icmp_ln628_2_fu_767_p2 or and_ln628_fu_753_p2);
    out_exp_fu_816_p2 <= std_logic_vector(unsigned(trunc_ln657_fu_812_p1) + unsigned(ap_const_lv8_7F));
    out_sig_fu_804_p3 <= 
        tmp_3_fu_786_p4 when (tmp_6_fu_740_p3(0) = '1') else 
        tmp_4_fu_795_p4;
    pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_address0 <= zext_ln611_fu_629_p1(9 - 1 downto 0);

    pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_ce0_local_assign_proc : process(ap_block_pp0_stage0_11001)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
            pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_ce0_local <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_address0 <= zext_ln159_fu_648_p1(5 - 1 downto 0);

    pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_ce0_local_assign_proc : process(ap_block_pp0_stage0_11001)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
            pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_ce0_local <= ap_const_logic_1;
        else 
            pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    r_exp_1_fu_719_p2 <= std_logic_vector(signed(r_exp_reg_1105_pp0_iter9_reg) + signed(ap_const_lv10_3FF));
    r_exp_2_fu_747_p3 <= 
        r_exp_reg_1105_pp0_iter10_reg when (tmp_6_fu_740_p3(0) = '1') else 
        r_exp_1_reg_1152;
    r_exp_fu_581_p3 <= 
        select_ln563_fu_573_p3 when (tmp_5_fu_551_p3(0) = '1') else 
        trunc_ln_fu_542_p4;
    select_ln545_fu_360_p3 <= 
        sext_ln545_fu_357_p1 when (tmp_reg_1039(0) = '1') else 
        m_exp_reg_1003;
    select_ln553_1_fu_435_p3 <= 
        shl_ln553_fu_423_p2 when (tmp_1_reg_1053(0) = '1') else 
        ashr_ln553_fu_429_p2;
    select_ln553_2_fu_442_p3 <= 
        select_ln553_1_fu_435_p3 when (tmp_reg_1039(0) = '1') else 
        shl_ln552_fu_404_p2;
    select_ln553_fu_410_p3 <= 
        trunc_ln306_reg_1009 when (tmp_1_reg_1053(0) = '1') else 
        sub_ln545_reg_1047;
    select_ln563_fu_573_p3 <= 
        add_ln563_1_fu_567_p2 when (icmp_ln563_fu_561_p2(0) = '1') else 
        trunc_ln_fu_542_p4;
        sext_ln539_1_fu_354_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_frac_l_reg_1033),67));

        sext_ln539_2_fu_502_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_frac_l_reg_1033_pp0_iter2_reg),66));

        sext_ln545_1_fu_366_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln545_fu_360_p3),32));

        sext_ln545_fu_357_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln545_reg_1047),9));

        sext_ln553_fu_415_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln553_fu_410_p3),32));

    shl_ln545_fu_380_p2 <= std_logic_vector(shift_left(unsigned(sext_ln539_1_fu_354_p1),to_integer(unsigned('0' & zext_ln545_fu_370_p1(31-1 downto 0)))));
    shl_ln546_fu_508_p2 <= std_logic_vector(shift_left(unsigned(m_fix_l_reg_1069),to_integer(unsigned('0' & zext_ln546_fu_505_p1(31-1 downto 0)))));
    shl_ln552_fu_404_p2 <= std_logic_vector(shift_left(unsigned(sext_ln539_1_fu_354_p1),to_integer(unsigned('0' & zext_ln552_fu_401_p1(31-1 downto 0)))));
    shl_ln553_fu_423_p2 <= std_logic_vector(shift_left(unsigned(sext_ln539_1_fu_354_p1),to_integer(unsigned('0' & zext_ln553_fu_419_p1(31-1 downto 0)))));
    shl_ln_fu_531_p3 <= (tmp_2_reg_1080_pp0_iter3_reg & ap_const_lv15_4000);
    sub_ln545_fu_333_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(es_exp_reg_980));
    sub_ln574_fu_611_p2 <= std_logic_vector(unsigned(m_fix_reg_1075_pp0_iter6_reg) - unsigned(m_fix_a_reg_1112));
    t_fu_822_p3 <= (out_exp_fu_816_p2 & out_sig_fu_804_p3);
    tmp_3_fu_786_p4 <= grp_fu_962_p3(42 downto 20);
    tmp_4_fu_795_p4 <= grp_fu_962_p3(41 downto 19);
    tmp_5_fu_551_p3 <= grp_fu_951_p3(24 downto 24);
    tmp_6_fu_740_p3 <= grp_fu_962_p3(43 downto 43);
    tmp_7_fu_757_p4 <= r_exp_2_fu_747_p3(9 downto 7);
    trunc_ln306_fu_283_p1 <= m_exp_fu_277_p2(8 - 1 downto 0);
    trunc_ln545_1_fu_390_p1 <= shl_ln545_fu_380_p2(66 - 1 downto 0);
    trunc_ln545_fu_386_p1 <= ashr_ln545_fu_374_p2(66 - 1 downto 0);
    trunc_ln553_fu_449_p1 <= select_ln553_2_fu_442_p3(66 - 1 downto 0);
    trunc_ln563_fu_558_p1 <= grp_fu_951_p3(15 - 1 downto 0);
    trunc_ln657_fu_812_p1 <= r_exp_2_fu_747_p3(8 - 1 downto 0);
    trunc_ln_fu_542_p4 <= grp_fu_951_p3(24 downto 15);
    xor_ln378_fu_838_p2 <= (or_ln378_reg_1027_pp0_iter10_reg xor ap_const_lv1_1);
    xor_ln413_fu_731_p2 <= (es_sign_reg_973_pp0_iter10_reg xor ap_const_lv1_1);
    xor_ln431_fu_854_p2 <= (y_is_inf_reg_1020_pp0_iter10_reg xor ap_const_lv1_1);
    xor_ln438_fu_864_p2 <= (ap_const_lv1_1 xor and_ln438_fu_736_p2);
    xor_ln628_fu_888_p2 <= (or_ln628_fu_773_p2 xor ap_const_lv1_1);
    y_is_0_fu_287_p2 <= "1" when (es_exp_reg_980 = ap_const_lv8_0) else "0";
    y_is_NaN_fu_302_p2 <= (icmp_ln18_fu_292_p2 and icmp_ln18_2_reg_993);
    y_is_inf_fu_297_p2 <= (icmp_ln18_fu_292_p2 and icmp_ln18_1_reg_988);
    zext_ln159_fu_648_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z2_ind_fu_638_p4),64));
    zext_ln160_1_fu_660_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_q0),19));
    zext_ln160_fu_657_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_diff_lo_reg_1117),19));
    zext_ln313_fu_830_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_fu_822_p3),32));
    zext_ln317_fu_274_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(es_exp_reg_980),9));
    zext_ln532_fu_256_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(e_frac_fu_248_p3),25));
    zext_ln545_fu_370_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln545_1_fu_366_p1),67));
    zext_ln546_fu_505_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln545_1_reg_1064),66));
    zext_ln549_fu_453_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln553_fu_449_p1),67));
    zext_ln552_fu_401_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln306_reg_1009),67));
    zext_ln553_fu_419_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln553_fu_415_p1),67));
    zext_ln611_fu_629_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_diff_hi_fu_615_p4),64));
end behav;
