-- ==============================================================
-- Generated by Vitis HLS v2025.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel_mhsa_Loop_CACHE_STORE_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (63 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (63 downto 0);
    value_cache_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    value_cache_empty_n : IN STD_LOGIC;
    value_cache_read : OUT STD_LOGIC;
    value_cache_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    value_cache_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    key_cache_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    key_cache_empty_n : IN STD_LOGIC;
    key_cache_read : OUT STD_LOGIC;
    key_cache_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    key_cache_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem2_0_AWREADY : IN STD_LOGIC;
    m_axi_gmem2_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem2_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_WVALID : OUT STD_LOGIC;
    m_axi_gmem2_0_WREADY : IN STD_LOGIC;
    m_axi_gmem2_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_0_WLAST : OUT STD_LOGIC;
    m_axi_gmem2_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem2_0_ARREADY : IN STD_LOGIC;
    m_axi_gmem2_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem2_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_RVALID : IN STD_LOGIC;
    m_axi_gmem2_0_RREADY : OUT STD_LOGIC;
    m_axi_gmem2_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_0_RLAST : IN STD_LOGIC;
    m_axi_gmem2_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
    m_axi_gmem2_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_0_BVALID : IN STD_LOGIC;
    m_axi_gmem2_0_BREADY : OUT STD_LOGIC;
    m_axi_gmem2_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem3_0_AWREADY : IN STD_LOGIC;
    m_axi_gmem3_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem3_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_0_WVALID : OUT STD_LOGIC;
    m_axi_gmem3_0_WREADY : IN STD_LOGIC;
    m_axi_gmem3_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_0_WLAST : OUT STD_LOGIC;
    m_axi_gmem3_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem3_0_ARREADY : IN STD_LOGIC;
    m_axi_gmem3_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem3_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_0_RVALID : IN STD_LOGIC;
    m_axi_gmem3_0_RREADY : OUT STD_LOGIC;
    m_axi_gmem3_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_0_RLAST : IN STD_LOGIC;
    m_axi_gmem3_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_0_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
    m_axi_gmem3_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_0_BVALID : IN STD_LOGIC;
    m_axi_gmem3_0_BREADY : OUT STD_LOGIC;
    m_axi_gmem3_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    out_k_rope_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_k_rope_0_ce0 : OUT STD_LOGIC;
    out_k_rope_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_k_rope_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_k_rope_1_ce0 : OUT STD_LOGIC;
    out_k_rope_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_k_rope_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_k_rope_2_ce0 : OUT STD_LOGIC;
    out_k_rope_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_k_rope_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_k_rope_3_ce0 : OUT STD_LOGIC;
    out_k_rope_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_k_rope_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_k_rope_4_ce0 : OUT STD_LOGIC;
    out_k_rope_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_k_rope_5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_k_rope_5_ce0 : OUT STD_LOGIC;
    out_k_rope_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_k_rope_6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_k_rope_6_ce0 : OUT STD_LOGIC;
    out_k_rope_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_k_rope_7_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_k_rope_7_ce0 : OUT STD_LOGIC;
    out_k_rope_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_v_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_v_0_ce0 : OUT STD_LOGIC;
    out_v_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_v_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_v_1_ce0 : OUT STD_LOGIC;
    out_v_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_v_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_v_2_ce0 : OUT STD_LOGIC;
    out_v_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_v_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_v_3_ce0 : OUT STD_LOGIC;
    out_v_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_v_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_v_4_ce0 : OUT STD_LOGIC;
    out_v_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_v_5_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_v_5_ce0 : OUT STD_LOGIC;
    out_v_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_v_6_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_v_6_ce0 : OUT STD_LOGIC;
    out_v_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_v_7_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_v_7_ce0 : OUT STD_LOGIC;
    out_v_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_v_8_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_v_8_ce0 : OUT STD_LOGIC;
    out_v_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_v_9_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_v_9_ce0 : OUT STD_LOGIC;
    out_v_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_v_10_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_v_10_ce0 : OUT STD_LOGIC;
    out_v_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_v_11_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_v_11_ce0 : OUT STD_LOGIC;
    out_v_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_v_12_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_v_12_ce0 : OUT STD_LOGIC;
    out_v_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_v_13_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_v_13_ce0 : OUT STD_LOGIC;
    out_v_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_v_14_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_v_14_ce0 : OUT STD_LOGIC;
    out_v_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_v_15_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_v_15_ce0 : OUT STD_LOGIC;
    out_v_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    key_cache_c_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    key_cache_c_full_n : IN STD_LOGIC;
    key_cache_c_write : OUT STD_LOGIC;
    key_cache_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    key_cache_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    value_cache_c_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    value_cache_c_full_n : IN STD_LOGIC;
    value_cache_c_write : OUT STD_LOGIC;
    value_cache_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    value_cache_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of kernel_mhsa_Loop_CACHE_STORE_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv64_300 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001100000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal value_cache_blk_n : STD_LOGIC;
    signal key_cache_blk_n : STD_LOGIC;
    signal gmem2_blk_n_AW : STD_LOGIC;
    signal gmem2_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal gmem3_blk_n_AW : STD_LOGIC;
    signal gmem3_blk_n_B : STD_LOGIC;
    signal key_cache_c_blk_n : STD_LOGIC;
    signal value_cache_c_blk_n : STD_LOGIC;
    signal trunc_ln_fu_254_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln_reg_332 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_state1_io : BOOLEAN;
    signal trunc_ln55_1_fu_268_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln55_1_reg_337 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast_reg_342 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast1_reg_347 : STD_LOGIC_VECTOR (61 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_start : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_done : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_idle : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_ready : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWVALID : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WVALID : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WLAST : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARVALID : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_RREADY : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_BREADY : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWVALID : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WVALID : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WLAST : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARVALID : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_RREADY : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_BREADY : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_0_ce0 : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_1_ce0 : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_2_ce0 : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_3_ce0 : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_4_ce0 : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_5_ce0 : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_6_ce0 : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_7_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_7_ce0 : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_0_ce0 : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_1_ce0 : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_2_ce0 : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_3_ce0 : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_4_ce0 : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_5_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_5_ce0 : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_6_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_6_ce0 : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_7_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_7_ce0 : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_8_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_8_ce0 : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_9_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_9_ce0 : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_10_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_10_ce0 : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_11_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_11_ce0 : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_12_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_12_ce0 : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_13_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_13_ce0 : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_14_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_14_ce0 : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_15_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_15_ce0 : STD_LOGIC;
    signal grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sext_ln55_fu_264_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln55_1_fu_278_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state14 : BOOLEAN;
    signal value_cache_read_local : STD_LOGIC;
    signal value_cache_c_write_local : STD_LOGIC;
    signal key_cache_read_local : STD_LOGIC;
    signal key_cache_c_write_local : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component kernel_mhsa_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem2_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem2_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem2_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem2_0_WREADY : IN STD_LOGIC;
        m_axi_gmem2_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem2_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem2_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem2_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_0_RVALID : IN STD_LOGIC;
        m_axi_gmem2_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem2_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_0_RLAST : IN STD_LOGIC;
        m_axi_gmem2_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_0_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_gmem2_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_0_BVALID : IN STD_LOGIC;
        m_axi_gmem2_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem2_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem3_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem3_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem3_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem3_0_WREADY : IN STD_LOGIC;
        m_axi_gmem3_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem3_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem3_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem3_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem3_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_0_RVALID : IN STD_LOGIC;
        m_axi_gmem3_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem3_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_0_RLAST : IN STD_LOGIC;
        m_axi_gmem3_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_0_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_gmem3_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_0_BVALID : IN STD_LOGIC;
        m_axi_gmem3_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem3_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln55_1 : IN STD_LOGIC_VECTOR (61 downto 0);
        sext_ln55 : IN STD_LOGIC_VECTOR (61 downto 0);
        p_cast_cast : IN STD_LOGIC_VECTOR (61 downto 0);
        p_cast1_cast : IN STD_LOGIC_VECTOR (61 downto 0);
        out_k_rope_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_k_rope_0_ce0 : OUT STD_LOGIC;
        out_k_rope_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_k_rope_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_k_rope_1_ce0 : OUT STD_LOGIC;
        out_k_rope_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_k_rope_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_k_rope_2_ce0 : OUT STD_LOGIC;
        out_k_rope_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_k_rope_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_k_rope_3_ce0 : OUT STD_LOGIC;
        out_k_rope_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_k_rope_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_k_rope_4_ce0 : OUT STD_LOGIC;
        out_k_rope_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_k_rope_5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_k_rope_5_ce0 : OUT STD_LOGIC;
        out_k_rope_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_k_rope_6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_k_rope_6_ce0 : OUT STD_LOGIC;
        out_k_rope_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_k_rope_7_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        out_k_rope_7_ce0 : OUT STD_LOGIC;
        out_k_rope_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_v_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_v_0_ce0 : OUT STD_LOGIC;
        out_v_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_v_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_v_1_ce0 : OUT STD_LOGIC;
        out_v_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_v_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_v_2_ce0 : OUT STD_LOGIC;
        out_v_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_v_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_v_3_ce0 : OUT STD_LOGIC;
        out_v_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_v_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_v_4_ce0 : OUT STD_LOGIC;
        out_v_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_v_5_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_v_5_ce0 : OUT STD_LOGIC;
        out_v_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_v_6_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_v_6_ce0 : OUT STD_LOGIC;
        out_v_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_v_7_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_v_7_ce0 : OUT STD_LOGIC;
        out_v_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_v_8_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_v_8_ce0 : OUT STD_LOGIC;
        out_v_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_v_9_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_v_9_ce0 : OUT STD_LOGIC;
        out_v_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_v_10_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_v_10_ce0 : OUT STD_LOGIC;
        out_v_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_v_11_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_v_11_ce0 : OUT STD_LOGIC;
        out_v_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_v_12_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_v_12_ce0 : OUT STD_LOGIC;
        out_v_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_v_13_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_v_13_ce0 : OUT STD_LOGIC;
        out_v_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_v_14_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_v_14_ce0 : OUT STD_LOGIC;
        out_v_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_v_15_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_v_15_ce0 : OUT STD_LOGIC;
        out_v_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182 : component kernel_mhsa_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_start,
        ap_done => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_done,
        ap_idle => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_idle,
        ap_ready => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_ready,
        m_axi_gmem2_0_AWVALID => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWVALID,
        m_axi_gmem2_0_AWREADY => m_axi_gmem2_0_AWREADY,
        m_axi_gmem2_0_AWADDR => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWADDR,
        m_axi_gmem2_0_AWID => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWID,
        m_axi_gmem2_0_AWLEN => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWLEN,
        m_axi_gmem2_0_AWSIZE => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWSIZE,
        m_axi_gmem2_0_AWBURST => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWBURST,
        m_axi_gmem2_0_AWLOCK => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWLOCK,
        m_axi_gmem2_0_AWCACHE => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWCACHE,
        m_axi_gmem2_0_AWPROT => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWPROT,
        m_axi_gmem2_0_AWQOS => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWQOS,
        m_axi_gmem2_0_AWREGION => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWREGION,
        m_axi_gmem2_0_AWUSER => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWUSER,
        m_axi_gmem2_0_WVALID => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WVALID,
        m_axi_gmem2_0_WREADY => m_axi_gmem2_0_WREADY,
        m_axi_gmem2_0_WDATA => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WDATA,
        m_axi_gmem2_0_WSTRB => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WSTRB,
        m_axi_gmem2_0_WLAST => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WLAST,
        m_axi_gmem2_0_WID => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WID,
        m_axi_gmem2_0_WUSER => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WUSER,
        m_axi_gmem2_0_ARVALID => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARVALID,
        m_axi_gmem2_0_ARREADY => ap_const_logic_0,
        m_axi_gmem2_0_ARADDR => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARADDR,
        m_axi_gmem2_0_ARID => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARID,
        m_axi_gmem2_0_ARLEN => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARLEN,
        m_axi_gmem2_0_ARSIZE => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARSIZE,
        m_axi_gmem2_0_ARBURST => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARBURST,
        m_axi_gmem2_0_ARLOCK => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARLOCK,
        m_axi_gmem2_0_ARCACHE => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARCACHE,
        m_axi_gmem2_0_ARPROT => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARPROT,
        m_axi_gmem2_0_ARQOS => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARQOS,
        m_axi_gmem2_0_ARREGION => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARREGION,
        m_axi_gmem2_0_ARUSER => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARUSER,
        m_axi_gmem2_0_RVALID => ap_const_logic_0,
        m_axi_gmem2_0_RREADY => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_RREADY,
        m_axi_gmem2_0_RDATA => ap_const_lv32_0,
        m_axi_gmem2_0_RLAST => ap_const_logic_0,
        m_axi_gmem2_0_RID => ap_const_lv1_0,
        m_axi_gmem2_0_RFIFONUM => ap_const_lv13_0,
        m_axi_gmem2_0_RUSER => ap_const_lv1_0,
        m_axi_gmem2_0_RRESP => ap_const_lv2_0,
        m_axi_gmem2_0_BVALID => m_axi_gmem2_0_BVALID,
        m_axi_gmem2_0_BREADY => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_BREADY,
        m_axi_gmem2_0_BRESP => m_axi_gmem2_0_BRESP,
        m_axi_gmem2_0_BID => m_axi_gmem2_0_BID,
        m_axi_gmem2_0_BUSER => m_axi_gmem2_0_BUSER,
        m_axi_gmem3_0_AWVALID => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWVALID,
        m_axi_gmem3_0_AWREADY => m_axi_gmem3_0_AWREADY,
        m_axi_gmem3_0_AWADDR => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWADDR,
        m_axi_gmem3_0_AWID => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWID,
        m_axi_gmem3_0_AWLEN => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWLEN,
        m_axi_gmem3_0_AWSIZE => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWSIZE,
        m_axi_gmem3_0_AWBURST => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWBURST,
        m_axi_gmem3_0_AWLOCK => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWLOCK,
        m_axi_gmem3_0_AWCACHE => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWCACHE,
        m_axi_gmem3_0_AWPROT => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWPROT,
        m_axi_gmem3_0_AWQOS => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWQOS,
        m_axi_gmem3_0_AWREGION => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWREGION,
        m_axi_gmem3_0_AWUSER => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWUSER,
        m_axi_gmem3_0_WVALID => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WVALID,
        m_axi_gmem3_0_WREADY => m_axi_gmem3_0_WREADY,
        m_axi_gmem3_0_WDATA => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WDATA,
        m_axi_gmem3_0_WSTRB => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WSTRB,
        m_axi_gmem3_0_WLAST => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WLAST,
        m_axi_gmem3_0_WID => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WID,
        m_axi_gmem3_0_WUSER => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WUSER,
        m_axi_gmem3_0_ARVALID => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARVALID,
        m_axi_gmem3_0_ARREADY => ap_const_logic_0,
        m_axi_gmem3_0_ARADDR => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARADDR,
        m_axi_gmem3_0_ARID => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARID,
        m_axi_gmem3_0_ARLEN => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARLEN,
        m_axi_gmem3_0_ARSIZE => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARSIZE,
        m_axi_gmem3_0_ARBURST => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARBURST,
        m_axi_gmem3_0_ARLOCK => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARLOCK,
        m_axi_gmem3_0_ARCACHE => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARCACHE,
        m_axi_gmem3_0_ARPROT => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARPROT,
        m_axi_gmem3_0_ARQOS => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARQOS,
        m_axi_gmem3_0_ARREGION => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARREGION,
        m_axi_gmem3_0_ARUSER => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARUSER,
        m_axi_gmem3_0_RVALID => ap_const_logic_0,
        m_axi_gmem3_0_RREADY => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_RREADY,
        m_axi_gmem3_0_RDATA => ap_const_lv32_0,
        m_axi_gmem3_0_RLAST => ap_const_logic_0,
        m_axi_gmem3_0_RID => ap_const_lv1_0,
        m_axi_gmem3_0_RFIFONUM => ap_const_lv13_0,
        m_axi_gmem3_0_RUSER => ap_const_lv1_0,
        m_axi_gmem3_0_RRESP => ap_const_lv2_0,
        m_axi_gmem3_0_BVALID => m_axi_gmem3_0_BVALID,
        m_axi_gmem3_0_BREADY => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_BREADY,
        m_axi_gmem3_0_BRESP => m_axi_gmem3_0_BRESP,
        m_axi_gmem3_0_BID => m_axi_gmem3_0_BID,
        m_axi_gmem3_0_BUSER => m_axi_gmem3_0_BUSER,
        sext_ln55_1 => trunc_ln55_1_reg_337,
        sext_ln55 => trunc_ln_reg_332,
        p_cast_cast => p_cast_reg_342,
        p_cast1_cast => p_cast1_reg_347,
        out_k_rope_0_address0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_0_address0,
        out_k_rope_0_ce0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_0_ce0,
        out_k_rope_0_q0 => out_k_rope_0_q0,
        out_k_rope_1_address0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_1_address0,
        out_k_rope_1_ce0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_1_ce0,
        out_k_rope_1_q0 => out_k_rope_1_q0,
        out_k_rope_2_address0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_2_address0,
        out_k_rope_2_ce0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_2_ce0,
        out_k_rope_2_q0 => out_k_rope_2_q0,
        out_k_rope_3_address0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_3_address0,
        out_k_rope_3_ce0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_3_ce0,
        out_k_rope_3_q0 => out_k_rope_3_q0,
        out_k_rope_4_address0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_4_address0,
        out_k_rope_4_ce0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_4_ce0,
        out_k_rope_4_q0 => out_k_rope_4_q0,
        out_k_rope_5_address0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_5_address0,
        out_k_rope_5_ce0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_5_ce0,
        out_k_rope_5_q0 => out_k_rope_5_q0,
        out_k_rope_6_address0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_6_address0,
        out_k_rope_6_ce0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_6_ce0,
        out_k_rope_6_q0 => out_k_rope_6_q0,
        out_k_rope_7_address0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_7_address0,
        out_k_rope_7_ce0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_7_ce0,
        out_k_rope_7_q0 => out_k_rope_7_q0,
        out_v_0_address0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_0_address0,
        out_v_0_ce0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_0_ce0,
        out_v_0_q0 => out_v_0_q0,
        out_v_1_address0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_1_address0,
        out_v_1_ce0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_1_ce0,
        out_v_1_q0 => out_v_1_q0,
        out_v_2_address0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_2_address0,
        out_v_2_ce0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_2_ce0,
        out_v_2_q0 => out_v_2_q0,
        out_v_3_address0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_3_address0,
        out_v_3_ce0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_3_ce0,
        out_v_3_q0 => out_v_3_q0,
        out_v_4_address0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_4_address0,
        out_v_4_ce0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_4_ce0,
        out_v_4_q0 => out_v_4_q0,
        out_v_5_address0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_5_address0,
        out_v_5_ce0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_5_ce0,
        out_v_5_q0 => out_v_5_q0,
        out_v_6_address0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_6_address0,
        out_v_6_ce0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_6_ce0,
        out_v_6_q0 => out_v_6_q0,
        out_v_7_address0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_7_address0,
        out_v_7_ce0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_7_ce0,
        out_v_7_q0 => out_v_7_q0,
        out_v_8_address0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_8_address0,
        out_v_8_ce0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_8_ce0,
        out_v_8_q0 => out_v_8_q0,
        out_v_9_address0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_9_address0,
        out_v_9_ce0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_9_ce0,
        out_v_9_q0 => out_v_9_q0,
        out_v_10_address0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_10_address0,
        out_v_10_ce0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_10_ce0,
        out_v_10_q0 => out_v_10_q0,
        out_v_11_address0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_11_address0,
        out_v_11_ce0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_11_ce0,
        out_v_11_q0 => out_v_11_q0,
        out_v_12_address0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_12_address0,
        out_v_12_ce0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_12_ce0,
        out_v_12_q0 => out_v_12_q0,
        out_v_13_address0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_13_address0,
        out_v_13_ce0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_13_ce0,
        out_v_13_q0 => out_v_13_q0,
        out_v_14_address0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_14_address0,
        out_v_14_ce0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_14_ce0,
        out_v_14_q0 => out_v_14_q0,
        out_v_15_address0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_15_address0,
        out_v_15_ce0 => grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_15_ce0,
        out_v_15_q0 => out_v_15_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_state14) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_ready = ap_const_logic_1)) then 
                    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state1_io) or (ap_const_boolean_1 = ap_block_state1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                p_cast1_reg_347 <= key_cache_dout(63 downto 2);
                p_cast_reg_342 <= value_cache_dout(63 downto 2);
                trunc_ln55_1_reg_337 <= p_read1(63 downto 2);
                trunc_ln_reg_332 <= p_read(63 downto 2);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state14, ap_block_state1, ap_block_state1_io, grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_done, ap_CS_fsm_state3, ap_block_state14)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_const_boolean_1 = ap_block_state1_io) or (ap_const_boolean_1 = ap_block_state1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((ap_const_boolean_0 = ap_block_state14) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state14_blk_assign_proc : process(ap_block_state14)
    begin
        if ((ap_const_boolean_1 = ap_block_state14)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1, ap_block_state1_io)
    begin
        if (((ap_const_boolean_1 = ap_block_state1_io) or (ap_const_boolean_1 = ap_block_state1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_done)
    begin
        if ((grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, value_cache_empty_n, key_cache_empty_n, key_cache_c_full_n, value_cache_c_full_n)
    begin
                ap_block_state1 <= ((key_cache_empty_n = ap_const_logic_0) or (value_cache_empty_n = ap_const_logic_0) or (value_cache_c_full_n = ap_const_logic_0) or (key_cache_c_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state14_assign_proc : process(m_axi_gmem2_0_BVALID, m_axi_gmem3_0_BVALID)
    begin
                ap_block_state14 <= ((m_axi_gmem2_0_BVALID = ap_const_logic_0) or (m_axi_gmem3_0_BVALID = ap_const_logic_0));
    end process;


    ap_block_state1_io_assign_proc : process(m_axi_gmem2_0_AWREADY, m_axi_gmem3_0_AWREADY)
    begin
                ap_block_state1_io <= ((m_axi_gmem2_0_AWREADY = ap_const_logic_0) or (m_axi_gmem3_0_AWREADY = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state14, ap_block_state14)
    begin
        if (((ap_const_boolean_0 = ap_block_state14) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state14, ap_block_state14)
    begin
        if (((ap_const_boolean_0 = ap_block_state14) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    gmem2_blk_n_AW_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, m_axi_gmem2_0_AWREADY)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem2_blk_n_AW <= m_axi_gmem2_0_AWREADY;
        else 
            gmem2_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem2_blk_n_B_assign_proc : process(m_axi_gmem2_0_BVALID, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            gmem2_blk_n_B <= m_axi_gmem2_0_BVALID;
        else 
            gmem2_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem3_blk_n_AW_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, m_axi_gmem3_0_AWREADY)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem3_blk_n_AW <= m_axi_gmem3_0_AWREADY;
        else 
            gmem3_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem3_blk_n_B_assign_proc : process(m_axi_gmem3_0_BVALID, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            gmem3_blk_n_B <= m_axi_gmem3_0_BVALID;
        else 
            gmem3_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;

    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_start <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_start_reg;

    key_cache_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, key_cache_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            key_cache_blk_n <= key_cache_empty_n;
        else 
            key_cache_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    key_cache_c_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, key_cache_c_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            key_cache_c_blk_n <= key_cache_c_full_n;
        else 
            key_cache_c_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    key_cache_c_din <= key_cache_dout;
    key_cache_c_write <= key_cache_c_write_local;

    key_cache_c_write_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1, ap_block_state1_io)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state1_io) or (ap_const_boolean_1 = ap_block_state1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            key_cache_c_write_local <= ap_const_logic_1;
        else 
            key_cache_c_write_local <= ap_const_logic_0;
        end if; 
    end process;

    key_cache_read <= key_cache_read_local;

    key_cache_read_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1, ap_block_state1_io)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state1_io) or (ap_const_boolean_1 = ap_block_state1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            key_cache_read_local <= ap_const_logic_1;
        else 
            key_cache_read_local <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem2_0_ARADDR <= ap_const_lv64_0;
    m_axi_gmem2_0_ARBURST <= ap_const_lv2_0;
    m_axi_gmem2_0_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem2_0_ARID <= ap_const_lv1_0;
    m_axi_gmem2_0_ARLEN <= ap_const_lv32_0;
    m_axi_gmem2_0_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem2_0_ARPROT <= ap_const_lv3_0;
    m_axi_gmem2_0_ARQOS <= ap_const_lv4_0;
    m_axi_gmem2_0_ARREGION <= ap_const_lv4_0;
    m_axi_gmem2_0_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem2_0_ARUSER <= ap_const_lv1_0;
    m_axi_gmem2_0_ARVALID <= ap_const_logic_0;

    m_axi_gmem2_0_AWADDR_assign_proc : process(ap_CS_fsm_state1, ap_block_state1, ap_block_state1_io, grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWADDR, ap_CS_fsm_state2, ap_CS_fsm_state3, sext_ln55_fu_264_p1)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state1_io) or (ap_const_boolean_1 = ap_block_state1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_gmem2_0_AWADDR <= sext_ln55_fu_264_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem2_0_AWADDR <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWADDR;
        else 
            m_axi_gmem2_0_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem2_0_AWBURST_assign_proc : process(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWBURST, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem2_0_AWBURST <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWBURST;
        else 
            m_axi_gmem2_0_AWBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem2_0_AWCACHE_assign_proc : process(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWCACHE, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem2_0_AWCACHE <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWCACHE;
        else 
            m_axi_gmem2_0_AWCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem2_0_AWID_assign_proc : process(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWID, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem2_0_AWID <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWID;
        else 
            m_axi_gmem2_0_AWID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem2_0_AWLEN_assign_proc : process(ap_CS_fsm_state1, ap_block_state1, ap_block_state1_io, grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWLEN, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state1_io) or (ap_const_boolean_1 = ap_block_state1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_gmem2_0_AWLEN <= ap_const_lv64_300(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem2_0_AWLEN <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWLEN;
        else 
            m_axi_gmem2_0_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem2_0_AWLOCK_assign_proc : process(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWLOCK, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem2_0_AWLOCK <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWLOCK;
        else 
            m_axi_gmem2_0_AWLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem2_0_AWPROT_assign_proc : process(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWPROT, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem2_0_AWPROT <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWPROT;
        else 
            m_axi_gmem2_0_AWPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem2_0_AWQOS_assign_proc : process(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWQOS, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem2_0_AWQOS <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWQOS;
        else 
            m_axi_gmem2_0_AWQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem2_0_AWREGION_assign_proc : process(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWREGION, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem2_0_AWREGION <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWREGION;
        else 
            m_axi_gmem2_0_AWREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem2_0_AWSIZE_assign_proc : process(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWSIZE, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem2_0_AWSIZE <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWSIZE;
        else 
            m_axi_gmem2_0_AWSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem2_0_AWUSER_assign_proc : process(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWUSER, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem2_0_AWUSER <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWUSER;
        else 
            m_axi_gmem2_0_AWUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem2_0_AWVALID_assign_proc : process(ap_CS_fsm_state1, ap_block_state1, ap_block_state1_io, grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWVALID, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state1_io) or (ap_const_boolean_1 = ap_block_state1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_gmem2_0_AWVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem2_0_AWVALID <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWVALID;
        else 
            m_axi_gmem2_0_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem2_0_BREADY_assign_proc : process(ap_CS_fsm_state14, grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_BREADY, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_block_state14)
    begin
        if (((ap_const_boolean_0 = ap_block_state14) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_gmem2_0_BREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem2_0_BREADY <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_BREADY;
        else 
            m_axi_gmem2_0_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem2_0_RREADY <= ap_const_logic_0;
    m_axi_gmem2_0_WDATA <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WDATA;
    m_axi_gmem2_0_WID <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WID;
    m_axi_gmem2_0_WLAST <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WLAST;
    m_axi_gmem2_0_WSTRB <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WSTRB;
    m_axi_gmem2_0_WUSER <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WUSER;

    m_axi_gmem2_0_WVALID_assign_proc : process(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WVALID, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem2_0_WVALID <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WVALID;
        else 
            m_axi_gmem2_0_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem3_0_ARADDR <= ap_const_lv64_0;
    m_axi_gmem3_0_ARBURST <= ap_const_lv2_0;
    m_axi_gmem3_0_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem3_0_ARID <= ap_const_lv1_0;
    m_axi_gmem3_0_ARLEN <= ap_const_lv32_0;
    m_axi_gmem3_0_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem3_0_ARPROT <= ap_const_lv3_0;
    m_axi_gmem3_0_ARQOS <= ap_const_lv4_0;
    m_axi_gmem3_0_ARREGION <= ap_const_lv4_0;
    m_axi_gmem3_0_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem3_0_ARUSER <= ap_const_lv1_0;
    m_axi_gmem3_0_ARVALID <= ap_const_logic_0;

    m_axi_gmem3_0_AWADDR_assign_proc : process(ap_CS_fsm_state1, ap_block_state1, ap_block_state1_io, grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWADDR, ap_CS_fsm_state2, ap_CS_fsm_state3, sext_ln55_1_fu_278_p1)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state1_io) or (ap_const_boolean_1 = ap_block_state1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_gmem3_0_AWADDR <= sext_ln55_1_fu_278_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem3_0_AWADDR <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWADDR;
        else 
            m_axi_gmem3_0_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem3_0_AWBURST_assign_proc : process(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWBURST, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem3_0_AWBURST <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWBURST;
        else 
            m_axi_gmem3_0_AWBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem3_0_AWCACHE_assign_proc : process(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWCACHE, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem3_0_AWCACHE <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWCACHE;
        else 
            m_axi_gmem3_0_AWCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem3_0_AWID_assign_proc : process(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWID, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem3_0_AWID <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWID;
        else 
            m_axi_gmem3_0_AWID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem3_0_AWLEN_assign_proc : process(ap_CS_fsm_state1, ap_block_state1, ap_block_state1_io, grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWLEN, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state1_io) or (ap_const_boolean_1 = ap_block_state1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_gmem3_0_AWLEN <= ap_const_lv64_300(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem3_0_AWLEN <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWLEN;
        else 
            m_axi_gmem3_0_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem3_0_AWLOCK_assign_proc : process(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWLOCK, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem3_0_AWLOCK <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWLOCK;
        else 
            m_axi_gmem3_0_AWLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem3_0_AWPROT_assign_proc : process(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWPROT, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem3_0_AWPROT <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWPROT;
        else 
            m_axi_gmem3_0_AWPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem3_0_AWQOS_assign_proc : process(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWQOS, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem3_0_AWQOS <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWQOS;
        else 
            m_axi_gmem3_0_AWQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem3_0_AWREGION_assign_proc : process(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWREGION, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem3_0_AWREGION <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWREGION;
        else 
            m_axi_gmem3_0_AWREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem3_0_AWSIZE_assign_proc : process(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWSIZE, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem3_0_AWSIZE <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWSIZE;
        else 
            m_axi_gmem3_0_AWSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem3_0_AWUSER_assign_proc : process(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWUSER, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem3_0_AWUSER <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWUSER;
        else 
            m_axi_gmem3_0_AWUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem3_0_AWVALID_assign_proc : process(ap_CS_fsm_state1, ap_block_state1, ap_block_state1_io, grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWVALID, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state1_io) or (ap_const_boolean_1 = ap_block_state1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_gmem3_0_AWVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem3_0_AWVALID <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWVALID;
        else 
            m_axi_gmem3_0_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem3_0_BREADY_assign_proc : process(ap_CS_fsm_state14, grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_BREADY, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_block_state14)
    begin
        if (((ap_const_boolean_0 = ap_block_state14) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_gmem3_0_BREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem3_0_BREADY <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_BREADY;
        else 
            m_axi_gmem3_0_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem3_0_RREADY <= ap_const_logic_0;
    m_axi_gmem3_0_WDATA <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WDATA;
    m_axi_gmem3_0_WID <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WID;
    m_axi_gmem3_0_WLAST <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WLAST;
    m_axi_gmem3_0_WSTRB <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WSTRB;
    m_axi_gmem3_0_WUSER <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WUSER;

    m_axi_gmem3_0_WVALID_assign_proc : process(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WVALID, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem3_0_WVALID <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WVALID;
        else 
            m_axi_gmem3_0_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    out_k_rope_0_address0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_0_address0;
    out_k_rope_0_ce0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_0_ce0;
    out_k_rope_1_address0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_1_address0;
    out_k_rope_1_ce0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_1_ce0;
    out_k_rope_2_address0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_2_address0;
    out_k_rope_2_ce0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_2_ce0;
    out_k_rope_3_address0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_3_address0;
    out_k_rope_3_ce0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_3_ce0;
    out_k_rope_4_address0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_4_address0;
    out_k_rope_4_ce0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_4_ce0;
    out_k_rope_5_address0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_5_address0;
    out_k_rope_5_ce0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_5_ce0;
    out_k_rope_6_address0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_6_address0;
    out_k_rope_6_ce0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_6_ce0;
    out_k_rope_7_address0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_7_address0;
    out_k_rope_7_ce0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_7_ce0;
    out_v_0_address0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_0_address0;
    out_v_0_ce0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_0_ce0;
    out_v_10_address0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_10_address0;
    out_v_10_ce0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_10_ce0;
    out_v_11_address0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_11_address0;
    out_v_11_ce0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_11_ce0;
    out_v_12_address0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_12_address0;
    out_v_12_ce0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_12_ce0;
    out_v_13_address0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_13_address0;
    out_v_13_ce0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_13_ce0;
    out_v_14_address0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_14_address0;
    out_v_14_ce0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_14_ce0;
    out_v_15_address0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_15_address0;
    out_v_15_ce0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_15_ce0;
    out_v_1_address0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_1_address0;
    out_v_1_ce0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_1_ce0;
    out_v_2_address0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_2_address0;
    out_v_2_ce0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_2_ce0;
    out_v_3_address0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_3_address0;
    out_v_3_ce0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_3_ce0;
    out_v_4_address0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_4_address0;
    out_v_4_ce0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_4_ce0;
    out_v_5_address0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_5_address0;
    out_v_5_ce0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_5_ce0;
    out_v_6_address0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_6_address0;
    out_v_6_ce0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_6_ce0;
    out_v_7_address0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_7_address0;
    out_v_7_ce0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_7_ce0;
    out_v_8_address0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_8_address0;
    out_v_8_ce0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_8_ce0;
    out_v_9_address0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_9_address0;
    out_v_9_ce0 <= grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_9_ce0;
        sext_ln55_1_fu_278_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln55_1_fu_268_p4),64));

        sext_ln55_fu_264_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_254_p4),64));

    trunc_ln55_1_fu_268_p4 <= p_read1(63 downto 2);
    trunc_ln_fu_254_p4 <= p_read(63 downto 2);

    value_cache_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, value_cache_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            value_cache_blk_n <= value_cache_empty_n;
        else 
            value_cache_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    value_cache_c_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, value_cache_c_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            value_cache_c_blk_n <= value_cache_c_full_n;
        else 
            value_cache_c_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    value_cache_c_din <= value_cache_dout;
    value_cache_c_write <= value_cache_c_write_local;

    value_cache_c_write_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1, ap_block_state1_io)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state1_io) or (ap_const_boolean_1 = ap_block_state1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            value_cache_c_write_local <= ap_const_logic_1;
        else 
            value_cache_c_write_local <= ap_const_logic_0;
        end if; 
    end process;

    value_cache_read <= value_cache_read_local;

    value_cache_read_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1, ap_block_state1_io)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state1_io) or (ap_const_boolean_1 = ap_block_state1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            value_cache_read_local <= ap_const_logic_1;
        else 
            value_cache_read_local <= ap_const_logic_0;
        end if; 
    end process;

end behav;
