

================================================================
== Vitis HLS Report for 'Block_entry_proc'
================================================================
* Date:           Thu Oct  2 21:25:34 2025

* Version:        2025.1 (Build 6135595 on May 21 2025)
* Project:        mhsa_prj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: versalhbm
* Target device:  xcv80-lsva4737-2MHP-e-S


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  4.00 ns|  2.071 ns|     1.08 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        1|        1|  4.000 ns|  4.000 ns|    1|    1|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.85>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%value_cache_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %value_cache"   --->   Operation 3 'read' 'value_cache_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%key_cache_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %key_cache"   --->   Operation 4 'read' 'key_cache_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%layer_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %layer"   --->   Operation 5 'read' 'layer_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%muxLogicFIFOData_to_write_ln0 = muxlogic i64 %value_cache_read"   --->   Operation 6 'muxlogic' 'muxLogicFIFOData_to_write_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] ( I:0.75ns O:0.75ns )   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_fifo.i64P0A, i64 %value_cache_c7, i64 %value_cache_read"   --->   Operation 7 'write' 'write_ln0' <Predicate = true> <Delay = 0.75> <CoreInst = "FIFO_SRL">   --->   Core 84 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 0.93> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 64> <Depth = 3> <FIFO>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%muxLogicFIFOData_to_write_ln0 = muxlogic i64 %key_cache_read"   --->   Operation 8 'muxlogic' 'muxLogicFIFOData_to_write_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] ( I:0.75ns O:0.75ns )   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_fifo.i64P0A, i64 %key_cache_c6, i64 %key_cache_read"   --->   Operation 9 'write' 'write_ln0' <Predicate = true> <Delay = 0.75> <CoreInst = "FIFO_SRL">   --->   Core 84 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 0.93> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 64> <Depth = 3> <FIFO>
ST_1 : Operation 10 [1/1] (0.00ns) (grouped into LUT with out node mul7_loc_c2_0)   --->   "%empty = shl i32 %layer_read, i32 19"   --->   Operation 10 'shl' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns) (grouped into LUT with out node mul7_loc_c2_0)   --->   "%empty_510 = shl i32 %layer_read, i32 17"   --->   Operation 11 'shl' 'empty_510' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.85ns) (out node of the LUT)   --->   "%mul7_loc_c2_0 = sub i32 %empty, i32 %empty_510"   --->   Operation 12 'sub' 'mul7_loc_c2_0' <Predicate = true> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 2.07>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %value_cache_c7, void @ap_fifo_str, i32 0, i32 0, void @p_str, i32 0, i32 0, void @p_str, void @p_str, void @p_str, i32 2, i32 2, i32 16, i32 16, void @p_str, void @ScalarProp_str, i32 4294967295, i32 0, i32 0"   --->   Operation 13 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%position_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %position"   --->   Operation 14 'read' 'position_read' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %key_cache_c6, void @ap_fifo_str, i32 0, i32 0, void @p_str, i32 0, i32 0, void @p_str, void @p_str, void @p_str, i32 2, i32 2, i32 16, i32 16, void @p_str, void @ScalarProp_str, i32 4294967295, i32 0, i32 0"   --->   Operation 15 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%position_cast = sext i32 %position_read"   --->   Operation 16 'sext' 'position_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%empty_511 = shl i32 %position_read, i32 10"   --->   Operation 17 'shl' 'empty_511' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%empty_512 = shl i32 %position_read, i32 8"   --->   Operation 18 'shl' 'empty_512' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%mul8 = sub i32 %empty_511, i32 %empty_512"   --->   Operation 19 'sub' 'mul8' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 20 [1/1] (1.05ns) (root node of TernaryAdder)   --->   "%add = add i32 %mul8, i32 %mul7_loc_c2_0"   --->   Operation 20 'add' 'add' <Predicate = true> <Delay = 1.05> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i34 @_ssdm_op_BitConcatenate.i34.i32.i2, i32 %add, i2 0" [kernel_MHSA.cpp:55]   --->   Operation 21 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%sext_ln55 = sext i34 %shl_ln" [kernel_MHSA.cpp:55]   --->   Operation 22 'sext' 'sext_ln55' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (1.01ns)   --->   "%add_ln55 = add i64 %sext_ln55, i64 %key_cache_read" [kernel_MHSA.cpp:55]   --->   Operation 23 'add' 'add_ln55' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (1.01ns)   --->   "%add_ln55_1 = add i64 %sext_ln55, i64 %value_cache_read" [kernel_MHSA.cpp:55]   --->   Operation 24 'add' 'add_ln55_1' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.85ns)   --->   "%add_ln68 = add i33 %position_cast, i33 1" [kernel_MHSA.cpp:68]   --->   Operation 25 'add' 'add_ln68' <Predicate = true> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.85ns)   --->   "%add126_out_0 = add i32 %position_read, i32 1"   --->   Operation 26 'add' 'add126_out_0' <Predicate = true> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%mrv = insertvalue i225 <undef>, i64 %add_ln55" [kernel_MHSA.cpp:55]   --->   Operation 27 'insertvalue' 'mrv' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue i225 %mrv, i64 %add_ln55_1" [kernel_MHSA.cpp:55]   --->   Operation 28 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%mrv_2 = insertvalue i225 %mrv_1, i32 %add126_out_0" [kernel_MHSA.cpp:55]   --->   Operation 29 'insertvalue' 'mrv_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%mrv_3 = insertvalue i225 %mrv_2, i33 %add_ln68" [kernel_MHSA.cpp:55]   --->   Operation 30 'insertvalue' 'mrv_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%mrv_4 = insertvalue i225 %mrv_3, i32 %mul7_loc_c2_0" [kernel_MHSA.cpp:55]   --->   Operation 31 'insertvalue' 'mrv_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%ret_ln55 = ret i225 %mrv_4" [kernel_MHSA.cpp:55]   --->   Operation 32 'ret' 'ret_ln55' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4.000ns, clock uncertainty: 1.080ns.

 <State 1>: 0.850ns
The critical path consists of the following:
	wire read operation ('layer_read') on port 'layer' [11]  (0.000 ns)
	'shl' operation 32 bit ('empty_510') [19]  (0.000 ns)
	'sub' operation 32 bit ('mul7_loc_c2_0') [20]  (0.850 ns)

 <State 2>: 2.071ns
The critical path consists of the following:
	wire read operation ('position_read') on port 'position' [10]  (0.000 ns)
	'shl' operation 32 bit ('empty_511') [21]  (0.000 ns)
	'sub' operation 32 bit ('mul8') [23]  (0.000 ns)
	'add' operation 32 bit ('add') [24]  (1.057 ns)
	'add' operation 64 bit ('add_ln55', kernel_MHSA.cpp:55) [27]  (1.014 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
