// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module kernel_mhsa_Loop_CACHE_STORE_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        value_cache_dout,
        value_cache_empty_n,
        value_cache_read,
        value_cache_num_data_valid,
        value_cache_fifo_cap,
        key_cache_dout,
        key_cache_empty_n,
        key_cache_read,
        key_cache_num_data_valid,
        key_cache_fifo_cap,
        m_axi_gmem2_0_AWVALID,
        m_axi_gmem2_0_AWREADY,
        m_axi_gmem2_0_AWADDR,
        m_axi_gmem2_0_AWID,
        m_axi_gmem2_0_AWLEN,
        m_axi_gmem2_0_AWSIZE,
        m_axi_gmem2_0_AWBURST,
        m_axi_gmem2_0_AWLOCK,
        m_axi_gmem2_0_AWCACHE,
        m_axi_gmem2_0_AWPROT,
        m_axi_gmem2_0_AWQOS,
        m_axi_gmem2_0_AWREGION,
        m_axi_gmem2_0_AWUSER,
        m_axi_gmem2_0_WVALID,
        m_axi_gmem2_0_WREADY,
        m_axi_gmem2_0_WDATA,
        m_axi_gmem2_0_WSTRB,
        m_axi_gmem2_0_WLAST,
        m_axi_gmem2_0_WID,
        m_axi_gmem2_0_WUSER,
        m_axi_gmem2_0_ARVALID,
        m_axi_gmem2_0_ARREADY,
        m_axi_gmem2_0_ARADDR,
        m_axi_gmem2_0_ARID,
        m_axi_gmem2_0_ARLEN,
        m_axi_gmem2_0_ARSIZE,
        m_axi_gmem2_0_ARBURST,
        m_axi_gmem2_0_ARLOCK,
        m_axi_gmem2_0_ARCACHE,
        m_axi_gmem2_0_ARPROT,
        m_axi_gmem2_0_ARQOS,
        m_axi_gmem2_0_ARREGION,
        m_axi_gmem2_0_ARUSER,
        m_axi_gmem2_0_RVALID,
        m_axi_gmem2_0_RREADY,
        m_axi_gmem2_0_RDATA,
        m_axi_gmem2_0_RLAST,
        m_axi_gmem2_0_RID,
        m_axi_gmem2_0_RFIFONUM,
        m_axi_gmem2_0_RUSER,
        m_axi_gmem2_0_RRESP,
        m_axi_gmem2_0_BVALID,
        m_axi_gmem2_0_BREADY,
        m_axi_gmem2_0_BRESP,
        m_axi_gmem2_0_BID,
        m_axi_gmem2_0_BUSER,
        m_axi_gmem3_0_AWVALID,
        m_axi_gmem3_0_AWREADY,
        m_axi_gmem3_0_AWADDR,
        m_axi_gmem3_0_AWID,
        m_axi_gmem3_0_AWLEN,
        m_axi_gmem3_0_AWSIZE,
        m_axi_gmem3_0_AWBURST,
        m_axi_gmem3_0_AWLOCK,
        m_axi_gmem3_0_AWCACHE,
        m_axi_gmem3_0_AWPROT,
        m_axi_gmem3_0_AWQOS,
        m_axi_gmem3_0_AWREGION,
        m_axi_gmem3_0_AWUSER,
        m_axi_gmem3_0_WVALID,
        m_axi_gmem3_0_WREADY,
        m_axi_gmem3_0_WDATA,
        m_axi_gmem3_0_WSTRB,
        m_axi_gmem3_0_WLAST,
        m_axi_gmem3_0_WID,
        m_axi_gmem3_0_WUSER,
        m_axi_gmem3_0_ARVALID,
        m_axi_gmem3_0_ARREADY,
        m_axi_gmem3_0_ARADDR,
        m_axi_gmem3_0_ARID,
        m_axi_gmem3_0_ARLEN,
        m_axi_gmem3_0_ARSIZE,
        m_axi_gmem3_0_ARBURST,
        m_axi_gmem3_0_ARLOCK,
        m_axi_gmem3_0_ARCACHE,
        m_axi_gmem3_0_ARPROT,
        m_axi_gmem3_0_ARQOS,
        m_axi_gmem3_0_ARREGION,
        m_axi_gmem3_0_ARUSER,
        m_axi_gmem3_0_RVALID,
        m_axi_gmem3_0_RREADY,
        m_axi_gmem3_0_RDATA,
        m_axi_gmem3_0_RLAST,
        m_axi_gmem3_0_RID,
        m_axi_gmem3_0_RFIFONUM,
        m_axi_gmem3_0_RUSER,
        m_axi_gmem3_0_RRESP,
        m_axi_gmem3_0_BVALID,
        m_axi_gmem3_0_BREADY,
        m_axi_gmem3_0_BRESP,
        m_axi_gmem3_0_BID,
        m_axi_gmem3_0_BUSER,
        out_k_rope_0_address0,
        out_k_rope_0_ce0,
        out_k_rope_0_q0,
        out_k_rope_1_address0,
        out_k_rope_1_ce0,
        out_k_rope_1_q0,
        out_k_rope_2_address0,
        out_k_rope_2_ce0,
        out_k_rope_2_q0,
        out_k_rope_3_address0,
        out_k_rope_3_ce0,
        out_k_rope_3_q0,
        out_k_rope_4_address0,
        out_k_rope_4_ce0,
        out_k_rope_4_q0,
        out_k_rope_5_address0,
        out_k_rope_5_ce0,
        out_k_rope_5_q0,
        out_k_rope_6_address0,
        out_k_rope_6_ce0,
        out_k_rope_6_q0,
        out_k_rope_7_address0,
        out_k_rope_7_ce0,
        out_k_rope_7_q0,
        out_v_0_address0,
        out_v_0_ce0,
        out_v_0_q0,
        out_v_1_address0,
        out_v_1_ce0,
        out_v_1_q0,
        out_v_2_address0,
        out_v_2_ce0,
        out_v_2_q0,
        out_v_3_address0,
        out_v_3_ce0,
        out_v_3_q0,
        out_v_4_address0,
        out_v_4_ce0,
        out_v_4_q0,
        out_v_5_address0,
        out_v_5_ce0,
        out_v_5_q0,
        out_v_6_address0,
        out_v_6_ce0,
        out_v_6_q0,
        out_v_7_address0,
        out_v_7_ce0,
        out_v_7_q0,
        out_v_8_address0,
        out_v_8_ce0,
        out_v_8_q0,
        out_v_9_address0,
        out_v_9_ce0,
        out_v_9_q0,
        out_v_10_address0,
        out_v_10_ce0,
        out_v_10_q0,
        out_v_11_address0,
        out_v_11_ce0,
        out_v_11_q0,
        out_v_12_address0,
        out_v_12_ce0,
        out_v_12_q0,
        out_v_13_address0,
        out_v_13_ce0,
        out_v_13_q0,
        out_v_14_address0,
        out_v_14_ce0,
        out_v_14_q0,
        out_v_15_address0,
        out_v_15_ce0,
        out_v_15_q0,
        key_cache_c_din,
        key_cache_c_full_n,
        key_cache_c_write,
        key_cache_c_num_data_valid,
        key_cache_c_fifo_cap,
        value_cache_c_din,
        value_cache_c_full_n,
        value_cache_c_write,
        value_cache_c_num_data_valid,
        value_cache_c_fifo_cap
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [63:0] p_read;
input  [63:0] p_read1;
input  [63:0] value_cache_dout;
input   value_cache_empty_n;
output   value_cache_read;
input  [2:0] value_cache_num_data_valid;
input  [2:0] value_cache_fifo_cap;
input  [63:0] key_cache_dout;
input   key_cache_empty_n;
output   key_cache_read;
input  [2:0] key_cache_num_data_valid;
input  [2:0] key_cache_fifo_cap;
output   m_axi_gmem2_0_AWVALID;
input   m_axi_gmem2_0_AWREADY;
output  [63:0] m_axi_gmem2_0_AWADDR;
output  [0:0] m_axi_gmem2_0_AWID;
output  [31:0] m_axi_gmem2_0_AWLEN;
output  [2:0] m_axi_gmem2_0_AWSIZE;
output  [1:0] m_axi_gmem2_0_AWBURST;
output  [1:0] m_axi_gmem2_0_AWLOCK;
output  [3:0] m_axi_gmem2_0_AWCACHE;
output  [2:0] m_axi_gmem2_0_AWPROT;
output  [3:0] m_axi_gmem2_0_AWQOS;
output  [3:0] m_axi_gmem2_0_AWREGION;
output  [0:0] m_axi_gmem2_0_AWUSER;
output   m_axi_gmem2_0_WVALID;
input   m_axi_gmem2_0_WREADY;
output  [31:0] m_axi_gmem2_0_WDATA;
output  [3:0] m_axi_gmem2_0_WSTRB;
output   m_axi_gmem2_0_WLAST;
output  [0:0] m_axi_gmem2_0_WID;
output  [0:0] m_axi_gmem2_0_WUSER;
output   m_axi_gmem2_0_ARVALID;
input   m_axi_gmem2_0_ARREADY;
output  [63:0] m_axi_gmem2_0_ARADDR;
output  [0:0] m_axi_gmem2_0_ARID;
output  [31:0] m_axi_gmem2_0_ARLEN;
output  [2:0] m_axi_gmem2_0_ARSIZE;
output  [1:0] m_axi_gmem2_0_ARBURST;
output  [1:0] m_axi_gmem2_0_ARLOCK;
output  [3:0] m_axi_gmem2_0_ARCACHE;
output  [2:0] m_axi_gmem2_0_ARPROT;
output  [3:0] m_axi_gmem2_0_ARQOS;
output  [3:0] m_axi_gmem2_0_ARREGION;
output  [0:0] m_axi_gmem2_0_ARUSER;
input   m_axi_gmem2_0_RVALID;
output   m_axi_gmem2_0_RREADY;
input  [31:0] m_axi_gmem2_0_RDATA;
input   m_axi_gmem2_0_RLAST;
input  [0:0] m_axi_gmem2_0_RID;
input  [12:0] m_axi_gmem2_0_RFIFONUM;
input  [0:0] m_axi_gmem2_0_RUSER;
input  [1:0] m_axi_gmem2_0_RRESP;
input   m_axi_gmem2_0_BVALID;
output   m_axi_gmem2_0_BREADY;
input  [1:0] m_axi_gmem2_0_BRESP;
input  [0:0] m_axi_gmem2_0_BID;
input  [0:0] m_axi_gmem2_0_BUSER;
output   m_axi_gmem3_0_AWVALID;
input   m_axi_gmem3_0_AWREADY;
output  [63:0] m_axi_gmem3_0_AWADDR;
output  [0:0] m_axi_gmem3_0_AWID;
output  [31:0] m_axi_gmem3_0_AWLEN;
output  [2:0] m_axi_gmem3_0_AWSIZE;
output  [1:0] m_axi_gmem3_0_AWBURST;
output  [1:0] m_axi_gmem3_0_AWLOCK;
output  [3:0] m_axi_gmem3_0_AWCACHE;
output  [2:0] m_axi_gmem3_0_AWPROT;
output  [3:0] m_axi_gmem3_0_AWQOS;
output  [3:0] m_axi_gmem3_0_AWREGION;
output  [0:0] m_axi_gmem3_0_AWUSER;
output   m_axi_gmem3_0_WVALID;
input   m_axi_gmem3_0_WREADY;
output  [31:0] m_axi_gmem3_0_WDATA;
output  [3:0] m_axi_gmem3_0_WSTRB;
output   m_axi_gmem3_0_WLAST;
output  [0:0] m_axi_gmem3_0_WID;
output  [0:0] m_axi_gmem3_0_WUSER;
output   m_axi_gmem3_0_ARVALID;
input   m_axi_gmem3_0_ARREADY;
output  [63:0] m_axi_gmem3_0_ARADDR;
output  [0:0] m_axi_gmem3_0_ARID;
output  [31:0] m_axi_gmem3_0_ARLEN;
output  [2:0] m_axi_gmem3_0_ARSIZE;
output  [1:0] m_axi_gmem3_0_ARBURST;
output  [1:0] m_axi_gmem3_0_ARLOCK;
output  [3:0] m_axi_gmem3_0_ARCACHE;
output  [2:0] m_axi_gmem3_0_ARPROT;
output  [3:0] m_axi_gmem3_0_ARQOS;
output  [3:0] m_axi_gmem3_0_ARREGION;
output  [0:0] m_axi_gmem3_0_ARUSER;
input   m_axi_gmem3_0_RVALID;
output   m_axi_gmem3_0_RREADY;
input  [31:0] m_axi_gmem3_0_RDATA;
input   m_axi_gmem3_0_RLAST;
input  [0:0] m_axi_gmem3_0_RID;
input  [12:0] m_axi_gmem3_0_RFIFONUM;
input  [0:0] m_axi_gmem3_0_RUSER;
input  [1:0] m_axi_gmem3_0_RRESP;
input   m_axi_gmem3_0_BVALID;
output   m_axi_gmem3_0_BREADY;
input  [1:0] m_axi_gmem3_0_BRESP;
input  [0:0] m_axi_gmem3_0_BID;
input  [0:0] m_axi_gmem3_0_BUSER;
output  [6:0] out_k_rope_0_address0;
output   out_k_rope_0_ce0;
input  [31:0] out_k_rope_0_q0;
output  [6:0] out_k_rope_1_address0;
output   out_k_rope_1_ce0;
input  [31:0] out_k_rope_1_q0;
output  [6:0] out_k_rope_2_address0;
output   out_k_rope_2_ce0;
input  [31:0] out_k_rope_2_q0;
output  [6:0] out_k_rope_3_address0;
output   out_k_rope_3_ce0;
input  [31:0] out_k_rope_3_q0;
output  [6:0] out_k_rope_4_address0;
output   out_k_rope_4_ce0;
input  [31:0] out_k_rope_4_q0;
output  [6:0] out_k_rope_5_address0;
output   out_k_rope_5_ce0;
input  [31:0] out_k_rope_5_q0;
output  [6:0] out_k_rope_6_address0;
output   out_k_rope_6_ce0;
input  [31:0] out_k_rope_6_q0;
output  [6:0] out_k_rope_7_address0;
output   out_k_rope_7_ce0;
input  [31:0] out_k_rope_7_q0;
output  [5:0] out_v_0_address0;
output   out_v_0_ce0;
input  [31:0] out_v_0_q0;
output  [5:0] out_v_1_address0;
output   out_v_1_ce0;
input  [31:0] out_v_1_q0;
output  [5:0] out_v_2_address0;
output   out_v_2_ce0;
input  [31:0] out_v_2_q0;
output  [5:0] out_v_3_address0;
output   out_v_3_ce0;
input  [31:0] out_v_3_q0;
output  [5:0] out_v_4_address0;
output   out_v_4_ce0;
input  [31:0] out_v_4_q0;
output  [5:0] out_v_5_address0;
output   out_v_5_ce0;
input  [31:0] out_v_5_q0;
output  [5:0] out_v_6_address0;
output   out_v_6_ce0;
input  [31:0] out_v_6_q0;
output  [5:0] out_v_7_address0;
output   out_v_7_ce0;
input  [31:0] out_v_7_q0;
output  [5:0] out_v_8_address0;
output   out_v_8_ce0;
input  [31:0] out_v_8_q0;
output  [5:0] out_v_9_address0;
output   out_v_9_ce0;
input  [31:0] out_v_9_q0;
output  [5:0] out_v_10_address0;
output   out_v_10_ce0;
input  [31:0] out_v_10_q0;
output  [5:0] out_v_11_address0;
output   out_v_11_ce0;
input  [31:0] out_v_11_q0;
output  [5:0] out_v_12_address0;
output   out_v_12_ce0;
input  [31:0] out_v_12_q0;
output  [5:0] out_v_13_address0;
output   out_v_13_ce0;
input  [31:0] out_v_13_q0;
output  [5:0] out_v_14_address0;
output   out_v_14_ce0;
input  [31:0] out_v_14_q0;
output  [5:0] out_v_15_address0;
output   out_v_15_ce0;
input  [31:0] out_v_15_q0;
output  [63:0] key_cache_c_din;
input   key_cache_c_full_n;
output   key_cache_c_write;
input  [2:0] key_cache_c_num_data_valid;
input  [2:0] key_cache_c_fifo_cap;
output  [63:0] value_cache_c_din;
input   value_cache_c_full_n;
output   value_cache_c_write;
input  [2:0] value_cache_c_num_data_valid;
input  [2:0] value_cache_c_fifo_cap;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_gmem2_0_AWVALID;
reg[63:0] m_axi_gmem2_0_AWADDR;
reg[0:0] m_axi_gmem2_0_AWID;
reg[31:0] m_axi_gmem2_0_AWLEN;
reg[2:0] m_axi_gmem2_0_AWSIZE;
reg[1:0] m_axi_gmem2_0_AWBURST;
reg[1:0] m_axi_gmem2_0_AWLOCK;
reg[3:0] m_axi_gmem2_0_AWCACHE;
reg[2:0] m_axi_gmem2_0_AWPROT;
reg[3:0] m_axi_gmem2_0_AWQOS;
reg[3:0] m_axi_gmem2_0_AWREGION;
reg[0:0] m_axi_gmem2_0_AWUSER;
reg m_axi_gmem2_0_WVALID;
reg m_axi_gmem2_0_BREADY;
reg m_axi_gmem3_0_AWVALID;
reg[63:0] m_axi_gmem3_0_AWADDR;
reg[0:0] m_axi_gmem3_0_AWID;
reg[31:0] m_axi_gmem3_0_AWLEN;
reg[2:0] m_axi_gmem3_0_AWSIZE;
reg[1:0] m_axi_gmem3_0_AWBURST;
reg[1:0] m_axi_gmem3_0_AWLOCK;
reg[3:0] m_axi_gmem3_0_AWCACHE;
reg[2:0] m_axi_gmem3_0_AWPROT;
reg[3:0] m_axi_gmem3_0_AWQOS;
reg[3:0] m_axi_gmem3_0_AWREGION;
reg[0:0] m_axi_gmem3_0_AWUSER;
reg m_axi_gmem3_0_WVALID;
reg m_axi_gmem3_0_BREADY;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    value_cache_blk_n;
reg    key_cache_blk_n;
reg    gmem2_blk_n_AW;
reg    gmem2_blk_n_B;
wire    ap_CS_fsm_state14;
reg    gmem3_blk_n_AW;
reg    gmem3_blk_n_B;
reg    key_cache_c_blk_n;
reg    value_cache_c_blk_n;
wire  signed [61:0] trunc_ln_fu_254_p4;
reg   [61:0] trunc_ln_reg_332;
reg    ap_block_state1;
reg    ap_block_state1_io;
wire  signed [61:0] trunc_ln55_1_fu_268_p4;
reg   [61:0] trunc_ln55_1_reg_337;
reg   [61:0] p_cast_reg_342;
reg   [61:0] p_cast1_reg_347;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_start;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_done;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_idle;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_ready;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWVALID;
wire   [63:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWADDR;
wire   [0:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWID;
wire   [31:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWLEN;
wire   [2:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWSIZE;
wire   [1:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWBURST;
wire   [1:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWLOCK;
wire   [3:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWCACHE;
wire   [2:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWPROT;
wire   [3:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWQOS;
wire   [3:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWREGION;
wire   [0:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWUSER;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WVALID;
wire   [31:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WDATA;
wire   [3:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WSTRB;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WLAST;
wire   [0:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WID;
wire   [0:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WUSER;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARVALID;
wire   [63:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARADDR;
wire   [0:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARID;
wire   [31:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARLEN;
wire   [2:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARSIZE;
wire   [1:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARBURST;
wire   [1:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARLOCK;
wire   [3:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARCACHE;
wire   [2:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARPROT;
wire   [3:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARQOS;
wire   [3:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARREGION;
wire   [0:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARUSER;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_RREADY;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_BREADY;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWVALID;
wire   [63:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWADDR;
wire   [0:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWID;
wire   [31:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWLEN;
wire   [2:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWSIZE;
wire   [1:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWBURST;
wire   [1:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWLOCK;
wire   [3:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWCACHE;
wire   [2:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWPROT;
wire   [3:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWQOS;
wire   [3:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWREGION;
wire   [0:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWUSER;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WVALID;
wire   [31:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WDATA;
wire   [3:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WSTRB;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WLAST;
wire   [0:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WID;
wire   [0:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WUSER;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARVALID;
wire   [63:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARADDR;
wire   [0:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARID;
wire   [31:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARLEN;
wire   [2:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARSIZE;
wire   [1:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARBURST;
wire   [1:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARLOCK;
wire   [3:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARCACHE;
wire   [2:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARPROT;
wire   [3:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARQOS;
wire   [3:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARREGION;
wire   [0:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARUSER;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_RREADY;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_BREADY;
wire   [6:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_0_address0;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_0_ce0;
wire   [6:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_1_address0;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_1_ce0;
wire   [6:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_2_address0;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_2_ce0;
wire   [6:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_3_address0;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_3_ce0;
wire   [6:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_4_address0;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_4_ce0;
wire   [6:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_5_address0;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_5_ce0;
wire   [6:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_6_address0;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_6_ce0;
wire   [6:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_7_address0;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_7_ce0;
wire   [5:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_0_address0;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_0_ce0;
wire   [5:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_1_address0;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_1_ce0;
wire   [5:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_2_address0;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_2_ce0;
wire   [5:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_3_address0;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_3_ce0;
wire   [5:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_4_address0;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_4_ce0;
wire   [5:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_5_address0;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_5_ce0;
wire   [5:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_6_address0;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_6_ce0;
wire   [5:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_7_address0;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_7_ce0;
wire   [5:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_8_address0;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_8_ce0;
wire   [5:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_9_address0;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_9_ce0;
wire   [5:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_10_address0;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_10_ce0;
wire   [5:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_11_address0;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_11_ce0;
wire   [5:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_12_address0;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_12_ce0;
wire   [5:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_13_address0;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_13_ce0;
wire   [5:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_14_address0;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_14_ce0;
wire   [5:0] grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_15_address0;
wire    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_15_ce0;
reg    grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire  signed [63:0] sext_ln55_fu_264_p1;
wire  signed [63:0] sext_ln55_1_fu_278_p1;
reg    ap_block_state14;
reg    value_cache_read_local;
reg    value_cache_c_write_local;
reg    key_cache_read_local;
reg    key_cache_c_write_local;
reg   [13:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
reg    ap_ST_fsm_state14_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 14'd1;
#0 grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_start_reg = 1'b0;
end

kernel_mhsa_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_start),
    .ap_done(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_done),
    .ap_idle(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_idle),
    .ap_ready(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_ready),
    .m_axi_gmem2_0_AWVALID(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWVALID),
    .m_axi_gmem2_0_AWREADY(m_axi_gmem2_0_AWREADY),
    .m_axi_gmem2_0_AWADDR(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWADDR),
    .m_axi_gmem2_0_AWID(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWID),
    .m_axi_gmem2_0_AWLEN(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWLEN),
    .m_axi_gmem2_0_AWSIZE(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWSIZE),
    .m_axi_gmem2_0_AWBURST(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWBURST),
    .m_axi_gmem2_0_AWLOCK(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWLOCK),
    .m_axi_gmem2_0_AWCACHE(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWCACHE),
    .m_axi_gmem2_0_AWPROT(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWPROT),
    .m_axi_gmem2_0_AWQOS(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWQOS),
    .m_axi_gmem2_0_AWREGION(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWREGION),
    .m_axi_gmem2_0_AWUSER(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWUSER),
    .m_axi_gmem2_0_WVALID(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WVALID),
    .m_axi_gmem2_0_WREADY(m_axi_gmem2_0_WREADY),
    .m_axi_gmem2_0_WDATA(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WDATA),
    .m_axi_gmem2_0_WSTRB(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WSTRB),
    .m_axi_gmem2_0_WLAST(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WLAST),
    .m_axi_gmem2_0_WID(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WID),
    .m_axi_gmem2_0_WUSER(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WUSER),
    .m_axi_gmem2_0_ARVALID(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARVALID),
    .m_axi_gmem2_0_ARREADY(1'b0),
    .m_axi_gmem2_0_ARADDR(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARADDR),
    .m_axi_gmem2_0_ARID(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARID),
    .m_axi_gmem2_0_ARLEN(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARLEN),
    .m_axi_gmem2_0_ARSIZE(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARSIZE),
    .m_axi_gmem2_0_ARBURST(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARBURST),
    .m_axi_gmem2_0_ARLOCK(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARLOCK),
    .m_axi_gmem2_0_ARCACHE(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARCACHE),
    .m_axi_gmem2_0_ARPROT(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARPROT),
    .m_axi_gmem2_0_ARQOS(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARQOS),
    .m_axi_gmem2_0_ARREGION(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARREGION),
    .m_axi_gmem2_0_ARUSER(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_ARUSER),
    .m_axi_gmem2_0_RVALID(1'b0),
    .m_axi_gmem2_0_RREADY(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_RREADY),
    .m_axi_gmem2_0_RDATA(32'd0),
    .m_axi_gmem2_0_RLAST(1'b0),
    .m_axi_gmem2_0_RID(1'd0),
    .m_axi_gmem2_0_RFIFONUM(13'd0),
    .m_axi_gmem2_0_RUSER(1'd0),
    .m_axi_gmem2_0_RRESP(2'd0),
    .m_axi_gmem2_0_BVALID(m_axi_gmem2_0_BVALID),
    .m_axi_gmem2_0_BREADY(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_BREADY),
    .m_axi_gmem2_0_BRESP(m_axi_gmem2_0_BRESP),
    .m_axi_gmem2_0_BID(m_axi_gmem2_0_BID),
    .m_axi_gmem2_0_BUSER(m_axi_gmem2_0_BUSER),
    .m_axi_gmem3_0_AWVALID(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWVALID),
    .m_axi_gmem3_0_AWREADY(m_axi_gmem3_0_AWREADY),
    .m_axi_gmem3_0_AWADDR(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWADDR),
    .m_axi_gmem3_0_AWID(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWID),
    .m_axi_gmem3_0_AWLEN(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWLEN),
    .m_axi_gmem3_0_AWSIZE(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWSIZE),
    .m_axi_gmem3_0_AWBURST(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWBURST),
    .m_axi_gmem3_0_AWLOCK(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWLOCK),
    .m_axi_gmem3_0_AWCACHE(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWCACHE),
    .m_axi_gmem3_0_AWPROT(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWPROT),
    .m_axi_gmem3_0_AWQOS(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWQOS),
    .m_axi_gmem3_0_AWREGION(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWREGION),
    .m_axi_gmem3_0_AWUSER(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWUSER),
    .m_axi_gmem3_0_WVALID(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WVALID),
    .m_axi_gmem3_0_WREADY(m_axi_gmem3_0_WREADY),
    .m_axi_gmem3_0_WDATA(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WDATA),
    .m_axi_gmem3_0_WSTRB(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WSTRB),
    .m_axi_gmem3_0_WLAST(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WLAST),
    .m_axi_gmem3_0_WID(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WID),
    .m_axi_gmem3_0_WUSER(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WUSER),
    .m_axi_gmem3_0_ARVALID(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARVALID),
    .m_axi_gmem3_0_ARREADY(1'b0),
    .m_axi_gmem3_0_ARADDR(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARADDR),
    .m_axi_gmem3_0_ARID(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARID),
    .m_axi_gmem3_0_ARLEN(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARLEN),
    .m_axi_gmem3_0_ARSIZE(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARSIZE),
    .m_axi_gmem3_0_ARBURST(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARBURST),
    .m_axi_gmem3_0_ARLOCK(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARLOCK),
    .m_axi_gmem3_0_ARCACHE(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARCACHE),
    .m_axi_gmem3_0_ARPROT(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARPROT),
    .m_axi_gmem3_0_ARQOS(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARQOS),
    .m_axi_gmem3_0_ARREGION(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARREGION),
    .m_axi_gmem3_0_ARUSER(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_ARUSER),
    .m_axi_gmem3_0_RVALID(1'b0),
    .m_axi_gmem3_0_RREADY(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_RREADY),
    .m_axi_gmem3_0_RDATA(32'd0),
    .m_axi_gmem3_0_RLAST(1'b0),
    .m_axi_gmem3_0_RID(1'd0),
    .m_axi_gmem3_0_RFIFONUM(13'd0),
    .m_axi_gmem3_0_RUSER(1'd0),
    .m_axi_gmem3_0_RRESP(2'd0),
    .m_axi_gmem3_0_BVALID(m_axi_gmem3_0_BVALID),
    .m_axi_gmem3_0_BREADY(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_BREADY),
    .m_axi_gmem3_0_BRESP(m_axi_gmem3_0_BRESP),
    .m_axi_gmem3_0_BID(m_axi_gmem3_0_BID),
    .m_axi_gmem3_0_BUSER(m_axi_gmem3_0_BUSER),
    .sext_ln55_1(trunc_ln55_1_reg_337),
    .sext_ln55(trunc_ln_reg_332),
    .p_cast_cast(p_cast_reg_342),
    .p_cast1_cast(p_cast1_reg_347),
    .out_k_rope_0_address0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_0_address0),
    .out_k_rope_0_ce0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_0_ce0),
    .out_k_rope_0_q0(out_k_rope_0_q0),
    .out_k_rope_1_address0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_1_address0),
    .out_k_rope_1_ce0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_1_ce0),
    .out_k_rope_1_q0(out_k_rope_1_q0),
    .out_k_rope_2_address0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_2_address0),
    .out_k_rope_2_ce0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_2_ce0),
    .out_k_rope_2_q0(out_k_rope_2_q0),
    .out_k_rope_3_address0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_3_address0),
    .out_k_rope_3_ce0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_3_ce0),
    .out_k_rope_3_q0(out_k_rope_3_q0),
    .out_k_rope_4_address0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_4_address0),
    .out_k_rope_4_ce0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_4_ce0),
    .out_k_rope_4_q0(out_k_rope_4_q0),
    .out_k_rope_5_address0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_5_address0),
    .out_k_rope_5_ce0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_5_ce0),
    .out_k_rope_5_q0(out_k_rope_5_q0),
    .out_k_rope_6_address0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_6_address0),
    .out_k_rope_6_ce0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_6_ce0),
    .out_k_rope_6_q0(out_k_rope_6_q0),
    .out_k_rope_7_address0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_7_address0),
    .out_k_rope_7_ce0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_7_ce0),
    .out_k_rope_7_q0(out_k_rope_7_q0),
    .out_v_0_address0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_0_address0),
    .out_v_0_ce0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_0_ce0),
    .out_v_0_q0(out_v_0_q0),
    .out_v_1_address0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_1_address0),
    .out_v_1_ce0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_1_ce0),
    .out_v_1_q0(out_v_1_q0),
    .out_v_2_address0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_2_address0),
    .out_v_2_ce0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_2_ce0),
    .out_v_2_q0(out_v_2_q0),
    .out_v_3_address0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_3_address0),
    .out_v_3_ce0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_3_ce0),
    .out_v_3_q0(out_v_3_q0),
    .out_v_4_address0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_4_address0),
    .out_v_4_ce0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_4_ce0),
    .out_v_4_q0(out_v_4_q0),
    .out_v_5_address0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_5_address0),
    .out_v_5_ce0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_5_ce0),
    .out_v_5_q0(out_v_5_q0),
    .out_v_6_address0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_6_address0),
    .out_v_6_ce0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_6_ce0),
    .out_v_6_q0(out_v_6_q0),
    .out_v_7_address0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_7_address0),
    .out_v_7_ce0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_7_ce0),
    .out_v_7_q0(out_v_7_q0),
    .out_v_8_address0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_8_address0),
    .out_v_8_ce0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_8_ce0),
    .out_v_8_q0(out_v_8_q0),
    .out_v_9_address0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_9_address0),
    .out_v_9_ce0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_9_ce0),
    .out_v_9_q0(out_v_9_q0),
    .out_v_10_address0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_10_address0),
    .out_v_10_ce0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_10_ce0),
    .out_v_10_q0(out_v_10_q0),
    .out_v_11_address0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_11_address0),
    .out_v_11_ce0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_11_ce0),
    .out_v_11_q0(out_v_11_q0),
    .out_v_12_address0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_12_address0),
    .out_v_12_ce0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_12_ce0),
    .out_v_12_q0(out_v_12_q0),
    .out_v_13_address0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_13_address0),
    .out_v_13_ce0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_13_ce0),
    .out_v_13_q0(out_v_13_q0),
    .out_v_14_address0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_14_address0),
    .out_v_14_ce0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_14_ce0),
    .out_v_14_q0(out_v_14_q0),
    .out_v_15_address0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_15_address0),
    .out_v_15_ce0(grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_15_ce0),
    .out_v_15_q0(out_v_15_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_state14) & (1'b1 == ap_CS_fsm_state14))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_start_reg <= 1'b1;
        end else if ((grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_ready == 1'b1)) begin
            grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_io) | (1'b1 == ap_block_state1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_cast1_reg_347 <= {{key_cache_dout[63:2]}};
        p_cast_reg_342 <= {{value_cache_dout[63:2]}};
        trunc_ln55_1_reg_337 <= {{p_read1[63:2]}};
        trunc_ln_reg_332 <= {{p_read[63:2]}};
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state14)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_block_state1_io) | (1'b1 == ap_block_state1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b0 == ap_block_state14) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state14) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        gmem2_blk_n_AW = m_axi_gmem2_0_AWREADY;
    end else begin
        gmem2_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        gmem2_blk_n_B = m_axi_gmem2_0_BVALID;
    end else begin
        gmem2_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        gmem3_blk_n_AW = m_axi_gmem3_0_AWREADY;
    end else begin
        gmem3_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        gmem3_blk_n_B = m_axi_gmem3_0_BVALID;
    end else begin
        gmem3_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        key_cache_blk_n = key_cache_empty_n;
    end else begin
        key_cache_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        key_cache_c_blk_n = key_cache_c_full_n;
    end else begin
        key_cache_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state1_io) | (1'b1 == ap_block_state1)) & (1'b1 == ap_CS_fsm_state1))) begin
        key_cache_c_write_local = 1'b1;
    end else begin
        key_cache_c_write_local = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state1_io) | (1'b1 == ap_block_state1)) & (1'b1 == ap_CS_fsm_state1))) begin
        key_cache_read_local = 1'b1;
    end else begin
        key_cache_read_local = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state1_io) | (1'b1 == ap_block_state1)) & (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem2_0_AWADDR = sext_ln55_fu_264_p1;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem2_0_AWADDR = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWADDR;
    end else begin
        m_axi_gmem2_0_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem2_0_AWBURST = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWBURST;
    end else begin
        m_axi_gmem2_0_AWBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem2_0_AWCACHE = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWCACHE;
    end else begin
        m_axi_gmem2_0_AWCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem2_0_AWID = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWID;
    end else begin
        m_axi_gmem2_0_AWID = 1'd0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state1_io) | (1'b1 == ap_block_state1)) & (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem2_0_AWLEN = 64'd768;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem2_0_AWLEN = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWLEN;
    end else begin
        m_axi_gmem2_0_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem2_0_AWLOCK = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWLOCK;
    end else begin
        m_axi_gmem2_0_AWLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem2_0_AWPROT = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWPROT;
    end else begin
        m_axi_gmem2_0_AWPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem2_0_AWQOS = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWQOS;
    end else begin
        m_axi_gmem2_0_AWQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem2_0_AWREGION = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWREGION;
    end else begin
        m_axi_gmem2_0_AWREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem2_0_AWSIZE = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWSIZE;
    end else begin
        m_axi_gmem2_0_AWSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem2_0_AWUSER = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWUSER;
    end else begin
        m_axi_gmem2_0_AWUSER = 1'd0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state1_io) | (1'b1 == ap_block_state1)) & (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem2_0_AWVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem2_0_AWVALID = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_AWVALID;
    end else begin
        m_axi_gmem2_0_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state14) & (1'b1 == ap_CS_fsm_state14))) begin
        m_axi_gmem2_0_BREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem2_0_BREADY = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_BREADY;
    end else begin
        m_axi_gmem2_0_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem2_0_WVALID = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WVALID;
    end else begin
        m_axi_gmem2_0_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state1_io) | (1'b1 == ap_block_state1)) & (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem3_0_AWADDR = sext_ln55_1_fu_278_p1;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem3_0_AWADDR = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWADDR;
    end else begin
        m_axi_gmem3_0_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem3_0_AWBURST = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWBURST;
    end else begin
        m_axi_gmem3_0_AWBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem3_0_AWCACHE = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWCACHE;
    end else begin
        m_axi_gmem3_0_AWCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem3_0_AWID = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWID;
    end else begin
        m_axi_gmem3_0_AWID = 1'd0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state1_io) | (1'b1 == ap_block_state1)) & (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem3_0_AWLEN = 64'd768;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem3_0_AWLEN = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWLEN;
    end else begin
        m_axi_gmem3_0_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem3_0_AWLOCK = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWLOCK;
    end else begin
        m_axi_gmem3_0_AWLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem3_0_AWPROT = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWPROT;
    end else begin
        m_axi_gmem3_0_AWPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem3_0_AWQOS = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWQOS;
    end else begin
        m_axi_gmem3_0_AWQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem3_0_AWREGION = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWREGION;
    end else begin
        m_axi_gmem3_0_AWREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem3_0_AWSIZE = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWSIZE;
    end else begin
        m_axi_gmem3_0_AWSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem3_0_AWUSER = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWUSER;
    end else begin
        m_axi_gmem3_0_AWUSER = 1'd0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state1_io) | (1'b1 == ap_block_state1)) & (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem3_0_AWVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem3_0_AWVALID = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_AWVALID;
    end else begin
        m_axi_gmem3_0_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state14) & (1'b1 == ap_CS_fsm_state14))) begin
        m_axi_gmem3_0_BREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem3_0_BREADY = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_BREADY;
    end else begin
        m_axi_gmem3_0_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_gmem3_0_WVALID = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WVALID;
    end else begin
        m_axi_gmem3_0_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        value_cache_blk_n = value_cache_empty_n;
    end else begin
        value_cache_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        value_cache_c_blk_n = value_cache_c_full_n;
    end else begin
        value_cache_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state1_io) | (1'b1 == ap_block_state1)) & (1'b1 == ap_CS_fsm_state1))) begin
        value_cache_c_write_local = 1'b1;
    end else begin
        value_cache_c_write_local = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state1_io) | (1'b1 == ap_block_state1)) & (1'b1 == ap_CS_fsm_state1))) begin
        value_cache_read_local = 1'b1;
    end else begin
        value_cache_read_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((1'b1 == ap_block_state1_io) | (1'b1 == ap_block_state1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b0 == ap_block_state14) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((key_cache_empty_n == 1'b0) | (value_cache_empty_n == 1'b0) | (value_cache_c_full_n == 1'b0) | (key_cache_c_full_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state14 = ((m_axi_gmem2_0_BVALID == 1'b0) | (m_axi_gmem3_0_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_state1_io = ((m_axi_gmem2_0_AWREADY == 1'b0) | (m_axi_gmem3_0_AWREADY == 1'b0));
end

assign grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_start = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_ap_start_reg;

assign key_cache_c_din = key_cache_dout;

assign key_cache_c_write = key_cache_c_write_local;

assign key_cache_read = key_cache_read_local;

assign m_axi_gmem2_0_ARADDR = 64'd0;

assign m_axi_gmem2_0_ARBURST = 2'd0;

assign m_axi_gmem2_0_ARCACHE = 4'd0;

assign m_axi_gmem2_0_ARID = 1'd0;

assign m_axi_gmem2_0_ARLEN = 32'd0;

assign m_axi_gmem2_0_ARLOCK = 2'd0;

assign m_axi_gmem2_0_ARPROT = 3'd0;

assign m_axi_gmem2_0_ARQOS = 4'd0;

assign m_axi_gmem2_0_ARREGION = 4'd0;

assign m_axi_gmem2_0_ARSIZE = 3'd0;

assign m_axi_gmem2_0_ARUSER = 1'd0;

assign m_axi_gmem2_0_ARVALID = 1'b0;

assign m_axi_gmem2_0_RREADY = 1'b0;

assign m_axi_gmem2_0_WDATA = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WDATA;

assign m_axi_gmem2_0_WID = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WID;

assign m_axi_gmem2_0_WLAST = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WLAST;

assign m_axi_gmem2_0_WSTRB = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WSTRB;

assign m_axi_gmem2_0_WUSER = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem2_0_WUSER;

assign m_axi_gmem3_0_ARADDR = 64'd0;

assign m_axi_gmem3_0_ARBURST = 2'd0;

assign m_axi_gmem3_0_ARCACHE = 4'd0;

assign m_axi_gmem3_0_ARID = 1'd0;

assign m_axi_gmem3_0_ARLEN = 32'd0;

assign m_axi_gmem3_0_ARLOCK = 2'd0;

assign m_axi_gmem3_0_ARPROT = 3'd0;

assign m_axi_gmem3_0_ARQOS = 4'd0;

assign m_axi_gmem3_0_ARREGION = 4'd0;

assign m_axi_gmem3_0_ARSIZE = 3'd0;

assign m_axi_gmem3_0_ARUSER = 1'd0;

assign m_axi_gmem3_0_ARVALID = 1'b0;

assign m_axi_gmem3_0_RREADY = 1'b0;

assign m_axi_gmem3_0_WDATA = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WDATA;

assign m_axi_gmem3_0_WID = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WID;

assign m_axi_gmem3_0_WLAST = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WLAST;

assign m_axi_gmem3_0_WSTRB = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WSTRB;

assign m_axi_gmem3_0_WUSER = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_m_axi_gmem3_0_WUSER;

assign out_k_rope_0_address0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_0_address0;

assign out_k_rope_0_ce0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_0_ce0;

assign out_k_rope_1_address0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_1_address0;

assign out_k_rope_1_ce0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_1_ce0;

assign out_k_rope_2_address0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_2_address0;

assign out_k_rope_2_ce0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_2_ce0;

assign out_k_rope_3_address0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_3_address0;

assign out_k_rope_3_ce0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_3_ce0;

assign out_k_rope_4_address0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_4_address0;

assign out_k_rope_4_ce0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_4_ce0;

assign out_k_rope_5_address0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_5_address0;

assign out_k_rope_5_ce0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_5_ce0;

assign out_k_rope_6_address0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_6_address0;

assign out_k_rope_6_ce0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_6_ce0;

assign out_k_rope_7_address0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_7_address0;

assign out_k_rope_7_ce0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_k_rope_7_ce0;

assign out_v_0_address0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_0_address0;

assign out_v_0_ce0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_0_ce0;

assign out_v_10_address0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_10_address0;

assign out_v_10_ce0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_10_ce0;

assign out_v_11_address0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_11_address0;

assign out_v_11_ce0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_11_ce0;

assign out_v_12_address0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_12_address0;

assign out_v_12_ce0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_12_ce0;

assign out_v_13_address0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_13_address0;

assign out_v_13_ce0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_13_ce0;

assign out_v_14_address0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_14_address0;

assign out_v_14_ce0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_14_ce0;

assign out_v_15_address0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_15_address0;

assign out_v_15_ce0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_15_ce0;

assign out_v_1_address0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_1_address0;

assign out_v_1_ce0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_1_ce0;

assign out_v_2_address0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_2_address0;

assign out_v_2_ce0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_2_ce0;

assign out_v_3_address0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_3_address0;

assign out_v_3_ce0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_3_ce0;

assign out_v_4_address0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_4_address0;

assign out_v_4_ce0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_4_ce0;

assign out_v_5_address0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_5_address0;

assign out_v_5_ce0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_5_ce0;

assign out_v_6_address0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_6_address0;

assign out_v_6_ce0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_6_ce0;

assign out_v_7_address0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_7_address0;

assign out_v_7_ce0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_7_ce0;

assign out_v_8_address0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_8_address0;

assign out_v_8_ce0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_8_ce0;

assign out_v_9_address0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_9_address0;

assign out_v_9_ce0 = grp_Loop_CACHE_STORE_proc_Pipeline_CACHE_STORE_fu_182_out_v_9_ce0;

assign sext_ln55_1_fu_278_p1 = trunc_ln55_1_fu_268_p4;

assign sext_ln55_fu_264_p1 = trunc_ln_fu_254_p4;

assign trunc_ln55_1_fu_268_p4 = {{p_read1[63:2]}};

assign trunc_ln_fu_254_p4 = {{p_read[63:2]}};

assign value_cache_c_din = value_cache_dout;

assign value_cache_c_write = value_cache_c_write_local;

assign value_cache_read = value_cache_read_local;

endmodule //kernel_mhsa_Loop_CACHE_STORE_proc
