// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module kernel_mhsa_compute_vec_mat_7_Pipeline_VITIS_LOOP_48_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        vec_stream_dout,
        vec_stream_empty_n,
        vec_stream_read,
        vec_stream_num_data_valid,
        vec_stream_fifo_cap,
        vec_local_15_address1,
        vec_local_15_ce1,
        vec_local_15_we1,
        vec_local_15_d1,
        vec_local_14_address1,
        vec_local_14_ce1,
        vec_local_14_we1,
        vec_local_14_d1,
        vec_local_13_address1,
        vec_local_13_ce1,
        vec_local_13_we1,
        vec_local_13_d1,
        vec_local_12_address1,
        vec_local_12_ce1,
        vec_local_12_we1,
        vec_local_12_d1,
        vec_local_11_address1,
        vec_local_11_ce1,
        vec_local_11_we1,
        vec_local_11_d1,
        vec_local_10_address1,
        vec_local_10_ce1,
        vec_local_10_we1,
        vec_local_10_d1,
        vec_local_9_address1,
        vec_local_9_ce1,
        vec_local_9_we1,
        vec_local_9_d1,
        vec_local_8_address1,
        vec_local_8_ce1,
        vec_local_8_we1,
        vec_local_8_d1,
        vec_local_7_address1,
        vec_local_7_ce1,
        vec_local_7_we1,
        vec_local_7_d1,
        vec_local_6_address1,
        vec_local_6_ce1,
        vec_local_6_we1,
        vec_local_6_d1,
        vec_local_5_address1,
        vec_local_5_ce1,
        vec_local_5_we1,
        vec_local_5_d1,
        vec_local_4_address1,
        vec_local_4_ce1,
        vec_local_4_we1,
        vec_local_4_d1,
        vec_local_3_address1,
        vec_local_3_ce1,
        vec_local_3_we1,
        vec_local_3_d1,
        vec_local_2_address1,
        vec_local_2_ce1,
        vec_local_2_we1,
        vec_local_2_d1,
        vec_local_1_address1,
        vec_local_1_ce1,
        vec_local_1_we1,
        vec_local_1_d1,
        vec_local_address1,
        vec_local_ce1,
        vec_local_we1,
        vec_local_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] vec_stream_dout;
input   vec_stream_empty_n;
output   vec_stream_read;
input  [7:0] vec_stream_num_data_valid;
input  [7:0] vec_stream_fifo_cap;
output  [7:0] vec_local_15_address1;
output   vec_local_15_ce1;
output   vec_local_15_we1;
output  [31:0] vec_local_15_d1;
output  [7:0] vec_local_14_address1;
output   vec_local_14_ce1;
output   vec_local_14_we1;
output  [31:0] vec_local_14_d1;
output  [7:0] vec_local_13_address1;
output   vec_local_13_ce1;
output   vec_local_13_we1;
output  [31:0] vec_local_13_d1;
output  [7:0] vec_local_12_address1;
output   vec_local_12_ce1;
output   vec_local_12_we1;
output  [31:0] vec_local_12_d1;
output  [7:0] vec_local_11_address1;
output   vec_local_11_ce1;
output   vec_local_11_we1;
output  [31:0] vec_local_11_d1;
output  [7:0] vec_local_10_address1;
output   vec_local_10_ce1;
output   vec_local_10_we1;
output  [31:0] vec_local_10_d1;
output  [7:0] vec_local_9_address1;
output   vec_local_9_ce1;
output   vec_local_9_we1;
output  [31:0] vec_local_9_d1;
output  [7:0] vec_local_8_address1;
output   vec_local_8_ce1;
output   vec_local_8_we1;
output  [31:0] vec_local_8_d1;
output  [7:0] vec_local_7_address1;
output   vec_local_7_ce1;
output   vec_local_7_we1;
output  [31:0] vec_local_7_d1;
output  [7:0] vec_local_6_address1;
output   vec_local_6_ce1;
output   vec_local_6_we1;
output  [31:0] vec_local_6_d1;
output  [7:0] vec_local_5_address1;
output   vec_local_5_ce1;
output   vec_local_5_we1;
output  [31:0] vec_local_5_d1;
output  [7:0] vec_local_4_address1;
output   vec_local_4_ce1;
output   vec_local_4_we1;
output  [31:0] vec_local_4_d1;
output  [7:0] vec_local_3_address1;
output   vec_local_3_ce1;
output   vec_local_3_we1;
output  [31:0] vec_local_3_d1;
output  [7:0] vec_local_2_address1;
output   vec_local_2_ce1;
output   vec_local_2_we1;
output  [31:0] vec_local_2_d1;
output  [7:0] vec_local_1_address1;
output   vec_local_1_ce1;
output   vec_local_1_we1;
output  [31:0] vec_local_1_d1;
output  [7:0] vec_local_address1;
output   vec_local_ce1;
output   vec_local_we1;
output  [31:0] vec_local_d1;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln48_fu_409_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    vec_stream_blk_n;
wire    ap_block_pp0_stage0_grp1;
wire   [3:0] trunc_ln48_fu_415_p1;
reg   [3:0] trunc_ln48_reg_584;
reg    ap_block_pp0_stage0_11001;
reg   [5:0] lshr_ln_reg_588;
wire   [63:0] zext_ln48_fu_468_p1;
reg   [9:0] i_fu_110;
wire   [9:0] add_ln48_fu_403_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_i_9;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001_grp1;
reg    vec_stream_read_local;
reg    vec_local_14_we1_local;
wire   [31:0] bitcast_ln50_fu_489_p1;
reg    vec_local_14_ce1_local;
reg    vec_local_13_we1_local;
reg    vec_local_13_ce1_local;
reg    vec_local_12_we1_local;
reg    vec_local_12_ce1_local;
reg    vec_local_11_we1_local;
reg    vec_local_11_ce1_local;
reg    vec_local_10_we1_local;
reg    vec_local_10_ce1_local;
reg    vec_local_9_we1_local;
reg    vec_local_9_ce1_local;
reg    vec_local_8_we1_local;
reg    vec_local_8_ce1_local;
reg    vec_local_7_we1_local;
reg    vec_local_7_ce1_local;
reg    vec_local_6_we1_local;
reg    vec_local_6_ce1_local;
reg    vec_local_5_we1_local;
reg    vec_local_5_ce1_local;
reg    vec_local_4_we1_local;
reg    vec_local_4_ce1_local;
reg    vec_local_3_we1_local;
reg    vec_local_3_ce1_local;
reg    vec_local_2_we1_local;
reg    vec_local_2_ce1_local;
reg    vec_local_1_we1_local;
reg    vec_local_1_ce1_local;
reg    vec_local_we1_local;
reg    vec_local_ce1_local;
reg    vec_local_15_we1_local;
reg    vec_local_15_ce1_local;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 i_fu_110 = 10'd0;
#0 ap_done_reg = 1'b0;
end

kernel_mhsa_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln48_fu_409_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_110 <= add_ln48_fu_403_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_110 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lshr_ln_reg_588 <= {{ap_sig_allocacmp_i_9[9:4]}};
        trunc_ln48_reg_584 <= trunc_ln48_fu_415_p1;
    end
end

always @ (*) begin
    if (((icmp_ln48_fu_409_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_9 = 10'd0;
    end else begin
        ap_sig_allocacmp_i_9 = i_fu_110;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd10))) begin
        vec_local_10_ce1_local = 1'b1;
    end else begin
        vec_local_10_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd10))) begin
        vec_local_10_we1_local = 1'b1;
    end else begin
        vec_local_10_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd11))) begin
        vec_local_11_ce1_local = 1'b1;
    end else begin
        vec_local_11_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd11))) begin
        vec_local_11_we1_local = 1'b1;
    end else begin
        vec_local_11_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd12))) begin
        vec_local_12_ce1_local = 1'b1;
    end else begin
        vec_local_12_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd12))) begin
        vec_local_12_we1_local = 1'b1;
    end else begin
        vec_local_12_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd13))) begin
        vec_local_13_ce1_local = 1'b1;
    end else begin
        vec_local_13_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd13))) begin
        vec_local_13_we1_local = 1'b1;
    end else begin
        vec_local_13_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd14))) begin
        vec_local_14_ce1_local = 1'b1;
    end else begin
        vec_local_14_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd14))) begin
        vec_local_14_we1_local = 1'b1;
    end else begin
        vec_local_14_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd15))) begin
        vec_local_15_ce1_local = 1'b1;
    end else begin
        vec_local_15_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd15))) begin
        vec_local_15_we1_local = 1'b1;
    end else begin
        vec_local_15_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd1))) begin
        vec_local_1_ce1_local = 1'b1;
    end else begin
        vec_local_1_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd1))) begin
        vec_local_1_we1_local = 1'b1;
    end else begin
        vec_local_1_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd2))) begin
        vec_local_2_ce1_local = 1'b1;
    end else begin
        vec_local_2_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd2))) begin
        vec_local_2_we1_local = 1'b1;
    end else begin
        vec_local_2_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd3))) begin
        vec_local_3_ce1_local = 1'b1;
    end else begin
        vec_local_3_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd3))) begin
        vec_local_3_we1_local = 1'b1;
    end else begin
        vec_local_3_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd4))) begin
        vec_local_4_ce1_local = 1'b1;
    end else begin
        vec_local_4_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd4))) begin
        vec_local_4_we1_local = 1'b1;
    end else begin
        vec_local_4_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd5))) begin
        vec_local_5_ce1_local = 1'b1;
    end else begin
        vec_local_5_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd5))) begin
        vec_local_5_we1_local = 1'b1;
    end else begin
        vec_local_5_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd6))) begin
        vec_local_6_ce1_local = 1'b1;
    end else begin
        vec_local_6_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd6))) begin
        vec_local_6_we1_local = 1'b1;
    end else begin
        vec_local_6_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd7))) begin
        vec_local_7_ce1_local = 1'b1;
    end else begin
        vec_local_7_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd7))) begin
        vec_local_7_we1_local = 1'b1;
    end else begin
        vec_local_7_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd8))) begin
        vec_local_8_ce1_local = 1'b1;
    end else begin
        vec_local_8_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd8))) begin
        vec_local_8_we1_local = 1'b1;
    end else begin
        vec_local_8_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd9))) begin
        vec_local_9_ce1_local = 1'b1;
    end else begin
        vec_local_9_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd9))) begin
        vec_local_9_we1_local = 1'b1;
    end else begin
        vec_local_9_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd0))) begin
        vec_local_ce1_local = 1'b1;
    end else begin
        vec_local_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln48_reg_584 == 4'd0))) begin
        vec_local_we1_local = 1'b1;
    end else begin
        vec_local_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        vec_stream_blk_n = vec_stream_empty_n;
    end else begin
        vec_stream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        vec_stream_read_local = 1'b1;
    end else begin
        vec_stream_read_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln48_fu_403_p2 = (ap_sig_allocacmp_i_9 + 10'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((vec_stream_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp1 = ((vec_stream_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage0_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((vec_stream_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign bitcast_ln50_fu_489_p1 = vec_stream_dout;

assign icmp_ln48_fu_409_p2 = ((ap_sig_allocacmp_i_9 == 10'd768) ? 1'b1 : 1'b0);

assign trunc_ln48_fu_415_p1 = ap_sig_allocacmp_i_9[3:0];

assign vec_local_10_address1 = zext_ln48_fu_468_p1;

assign vec_local_10_ce1 = vec_local_10_ce1_local;

assign vec_local_10_d1 = bitcast_ln50_fu_489_p1;

assign vec_local_10_we1 = vec_local_10_we1_local;

assign vec_local_11_address1 = zext_ln48_fu_468_p1;

assign vec_local_11_ce1 = vec_local_11_ce1_local;

assign vec_local_11_d1 = bitcast_ln50_fu_489_p1;

assign vec_local_11_we1 = vec_local_11_we1_local;

assign vec_local_12_address1 = zext_ln48_fu_468_p1;

assign vec_local_12_ce1 = vec_local_12_ce1_local;

assign vec_local_12_d1 = bitcast_ln50_fu_489_p1;

assign vec_local_12_we1 = vec_local_12_we1_local;

assign vec_local_13_address1 = zext_ln48_fu_468_p1;

assign vec_local_13_ce1 = vec_local_13_ce1_local;

assign vec_local_13_d1 = bitcast_ln50_fu_489_p1;

assign vec_local_13_we1 = vec_local_13_we1_local;

assign vec_local_14_address1 = zext_ln48_fu_468_p1;

assign vec_local_14_ce1 = vec_local_14_ce1_local;

assign vec_local_14_d1 = bitcast_ln50_fu_489_p1;

assign vec_local_14_we1 = vec_local_14_we1_local;

assign vec_local_15_address1 = zext_ln48_fu_468_p1;

assign vec_local_15_ce1 = vec_local_15_ce1_local;

assign vec_local_15_d1 = bitcast_ln50_fu_489_p1;

assign vec_local_15_we1 = vec_local_15_we1_local;

assign vec_local_1_address1 = zext_ln48_fu_468_p1;

assign vec_local_1_ce1 = vec_local_1_ce1_local;

assign vec_local_1_d1 = bitcast_ln50_fu_489_p1;

assign vec_local_1_we1 = vec_local_1_we1_local;

assign vec_local_2_address1 = zext_ln48_fu_468_p1;

assign vec_local_2_ce1 = vec_local_2_ce1_local;

assign vec_local_2_d1 = bitcast_ln50_fu_489_p1;

assign vec_local_2_we1 = vec_local_2_we1_local;

assign vec_local_3_address1 = zext_ln48_fu_468_p1;

assign vec_local_3_ce1 = vec_local_3_ce1_local;

assign vec_local_3_d1 = bitcast_ln50_fu_489_p1;

assign vec_local_3_we1 = vec_local_3_we1_local;

assign vec_local_4_address1 = zext_ln48_fu_468_p1;

assign vec_local_4_ce1 = vec_local_4_ce1_local;

assign vec_local_4_d1 = bitcast_ln50_fu_489_p1;

assign vec_local_4_we1 = vec_local_4_we1_local;

assign vec_local_5_address1 = zext_ln48_fu_468_p1;

assign vec_local_5_ce1 = vec_local_5_ce1_local;

assign vec_local_5_d1 = bitcast_ln50_fu_489_p1;

assign vec_local_5_we1 = vec_local_5_we1_local;

assign vec_local_6_address1 = zext_ln48_fu_468_p1;

assign vec_local_6_ce1 = vec_local_6_ce1_local;

assign vec_local_6_d1 = bitcast_ln50_fu_489_p1;

assign vec_local_6_we1 = vec_local_6_we1_local;

assign vec_local_7_address1 = zext_ln48_fu_468_p1;

assign vec_local_7_ce1 = vec_local_7_ce1_local;

assign vec_local_7_d1 = bitcast_ln50_fu_489_p1;

assign vec_local_7_we1 = vec_local_7_we1_local;

assign vec_local_8_address1 = zext_ln48_fu_468_p1;

assign vec_local_8_ce1 = vec_local_8_ce1_local;

assign vec_local_8_d1 = bitcast_ln50_fu_489_p1;

assign vec_local_8_we1 = vec_local_8_we1_local;

assign vec_local_9_address1 = zext_ln48_fu_468_p1;

assign vec_local_9_ce1 = vec_local_9_ce1_local;

assign vec_local_9_d1 = bitcast_ln50_fu_489_p1;

assign vec_local_9_we1 = vec_local_9_we1_local;

assign vec_local_address1 = zext_ln48_fu_468_p1;

assign vec_local_ce1 = vec_local_ce1_local;

assign vec_local_d1 = bitcast_ln50_fu_489_p1;

assign vec_local_we1 = vec_local_we1_local;

assign vec_stream_read = vec_stream_read_local;

assign zext_ln48_fu_468_p1 = lshr_ln_reg_588;

endmodule //kernel_mhsa_compute_vec_mat_7_Pipeline_VITIS_LOOP_48_1
