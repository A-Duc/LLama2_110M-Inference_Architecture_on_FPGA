// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module kernel_mhsa_Block_entry_xb_0_wr_proc_Pipeline_XB_INIT (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        xb_15_address1,
        xb_15_ce1,
        xb_15_we1,
        xb_15_d1,
        xb_14_address1,
        xb_14_ce1,
        xb_14_we1,
        xb_14_d1,
        xb_13_address1,
        xb_13_ce1,
        xb_13_we1,
        xb_13_d1,
        xb_12_address1,
        xb_12_ce1,
        xb_12_we1,
        xb_12_d1,
        xb_11_address1,
        xb_11_ce1,
        xb_11_we1,
        xb_11_d1,
        xb_10_address1,
        xb_10_ce1,
        xb_10_we1,
        xb_10_d1,
        xb_9_address1,
        xb_9_ce1,
        xb_9_we1,
        xb_9_d1,
        xb_8_address1,
        xb_8_ce1,
        xb_8_we1,
        xb_8_d1,
        xb_7_address1,
        xb_7_ce1,
        xb_7_we1,
        xb_7_d1,
        xb_6_address1,
        xb_6_ce1,
        xb_6_we1,
        xb_6_d1,
        xb_5_address1,
        xb_5_ce1,
        xb_5_we1,
        xb_5_d1,
        xb_4_address1,
        xb_4_ce1,
        xb_4_we1,
        xb_4_d1,
        xb_3_address1,
        xb_3_ce1,
        xb_3_we1,
        xb_3_d1,
        xb_2_address1,
        xb_2_ce1,
        xb_2_we1,
        xb_2_d1,
        xb_1_address1,
        xb_1_ce1,
        xb_1_we1,
        xb_1_d1,
        xb_0_address1,
        xb_0_ce1,
        xb_0_we1,
        xb_0_d1
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] xb_15_address1;
output   xb_15_ce1;
output   xb_15_we1;
output  [31:0] xb_15_d1;
output  [5:0] xb_14_address1;
output   xb_14_ce1;
output   xb_14_we1;
output  [31:0] xb_14_d1;
output  [5:0] xb_13_address1;
output   xb_13_ce1;
output   xb_13_we1;
output  [31:0] xb_13_d1;
output  [5:0] xb_12_address1;
output   xb_12_ce1;
output   xb_12_we1;
output  [31:0] xb_12_d1;
output  [5:0] xb_11_address1;
output   xb_11_ce1;
output   xb_11_we1;
output  [31:0] xb_11_d1;
output  [5:0] xb_10_address1;
output   xb_10_ce1;
output   xb_10_we1;
output  [31:0] xb_10_d1;
output  [5:0] xb_9_address1;
output   xb_9_ce1;
output   xb_9_we1;
output  [31:0] xb_9_d1;
output  [5:0] xb_8_address1;
output   xb_8_ce1;
output   xb_8_we1;
output  [31:0] xb_8_d1;
output  [5:0] xb_7_address1;
output   xb_7_ce1;
output   xb_7_we1;
output  [31:0] xb_7_d1;
output  [5:0] xb_6_address1;
output   xb_6_ce1;
output   xb_6_we1;
output  [31:0] xb_6_d1;
output  [5:0] xb_5_address1;
output   xb_5_ce1;
output   xb_5_we1;
output  [31:0] xb_5_d1;
output  [5:0] xb_4_address1;
output   xb_4_ce1;
output   xb_4_we1;
output  [31:0] xb_4_d1;
output  [5:0] xb_3_address1;
output   xb_3_ce1;
output   xb_3_we1;
output  [31:0] xb_3_d1;
output  [5:0] xb_2_address1;
output   xb_2_ce1;
output   xb_2_we1;
output  [31:0] xb_2_d1;
output  [5:0] xb_1_address1;
output   xb_1_ce1;
output   xb_1_we1;
output  [31:0] xb_1_d1;
output  [5:0] xb_0_address1;
output   xb_0_ce1;
output   xb_0_we1;
output  [31:0] xb_0_d1;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln117_fu_412_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [63:0] zext_ln117_fu_432_p1;
reg   [9:0] i_fu_102;
wire   [9:0] add_ln117_fu_406_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_i_12;
reg    xb_14_we1_local;
wire   [3:0] trunc_ln117_fu_418_p1;
reg    xb_14_ce1_local;
reg    xb_13_we1_local;
reg    xb_13_ce1_local;
reg    xb_12_we1_local;
reg    xb_12_ce1_local;
reg    xb_11_we1_local;
reg    xb_11_ce1_local;
reg    xb_10_we1_local;
reg    xb_10_ce1_local;
reg    xb_9_we1_local;
reg    xb_9_ce1_local;
reg    xb_8_we1_local;
reg    xb_8_ce1_local;
reg    xb_7_we1_local;
reg    xb_7_ce1_local;
reg    xb_6_we1_local;
reg    xb_6_ce1_local;
reg    xb_5_we1_local;
reg    xb_5_ce1_local;
reg    xb_4_we1_local;
reg    xb_4_ce1_local;
reg    xb_3_we1_local;
reg    xb_3_ce1_local;
reg    xb_2_we1_local;
reg    xb_2_ce1_local;
reg    xb_1_we1_local;
reg    xb_1_ce1_local;
reg    xb_0_we1_local;
reg    xb_0_ce1_local;
reg    xb_15_we1_local;
reg    xb_15_ce1_local;
wire   [5:0] lshr_ln_fu_422_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 i_fu_102 = 10'd0;
#0 ap_done_reg = 1'b0;
end

kernel_mhsa_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((icmp_ln117_fu_412_p2 == 1'd0)) begin
            i_fu_102 <= add_ln117_fu_406_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_102 <= 10'd0;
        end
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1_pp0_stage0_iter0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_12 = 10'd0;
    end else begin
        ap_sig_allocacmp_i_12 = i_fu_102;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd0))) begin
        xb_0_ce1_local = 1'b1;
    end else begin
        xb_0_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd0))) begin
        xb_0_we1_local = 1'b1;
    end else begin
        xb_0_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd10))) begin
        xb_10_ce1_local = 1'b1;
    end else begin
        xb_10_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd10))) begin
        xb_10_we1_local = 1'b1;
    end else begin
        xb_10_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd11))) begin
        xb_11_ce1_local = 1'b1;
    end else begin
        xb_11_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd11))) begin
        xb_11_we1_local = 1'b1;
    end else begin
        xb_11_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd12))) begin
        xb_12_ce1_local = 1'b1;
    end else begin
        xb_12_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd12))) begin
        xb_12_we1_local = 1'b1;
    end else begin
        xb_12_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd13))) begin
        xb_13_ce1_local = 1'b1;
    end else begin
        xb_13_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd13))) begin
        xb_13_we1_local = 1'b1;
    end else begin
        xb_13_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd14))) begin
        xb_14_ce1_local = 1'b1;
    end else begin
        xb_14_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd14))) begin
        xb_14_we1_local = 1'b1;
    end else begin
        xb_14_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd15))) begin
        xb_15_ce1_local = 1'b1;
    end else begin
        xb_15_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd15))) begin
        xb_15_we1_local = 1'b1;
    end else begin
        xb_15_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd1))) begin
        xb_1_ce1_local = 1'b1;
    end else begin
        xb_1_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd1))) begin
        xb_1_we1_local = 1'b1;
    end else begin
        xb_1_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd2))) begin
        xb_2_ce1_local = 1'b1;
    end else begin
        xb_2_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd2))) begin
        xb_2_we1_local = 1'b1;
    end else begin
        xb_2_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd3))) begin
        xb_3_ce1_local = 1'b1;
    end else begin
        xb_3_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd3))) begin
        xb_3_we1_local = 1'b1;
    end else begin
        xb_3_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd4))) begin
        xb_4_ce1_local = 1'b1;
    end else begin
        xb_4_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd4))) begin
        xb_4_we1_local = 1'b1;
    end else begin
        xb_4_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd5))) begin
        xb_5_ce1_local = 1'b1;
    end else begin
        xb_5_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd5))) begin
        xb_5_we1_local = 1'b1;
    end else begin
        xb_5_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd6))) begin
        xb_6_ce1_local = 1'b1;
    end else begin
        xb_6_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd6))) begin
        xb_6_we1_local = 1'b1;
    end else begin
        xb_6_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd7))) begin
        xb_7_ce1_local = 1'b1;
    end else begin
        xb_7_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd7))) begin
        xb_7_we1_local = 1'b1;
    end else begin
        xb_7_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd8))) begin
        xb_8_ce1_local = 1'b1;
    end else begin
        xb_8_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd8))) begin
        xb_8_we1_local = 1'b1;
    end else begin
        xb_8_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd9))) begin
        xb_9_ce1_local = 1'b1;
    end else begin
        xb_9_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_412_p2 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1) & (trunc_ln117_fu_418_p1 == 4'd9))) begin
        xb_9_we1_local = 1'b1;
    end else begin
        xb_9_we1_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln117_fu_406_p2 = (ap_sig_allocacmp_i_12 + 10'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_done = ap_done_sig;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign icmp_ln117_fu_412_p2 = ((ap_sig_allocacmp_i_12 == 10'd768) ? 1'b1 : 1'b0);

assign lshr_ln_fu_422_p4 = {{ap_sig_allocacmp_i_12[9:4]}};

assign trunc_ln117_fu_418_p1 = ap_sig_allocacmp_i_12[3:0];

assign xb_0_address1 = zext_ln117_fu_432_p1;

assign xb_0_ce1 = xb_0_ce1_local;

assign xb_0_d1 = 32'd0;

assign xb_0_we1 = xb_0_we1_local;

assign xb_10_address1 = zext_ln117_fu_432_p1;

assign xb_10_ce1 = xb_10_ce1_local;

assign xb_10_d1 = 32'd0;

assign xb_10_we1 = xb_10_we1_local;

assign xb_11_address1 = zext_ln117_fu_432_p1;

assign xb_11_ce1 = xb_11_ce1_local;

assign xb_11_d1 = 32'd0;

assign xb_11_we1 = xb_11_we1_local;

assign xb_12_address1 = zext_ln117_fu_432_p1;

assign xb_12_ce1 = xb_12_ce1_local;

assign xb_12_d1 = 32'd0;

assign xb_12_we1 = xb_12_we1_local;

assign xb_13_address1 = zext_ln117_fu_432_p1;

assign xb_13_ce1 = xb_13_ce1_local;

assign xb_13_d1 = 32'd0;

assign xb_13_we1 = xb_13_we1_local;

assign xb_14_address1 = zext_ln117_fu_432_p1;

assign xb_14_ce1 = xb_14_ce1_local;

assign xb_14_d1 = 32'd0;

assign xb_14_we1 = xb_14_we1_local;

assign xb_15_address1 = zext_ln117_fu_432_p1;

assign xb_15_ce1 = xb_15_ce1_local;

assign xb_15_d1 = 32'd0;

assign xb_15_we1 = xb_15_we1_local;

assign xb_1_address1 = zext_ln117_fu_432_p1;

assign xb_1_ce1 = xb_1_ce1_local;

assign xb_1_d1 = 32'd0;

assign xb_1_we1 = xb_1_we1_local;

assign xb_2_address1 = zext_ln117_fu_432_p1;

assign xb_2_ce1 = xb_2_ce1_local;

assign xb_2_d1 = 32'd0;

assign xb_2_we1 = xb_2_we1_local;

assign xb_3_address1 = zext_ln117_fu_432_p1;

assign xb_3_ce1 = xb_3_ce1_local;

assign xb_3_d1 = 32'd0;

assign xb_3_we1 = xb_3_we1_local;

assign xb_4_address1 = zext_ln117_fu_432_p1;

assign xb_4_ce1 = xb_4_ce1_local;

assign xb_4_d1 = 32'd0;

assign xb_4_we1 = xb_4_we1_local;

assign xb_5_address1 = zext_ln117_fu_432_p1;

assign xb_5_ce1 = xb_5_ce1_local;

assign xb_5_d1 = 32'd0;

assign xb_5_we1 = xb_5_we1_local;

assign xb_6_address1 = zext_ln117_fu_432_p1;

assign xb_6_ce1 = xb_6_ce1_local;

assign xb_6_d1 = 32'd0;

assign xb_6_we1 = xb_6_we1_local;

assign xb_7_address1 = zext_ln117_fu_432_p1;

assign xb_7_ce1 = xb_7_ce1_local;

assign xb_7_d1 = 32'd0;

assign xb_7_we1 = xb_7_we1_local;

assign xb_8_address1 = zext_ln117_fu_432_p1;

assign xb_8_ce1 = xb_8_ce1_local;

assign xb_8_d1 = 32'd0;

assign xb_8_we1 = xb_8_we1_local;

assign xb_9_address1 = zext_ln117_fu_432_p1;

assign xb_9_ce1 = xb_9_ce1_local;

assign xb_9_d1 = 32'd0;

assign xb_9_we1 = xb_9_we1_local;

assign zext_ln117_fu_432_p1 = lshr_ln_fu_422_p4;

endmodule //kernel_mhsa_Block_entry_xb_0_wr_proc_Pipeline_XB_INIT
