-- ==============================================================
-- Generated by Vitis HLS v2025.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel_mhsa_matmul_216_218_1_Loop_VITIS_LOOP_113_1_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    res_stream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    res_stream_empty_n : IN STD_LOGIC;
    res_stream_read : OUT STD_LOGIC;
    res_stream_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
    res_stream_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
    o_vec_15_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    o_vec_15_ce1 : OUT STD_LOGIC;
    o_vec_15_we1 : OUT STD_LOGIC;
    o_vec_15_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_vec_14_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    o_vec_14_ce1 : OUT STD_LOGIC;
    o_vec_14_we1 : OUT STD_LOGIC;
    o_vec_14_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_vec_13_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    o_vec_13_ce1 : OUT STD_LOGIC;
    o_vec_13_we1 : OUT STD_LOGIC;
    o_vec_13_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_vec_12_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    o_vec_12_ce1 : OUT STD_LOGIC;
    o_vec_12_we1 : OUT STD_LOGIC;
    o_vec_12_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_vec_11_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    o_vec_11_ce1 : OUT STD_LOGIC;
    o_vec_11_we1 : OUT STD_LOGIC;
    o_vec_11_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_vec_10_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    o_vec_10_ce1 : OUT STD_LOGIC;
    o_vec_10_we1 : OUT STD_LOGIC;
    o_vec_10_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_vec_9_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    o_vec_9_ce1 : OUT STD_LOGIC;
    o_vec_9_we1 : OUT STD_LOGIC;
    o_vec_9_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_vec_8_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    o_vec_8_ce1 : OUT STD_LOGIC;
    o_vec_8_we1 : OUT STD_LOGIC;
    o_vec_8_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_vec_7_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    o_vec_7_ce1 : OUT STD_LOGIC;
    o_vec_7_we1 : OUT STD_LOGIC;
    o_vec_7_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_vec_6_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    o_vec_6_ce1 : OUT STD_LOGIC;
    o_vec_6_we1 : OUT STD_LOGIC;
    o_vec_6_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_vec_5_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    o_vec_5_ce1 : OUT STD_LOGIC;
    o_vec_5_we1 : OUT STD_LOGIC;
    o_vec_5_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_vec_4_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    o_vec_4_ce1 : OUT STD_LOGIC;
    o_vec_4_we1 : OUT STD_LOGIC;
    o_vec_4_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_vec_3_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    o_vec_3_ce1 : OUT STD_LOGIC;
    o_vec_3_we1 : OUT STD_LOGIC;
    o_vec_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_vec_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    o_vec_2_ce1 : OUT STD_LOGIC;
    o_vec_2_we1 : OUT STD_LOGIC;
    o_vec_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_vec_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    o_vec_1_ce1 : OUT STD_LOGIC;
    o_vec_1_we1 : OUT STD_LOGIC;
    o_vec_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_vec_0_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    o_vec_0_ce1 : OUT STD_LOGIC;
    o_vec_0_we1 : OUT STD_LOGIC;
    o_vec_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of kernel_mhsa_matmul_216_218_1_Loop_VITIS_LOOP_113_1_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_300 : STD_LOGIC_VECTOR (9 downto 0) := "1100000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln113_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal res_stream_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_grp1 : BOOLEAN;
    signal trunc_ln113_fu_415_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln113_reg_584 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal lshr_ln_reg_588 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln113_fu_468_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_110 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal add_ln113_fu_403_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_grp1 : BOOLEAN;
    signal res_stream_read_local : STD_LOGIC;
    signal o_vec_14_we1_local : STD_LOGIC;
    signal bitcast_ln115_fu_489_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal o_vec_14_ce1_local : STD_LOGIC;
    signal o_vec_13_we1_local : STD_LOGIC;
    signal o_vec_13_ce1_local : STD_LOGIC;
    signal o_vec_12_we1_local : STD_LOGIC;
    signal o_vec_12_ce1_local : STD_LOGIC;
    signal o_vec_11_we1_local : STD_LOGIC;
    signal o_vec_11_ce1_local : STD_LOGIC;
    signal o_vec_10_we1_local : STD_LOGIC;
    signal o_vec_10_ce1_local : STD_LOGIC;
    signal o_vec_9_we1_local : STD_LOGIC;
    signal o_vec_9_ce1_local : STD_LOGIC;
    signal o_vec_8_we1_local : STD_LOGIC;
    signal o_vec_8_ce1_local : STD_LOGIC;
    signal o_vec_7_we1_local : STD_LOGIC;
    signal o_vec_7_ce1_local : STD_LOGIC;
    signal o_vec_6_we1_local : STD_LOGIC;
    signal o_vec_6_ce1_local : STD_LOGIC;
    signal o_vec_5_we1_local : STD_LOGIC;
    signal o_vec_5_ce1_local : STD_LOGIC;
    signal o_vec_4_we1_local : STD_LOGIC;
    signal o_vec_4_ce1_local : STD_LOGIC;
    signal o_vec_3_we1_local : STD_LOGIC;
    signal o_vec_3_ce1_local : STD_LOGIC;
    signal o_vec_2_we1_local : STD_LOGIC;
    signal o_vec_2_ce1_local : STD_LOGIC;
    signal o_vec_1_we1_local : STD_LOGIC;
    signal o_vec_1_ce1_local : STD_LOGIC;
    signal o_vec_0_we1_local : STD_LOGIC;
    signal o_vec_0_ce1_local : STD_LOGIC;
    signal o_vec_15_we1_local : STD_LOGIC;
    signal o_vec_15_ce1_local : STD_LOGIC;
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_condition_212 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component kernel_mhsa_flow_control_loop_pipe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_U : component kernel_mhsa_flow_control_loop_pipe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int,
        ap_continue => ap_continue);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    i_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_212)) then
                if ((icmp_ln113_fu_409_p2 = ap_const_lv1_0)) then 
                    i_fu_110 <= add_ln113_fu_403_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_110 <= ap_const_lv10_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                lshr_ln_reg_588 <= ap_sig_allocacmp_i_2(9 downto 4);
                trunc_ln113_reg_584 <= trunc_ln113_fu_415_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln113_fu_403_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_2) + unsigned(ap_const_lv10_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, res_stream_empty_n, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_start_int)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((res_stream_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start_int = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)));
    end process;


    ap_block_pp0_stage0_11001_grp1_assign_proc : process(ap_enable_reg_pp0_iter1, res_stream_empty_n, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_start_int)
    begin
                ap_block_pp0_stage0_11001_grp1 <= ((ap_done_reg = ap_const_logic_1) or ((res_stream_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start_int = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)));
    end process;

        ap_block_pp0_stage0_grp1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, res_stream_empty_n, ap_done_reg, ap_block_state1_pp0_stage0_iter0, ap_start_int)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((res_stream_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start_int = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_done_reg = ap_const_logic_1);
    end process;


    ap_condition_212_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
                ap_condition_212 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, icmp_ln113_fu_409_p2, ap_start_int)
    begin
        if (((icmp_ln113_fu_409_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_done_reg, ap_block_pp0_stage0_subdone, ap_loop_exit_ready)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_2_assign_proc : process(ap_CS_fsm_pp0_stage0, i_fu_110, ap_loop_init, ap_block_pp0_stage0, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start_int = ap_const_logic_1) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_2 <= ap_const_lv10_0;
        else 
            ap_sig_allocacmp_i_2 <= i_fu_110;
        end if; 
    end process;

    bitcast_ln115_fu_489_p1 <= res_stream_dout;
    icmp_ln113_fu_409_p2 <= "1" when (ap_sig_allocacmp_i_2 = ap_const_lv10_300) else "0";
    o_vec_0_address1 <= zext_ln113_fu_468_p1(6 - 1 downto 0);
    o_vec_0_ce1 <= o_vec_0_ce1_local;

    o_vec_0_ce1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_0))) then 
            o_vec_0_ce1_local <= ap_const_logic_1;
        else 
            o_vec_0_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_0_d1 <= bitcast_ln115_fu_489_p1;
    o_vec_0_we1 <= o_vec_0_we1_local;

    o_vec_0_we1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_0))) then 
            o_vec_0_we1_local <= ap_const_logic_1;
        else 
            o_vec_0_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_10_address1 <= zext_ln113_fu_468_p1(6 - 1 downto 0);
    o_vec_10_ce1 <= o_vec_10_ce1_local;

    o_vec_10_ce1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_A))) then 
            o_vec_10_ce1_local <= ap_const_logic_1;
        else 
            o_vec_10_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_10_d1 <= bitcast_ln115_fu_489_p1;
    o_vec_10_we1 <= o_vec_10_we1_local;

    o_vec_10_we1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_A))) then 
            o_vec_10_we1_local <= ap_const_logic_1;
        else 
            o_vec_10_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_11_address1 <= zext_ln113_fu_468_p1(6 - 1 downto 0);
    o_vec_11_ce1 <= o_vec_11_ce1_local;

    o_vec_11_ce1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_B))) then 
            o_vec_11_ce1_local <= ap_const_logic_1;
        else 
            o_vec_11_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_11_d1 <= bitcast_ln115_fu_489_p1;
    o_vec_11_we1 <= o_vec_11_we1_local;

    o_vec_11_we1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_B))) then 
            o_vec_11_we1_local <= ap_const_logic_1;
        else 
            o_vec_11_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_12_address1 <= zext_ln113_fu_468_p1(6 - 1 downto 0);
    o_vec_12_ce1 <= o_vec_12_ce1_local;

    o_vec_12_ce1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_C))) then 
            o_vec_12_ce1_local <= ap_const_logic_1;
        else 
            o_vec_12_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_12_d1 <= bitcast_ln115_fu_489_p1;
    o_vec_12_we1 <= o_vec_12_we1_local;

    o_vec_12_we1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_C))) then 
            o_vec_12_we1_local <= ap_const_logic_1;
        else 
            o_vec_12_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_13_address1 <= zext_ln113_fu_468_p1(6 - 1 downto 0);
    o_vec_13_ce1 <= o_vec_13_ce1_local;

    o_vec_13_ce1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_D))) then 
            o_vec_13_ce1_local <= ap_const_logic_1;
        else 
            o_vec_13_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_13_d1 <= bitcast_ln115_fu_489_p1;
    o_vec_13_we1 <= o_vec_13_we1_local;

    o_vec_13_we1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_D))) then 
            o_vec_13_we1_local <= ap_const_logic_1;
        else 
            o_vec_13_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_14_address1 <= zext_ln113_fu_468_p1(6 - 1 downto 0);
    o_vec_14_ce1 <= o_vec_14_ce1_local;

    o_vec_14_ce1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_E))) then 
            o_vec_14_ce1_local <= ap_const_logic_1;
        else 
            o_vec_14_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_14_d1 <= bitcast_ln115_fu_489_p1;
    o_vec_14_we1 <= o_vec_14_we1_local;

    o_vec_14_we1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_E))) then 
            o_vec_14_we1_local <= ap_const_logic_1;
        else 
            o_vec_14_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_15_address1 <= zext_ln113_fu_468_p1(6 - 1 downto 0);
    o_vec_15_ce1 <= o_vec_15_ce1_local;

    o_vec_15_ce1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_F))) then 
            o_vec_15_ce1_local <= ap_const_logic_1;
        else 
            o_vec_15_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_15_d1 <= bitcast_ln115_fu_489_p1;
    o_vec_15_we1 <= o_vec_15_we1_local;

    o_vec_15_we1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_F))) then 
            o_vec_15_we1_local <= ap_const_logic_1;
        else 
            o_vec_15_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_1_address1 <= zext_ln113_fu_468_p1(6 - 1 downto 0);
    o_vec_1_ce1 <= o_vec_1_ce1_local;

    o_vec_1_ce1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_1))) then 
            o_vec_1_ce1_local <= ap_const_logic_1;
        else 
            o_vec_1_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_1_d1 <= bitcast_ln115_fu_489_p1;
    o_vec_1_we1 <= o_vec_1_we1_local;

    o_vec_1_we1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_1))) then 
            o_vec_1_we1_local <= ap_const_logic_1;
        else 
            o_vec_1_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_2_address1 <= zext_ln113_fu_468_p1(6 - 1 downto 0);
    o_vec_2_ce1 <= o_vec_2_ce1_local;

    o_vec_2_ce1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_2))) then 
            o_vec_2_ce1_local <= ap_const_logic_1;
        else 
            o_vec_2_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_2_d1 <= bitcast_ln115_fu_489_p1;
    o_vec_2_we1 <= o_vec_2_we1_local;

    o_vec_2_we1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_2))) then 
            o_vec_2_we1_local <= ap_const_logic_1;
        else 
            o_vec_2_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_3_address1 <= zext_ln113_fu_468_p1(6 - 1 downto 0);
    o_vec_3_ce1 <= o_vec_3_ce1_local;

    o_vec_3_ce1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_3))) then 
            o_vec_3_ce1_local <= ap_const_logic_1;
        else 
            o_vec_3_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_3_d1 <= bitcast_ln115_fu_489_p1;
    o_vec_3_we1 <= o_vec_3_we1_local;

    o_vec_3_we1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_3))) then 
            o_vec_3_we1_local <= ap_const_logic_1;
        else 
            o_vec_3_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_4_address1 <= zext_ln113_fu_468_p1(6 - 1 downto 0);
    o_vec_4_ce1 <= o_vec_4_ce1_local;

    o_vec_4_ce1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_4))) then 
            o_vec_4_ce1_local <= ap_const_logic_1;
        else 
            o_vec_4_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_4_d1 <= bitcast_ln115_fu_489_p1;
    o_vec_4_we1 <= o_vec_4_we1_local;

    o_vec_4_we1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_4))) then 
            o_vec_4_we1_local <= ap_const_logic_1;
        else 
            o_vec_4_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_5_address1 <= zext_ln113_fu_468_p1(6 - 1 downto 0);
    o_vec_5_ce1 <= o_vec_5_ce1_local;

    o_vec_5_ce1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_5))) then 
            o_vec_5_ce1_local <= ap_const_logic_1;
        else 
            o_vec_5_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_5_d1 <= bitcast_ln115_fu_489_p1;
    o_vec_5_we1 <= o_vec_5_we1_local;

    o_vec_5_we1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_5))) then 
            o_vec_5_we1_local <= ap_const_logic_1;
        else 
            o_vec_5_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_6_address1 <= zext_ln113_fu_468_p1(6 - 1 downto 0);
    o_vec_6_ce1 <= o_vec_6_ce1_local;

    o_vec_6_ce1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_6))) then 
            o_vec_6_ce1_local <= ap_const_logic_1;
        else 
            o_vec_6_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_6_d1 <= bitcast_ln115_fu_489_p1;
    o_vec_6_we1 <= o_vec_6_we1_local;

    o_vec_6_we1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_6))) then 
            o_vec_6_we1_local <= ap_const_logic_1;
        else 
            o_vec_6_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_7_address1 <= zext_ln113_fu_468_p1(6 - 1 downto 0);
    o_vec_7_ce1 <= o_vec_7_ce1_local;

    o_vec_7_ce1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_7))) then 
            o_vec_7_ce1_local <= ap_const_logic_1;
        else 
            o_vec_7_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_7_d1 <= bitcast_ln115_fu_489_p1;
    o_vec_7_we1 <= o_vec_7_we1_local;

    o_vec_7_we1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_7))) then 
            o_vec_7_we1_local <= ap_const_logic_1;
        else 
            o_vec_7_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_8_address1 <= zext_ln113_fu_468_p1(6 - 1 downto 0);
    o_vec_8_ce1 <= o_vec_8_ce1_local;

    o_vec_8_ce1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_8))) then 
            o_vec_8_ce1_local <= ap_const_logic_1;
        else 
            o_vec_8_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_8_d1 <= bitcast_ln115_fu_489_p1;
    o_vec_8_we1 <= o_vec_8_we1_local;

    o_vec_8_we1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_8))) then 
            o_vec_8_we1_local <= ap_const_logic_1;
        else 
            o_vec_8_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_9_address1 <= zext_ln113_fu_468_p1(6 - 1 downto 0);
    o_vec_9_ce1 <= o_vec_9_ce1_local;

    o_vec_9_ce1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_9))) then 
            o_vec_9_ce1_local <= ap_const_logic_1;
        else 
            o_vec_9_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    o_vec_9_d1 <= bitcast_ln115_fu_489_p1;
    o_vec_9_we1 <= o_vec_9_we1_local;

    o_vec_9_we1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln113_reg_584, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln113_reg_584 = ap_const_lv4_9))) then 
            o_vec_9_we1_local <= ap_const_logic_1;
        else 
            o_vec_9_we1_local <= ap_const_logic_0;
        end if; 
    end process;


    res_stream_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, res_stream_empty_n, ap_block_pp0_stage0_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_stream_blk_n <= res_stream_empty_n;
        else 
            res_stream_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_stream_read <= res_stream_read_local;

    res_stream_read_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_stream_read_local <= ap_const_logic_1;
        else 
            res_stream_read_local <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln113_fu_415_p1 <= ap_sig_allocacmp_i_2(4 - 1 downto 0);
    zext_ln113_fu_468_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_reg_588),64));
end behav;
