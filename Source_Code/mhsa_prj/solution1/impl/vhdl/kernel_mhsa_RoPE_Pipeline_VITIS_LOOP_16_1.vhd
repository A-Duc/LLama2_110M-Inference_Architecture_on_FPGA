-- ==============================================================
-- Generated by Vitis HLS v2025.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel_mhsa_RoPE_Pipeline_VITIS_LOOP_16_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    out_7_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_7_ce0 : OUT STD_LOGIC;
    out_7_we0 : OUT STD_LOGIC;
    out_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_6_ce0 : OUT STD_LOGIC;
    out_6_we0 : OUT STD_LOGIC;
    out_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_5_ce0 : OUT STD_LOGIC;
    out_5_we0 : OUT STD_LOGIC;
    out_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_4_ce0 : OUT STD_LOGIC;
    out_4_we0 : OUT STD_LOGIC;
    out_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_3_ce0 : OUT STD_LOGIC;
    out_3_we0 : OUT STD_LOGIC;
    out_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_2_ce0 : OUT STD_LOGIC;
    out_2_we0 : OUT STD_LOGIC;
    out_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_1_ce0 : OUT STD_LOGIC;
    out_1_we0 : OUT STD_LOGIC;
    out_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    out_0_ce0 : OUT STD_LOGIC;
    out_0_we0 : OUT STD_LOGIC;
    out_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv : IN STD_LOGIC_VECTOR (31 downto 0);
    in_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    in_0_ce0 : OUT STD_LOGIC;
    in_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    in_2_ce0 : OUT STD_LOGIC;
    in_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    in_4_ce0 : OUT STD_LOGIC;
    in_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_6_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    in_6_ce0 : OUT STD_LOGIC;
    in_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_8_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    in_8_ce0 : OUT STD_LOGIC;
    in_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_10_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    in_10_ce0 : OUT STD_LOGIC;
    in_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_12_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    in_12_ce0 : OUT STD_LOGIC;
    in_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_14_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    in_14_ce0 : OUT STD_LOGIC;
    in_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    in_1_ce0 : OUT STD_LOGIC;
    in_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    in_3_ce0 : OUT STD_LOGIC;
    in_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_5_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    in_5_ce0 : OUT STD_LOGIC;
    in_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_7_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    in_7_ce0 : OUT STD_LOGIC;
    in_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_9_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    in_9_ce0 : OUT STD_LOGIC;
    in_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_11_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    in_11_ce0 : OUT STD_LOGIC;
    in_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_13_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    in_13_ce0 : OUT STD_LOGIC;
    in_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    in_15_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    in_15_ce0 : OUT STD_LOGIC;
    in_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of kernel_mhsa_RoPE_Pipeline_VITIS_LOOP_16_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_C0000000 : STD_LOGIC_VECTOR (31 downto 0) := "11000000000000000000000000000000";
    constant ap_const_lv32_3C800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111100100000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv10_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_const_lv10_300 : STD_LOGIC_VECTOR (9 downto 0) := "1100000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_C2 : STD_LOGIC_VECTOR (7 downto 0) := "11000010";
    constant ap_const_lv8_3F : STD_LOGIC_VECTOR (7 downto 0) := "00111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv58_0 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv8_83 : STD_LOGIC_VECTOR (7 downto 0) := "10000011";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv29_10000000 : STD_LOGIC_VECTOR (28 downto 0) := "10000000000000000000000000000";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv19_40000 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv7_7F : STD_LOGIC_VECTOR (6 downto 0) := "1111111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv9_7F : STD_LOGIC_VECTOR (8 downto 0) := "001111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv23_7FFFFF : STD_LOGIC_VECTOR (22 downto 0) := "11111111111111111111111";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter29 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter30 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter31 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter32 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter33 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter34 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter35 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter36 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter37 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln16_fu_877_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ref_4oPi_table_100_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ref_4oPi_table_100_q0 : STD_LOGIC_VECTOR (99 downto 0);
    signal second_order_float_cos_K0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal second_order_float_cos_K0_q0 : STD_LOGIC_VECTOR (27 downto 0);
    signal second_order_float_cos_K1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal second_order_float_cos_K1_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal second_order_float_cos_K2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal second_order_float_cos_K2_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal second_order_float_sin_K0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal second_order_float_sin_K0_q0 : STD_LOGIC_VECTOR (28 downto 0);
    signal second_order_float_sin_K1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal second_order_float_sin_K1_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal second_order_float_sin_K2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal second_order_float_sin_K2_q0 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln16_fu_829_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter8_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter9_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter10_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter11_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter12_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter13_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter14_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter15_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter16_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter17_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter18_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter19_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter20_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter21_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter22_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter23_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter24_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter25_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter26_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter27_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter28_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter29_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter30_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter31_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter32_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter33_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_reg_2396_pp0_iter34_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln16_1_fu_833_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter4_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter5_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter6_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter7_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter8_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter9_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter10_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter11_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter12_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter13_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter14_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter15_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter16_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter17_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter18_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter19_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter20_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter21_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter22_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter23_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter24_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter25_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter26_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter27_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter28_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter29_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter30_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter31_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter32_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter33_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter34_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter35_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln16_1_reg_2402_pp0_iter36_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln_reg_2406 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter4_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter5_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter6_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter7_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter8_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter9_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter10_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter11_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter12_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter13_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter14_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter15_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter16_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter17_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter18_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter19_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter20_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter21_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter22_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter23_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter24_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter25_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter26_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter27_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter28_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter29_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter30_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter31_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter32_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter33_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter34_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter35_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_reg_2406_pp0_iter36_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln16_2_reg_2411 : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter8_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter9_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter10_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter11_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter12_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter13_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter14_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter15_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter16_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter17_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter18_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter19_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter20_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter21_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter22_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter23_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter24_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter25_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter26_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter27_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter28_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter29_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter30_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter31_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln16_2_reg_2411_pp0_iter32_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal head_dim_fu_857_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal head_dim_reg_2416 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_780_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_758_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_2435 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_763_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign_reg_2441 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pow_generic_float_s_fu_749_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_2446 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_11001_ignoreCallOp95 : BOOLEAN;
    signal grp_fu_768_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_reg_2452 : STD_LOGIC_VECTOR (31 downto 0);
    signal din_sign_reg_2457 : STD_LOGIC_VECTOR (0 downto 0);
    signal din_sign_reg_2457_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal din_sign_reg_2457_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal din_sign_reg_2457_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal din_sign_reg_2457_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal din_sign_reg_2457_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal din_sign_reg_2457_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal din_sign_reg_2457_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal din_sign_reg_2457_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal din_sign_reg_2457_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal din_sign_reg_2457_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal din_exp_fu_928_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal din_exp_reg_2463 : STD_LOGIC_VECTOR (7 downto 0);
    signal din_exp_reg_2463_pp0_iter23_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal din_exp_reg_2463_pp0_iter24_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal din_exp_reg_2463_pp0_iter25_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal din_sig_fu_936_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal din_sig_reg_2470 : STD_LOGIC_VECTOR (22 downto 0);
    signal din_sig_reg_2470_pp0_iter23_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal closepath_fu_940_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal closepath_reg_2476 : STD_LOGIC_VECTOR (0 downto 0);
    signal closepath_reg_2476_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal closepath_reg_2476_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal closepath_reg_2476_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln379_fu_979_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln379_reg_2487 : STD_LOGIC_VECTOR (3 downto 0);
    signal Med_reg_2492 : STD_LOGIC_VECTOR (79 downto 0);
    signal and_ln179_fu_1029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_reg_2503 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_reg_2503_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_reg_2503_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_reg_2503_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_reg_2503_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_reg_2503_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_reg_2503_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_reg_2503_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln179_reg_2503_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal k_fu_1055_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_reg_2513 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_reg_2513_pp0_iter26_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal k_reg_2513_pp0_iter27_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal k_reg_2513_pp0_iter28_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal k_reg_2513_pp0_iter29_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal k_reg_2513_pp0_iter30_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal k_reg_2513_pp0_iter31_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal k_reg_2513_pp0_iter32_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal Mx_bits_3_fu_1072_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal Mx_bits_3_reg_2519 : STD_LOGIC_VECTOR (57 downto 0);
    signal tmp_s_reg_2524 : STD_LOGIC_VECTOR (28 downto 0);
    signal Ex_1_fu_1128_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal Ex_1_reg_2529 : STD_LOGIC_VECTOR (7 downto 0);
    signal Ex_1_reg_2529_pp0_iter27_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Ex_1_reg_2529_pp0_iter28_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Ex_1_reg_2529_pp0_iter29_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Ex_1_reg_2529_pp0_iter30_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Ex_1_reg_2529_pp0_iter31_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Ex_1_reg_2529_pp0_iter32_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_reg_2536 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_2542 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_1_reg_2542_pp0_iter27_reg : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_1_reg_2542_pp0_iter28_reg : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_1_reg_2542_pp0_iter29_reg : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_1_reg_2542_pp0_iter30_reg : STD_LOGIC_VECTOR (28 downto 0);
    signal icmp_ln186_fu_1152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln186_reg_2548 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln186_reg_2548_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln186_reg_2548_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln186_reg_2548_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln186_reg_2548_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln186_reg_2548_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln186_reg_2548_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal B_fu_1194_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal B_reg_2557 : STD_LOGIC_VECTOR (21 downto 0);
    signal B_reg_2557_pp0_iter28_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal A_reg_2563 : STD_LOGIC_VECTOR (6 downto 0);
    signal B_trunc_reg_2568 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_3_reg_2583 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln1_reg_2609 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_2_reg_2614 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_4_reg_2619 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln2_reg_2624 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln3_reg_2629 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln4_reg_2634 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln75_1_fu_1433_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln75_1_reg_2639 : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln75_1_reg_2639_pp0_iter31_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln80_1_fu_1455_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln80_1_reg_2644 : STD_LOGIC_VECTOR (27 downto 0);
    signal cos_result_fu_1479_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal cos_result_reg_2659 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln276_fu_1511_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln276_reg_2664 : STD_LOGIC_VECTOR (12 downto 0);
    signal c_3_fu_1515_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_3_reg_2669 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln281_fu_1523_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln281_reg_2674 : STD_LOGIC_VECTOR (5 downto 0);
    signal c_4_fu_1567_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_4_reg_2680 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln281_2_fu_1575_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln281_2_reg_2685 : STD_LOGIC_VECTOR (5 downto 0);
    signal c_2_fu_1579_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_2_reg_2691 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln281_3_fu_1587_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln281_3_reg_2696 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln6_reg_2701 : STD_LOGIC_VECTOR (26 downto 0);
    signal icmp_ln306_fu_1601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln306_reg_2706 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln16_1_fu_1607_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln16_1_reg_2711 : STD_LOGIC_VECTOR (63 downto 0);
    signal sin_results_sign_2_fu_2023_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sin_results_sign_2_reg_2723 : STD_LOGIC_VECTOR (0 downto 0);
    signal sin_results_exp_1_fu_2029_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sin_results_exp_1_reg_2728 : STD_LOGIC_VECTOR (7 downto 0);
    signal sin_results_sig_1_fu_2036_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal sin_results_sig_1_reg_2733 : STD_LOGIC_VECTOR (22 downto 0);
    signal cos_results_sign_2_fu_2048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cos_results_sign_2_reg_2738 : STD_LOGIC_VECTOR (0 downto 0);
    signal cos_results_exp_1_fu_2065_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal cos_results_exp_1_reg_2743 : STD_LOGIC_VECTOR (7 downto 0);
    signal cos_results_sig_1_fu_2081_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal cos_results_sig_1_reg_2748 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_12_fu_2089_p19 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_2753 : STD_LOGIC_VECTOR (0 downto 0);
    signal s_out_2_fu_2182_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_out_2_reg_2799 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_out_2_reg_2799_pp0_iter35_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal c_out_2_fu_2189_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_out_2_reg_2806 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_out_2_reg_2806_pp0_iter35_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_2228_p19 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_2283_p19 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_reg_2859 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_772_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_reg_2867 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_776_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul5_reg_2873 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_ignoreCallOp83 : BOOLEAN;
    signal zext_ln378_fu_970_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln72_fu_1235_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln16_fu_2340_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i183_fu_336 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal i_fu_871_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i183_load : STD_LOGIC_VECTOR (9 downto 0);
    signal ref_4oPi_table_100_ce0_local : STD_LOGIC;
    signal second_order_float_cos_K0_ce0_local : STD_LOGIC;
    signal second_order_float_cos_K1_ce0_local : STD_LOGIC;
    signal second_order_float_cos_K2_ce0_local : STD_LOGIC;
    signal second_order_float_sin_K0_ce0_local : STD_LOGIC;
    signal second_order_float_sin_K1_ce0_local : STD_LOGIC;
    signal second_order_float_sin_K2_ce0_local : STD_LOGIC;
    signal in_1_ce0_local : STD_LOGIC;
    signal in_3_ce0_local : STD_LOGIC;
    signal in_5_ce0_local : STD_LOGIC;
    signal in_7_ce0_local : STD_LOGIC;
    signal in_9_ce0_local : STD_LOGIC;
    signal in_11_ce0_local : STD_LOGIC;
    signal in_13_ce0_local : STD_LOGIC;
    signal in_15_ce0_local : STD_LOGIC;
    signal in_0_ce0_local : STD_LOGIC;
    signal in_2_ce0_local : STD_LOGIC;
    signal in_4_ce0_local : STD_LOGIC;
    signal in_6_ce0_local : STD_LOGIC;
    signal in_8_ce0_local : STD_LOGIC;
    signal in_10_ce0_local : STD_LOGIC;
    signal in_12_ce0_local : STD_LOGIC;
    signal in_14_ce0_local : STD_LOGIC;
    signal out_4_we0_local : STD_LOGIC;
    signal grp_fu_794_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_4_ce0_local : STD_LOGIC;
    signal out_5_we0_local : STD_LOGIC;
    signal grp_fu_783_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_5_ce0_local : STD_LOGIC;
    signal out_2_we0_local : STD_LOGIC;
    signal out_2_ce0_local : STD_LOGIC;
    signal out_3_we0_local : STD_LOGIC;
    signal out_3_ce0_local : STD_LOGIC;
    signal out_0_we0_local : STD_LOGIC;
    signal out_0_ce0_local : STD_LOGIC;
    signal out_1_we0_local : STD_LOGIC;
    signal out_1_ce0_local : STD_LOGIC;
    signal out_6_we0_local : STD_LOGIC;
    signal out_6_ce0_local : STD_LOGIC;
    signal out_7_we0_local : STD_LOGIC;
    signal out_7_ce0_local : STD_LOGIC;
    signal grp_fu_758_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_758_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_763_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_763_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_768_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_768_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_772_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_772_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_776_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_776_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_780_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_805_p0 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_805_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_809_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal data_fu_917_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln376_fu_946_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal addr_fu_952_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln6_fu_960_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln379_fu_983_p1 : STD_LOGIC_VECTOR (99 downto 0);
    signal shl_ln379_fu_986_p2 : STD_LOGIC_VECTOR (99 downto 0);
    signal X_fu_1000_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp_ln179_fu_1019_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln179_1_fu_1024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_809_p2 : STD_LOGIC_VECTOR (79 downto 0);
    signal trunc_ln_fu_1045_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal Mx_bits_fu_1035_p4 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln491_fu_1062_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal Mx_bits_1_fu_1066_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal Ex_fu_1088_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal Mx_zeros_fu_1107_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal Mx_zeros_fu_1107_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln504_fu_1115_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal select_ln453_fu_1093_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln505_fu_1124_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln504_fu_1119_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal sub_ln506_fu_1157_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln506_fu_1162_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln506_1_fu_1172_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln506_fu_1168_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln506_fu_1175_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln506_fu_1181_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln506_1_fu_1187_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln69_fu_1229_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln69_fu_1218_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln69_fu_1229_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln69_fu_1229_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln73_fu_1303_p0 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln73_fu_1303_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln73_fu_1303_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln74_fu_1334_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln74_fu_1334_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln74_fu_1334_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln78_fu_1365_p0 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln78_fu_1365_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal mul_ln79_fu_1396_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln79_fu_1396_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal zext_ln74_2_fu_1425_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln75_fu_1428_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal zext_ln73_2_fu_1422_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln80_fu_1439_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln80_1_fu_1442_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln80_fu_1445_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln80_2_fu_1451_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal zext_ln75_fu_1476_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_805_p2 : STD_LOGIC_VECTOR (56 downto 0);
    signal tmp_5_fu_1495_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal c_3_fu_1515_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1527_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal out_bits_4_fu_1537_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_9_fu_1549_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal c_4_fu_1567_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_2_fu_1579_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln5_fu_1485_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal c_1_fu_1625_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_1_fu_1625_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln291_fu_1637_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln291_fu_1640_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln281_1_fu_1633_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal in_shift_1_fu_1645_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal zext_ln291_1_fu_1660_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln292_fu_1649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shift_1_fu_1654_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal shift_2_fu_1670_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln287_fu_1677_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal newexp_2_fu_1681_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln291_1_fu_1664_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_1691_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_7_fu_1701_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln291_2_fu_1722_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln291_2_fu_1725_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_shift_2_fu_1730_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal zext_ln291_3_fu_1744_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln292_1_fu_1734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shift_4_fu_1739_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal shift_5_fu_1753_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln163_fu_1719_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln300_fu_1764_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln287_1_fu_1760_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal newexp_fu_1770_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_20_fu_1776_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln291_3_fu_1748_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1793_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_11_fu_1803_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal sin_results_sign_fu_1827_p33 : STD_LOGIC_VECTOR (0 downto 0);
    signal index_fu_1821_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal cos_results_sign_fu_1899_p33 : STD_LOGIC_VECTOR (0 downto 0);
    signal sin_results_sign_fu_1827_p35 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln186_fu_1971_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln306_fu_1784_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln186_fu_1989_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln186_fu_1982_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_fu_1789_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln186_2_fu_2002_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal empty_502_fu_1813_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal cos_results_sign_fu_1899_p35 : STD_LOGIC_VECTOR (0 downto 0);
    signal sin_results_sign_1_fu_1976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sin_results_exp_fu_1994_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sin_results_sig_fu_2009_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal cos_results_sign_1_fu_2017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_and_ln179_fu_2043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_503_fu_2061_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cos_results_exp_3_fu_2054_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal out_exp_fu_1687_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal cos_results_sig_3_cast_fu_2073_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal significand_fu_1711_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_12_fu_2089_p17 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_3_fu_2160_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_4_fu_2167_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_out_fu_2174_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_out_fu_2178_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_2228_p17 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_2283_p17 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter15_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter16_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter17_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter18_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter19_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter20_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter21_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter22_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter23_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter24_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter25_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter26_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter27_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter28_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter29_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter30_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter31_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter32_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter33_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter34_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter35_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter36_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter37_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal grp_fu_805_p00 : STD_LOGIC_VECTOR (56 downto 0);
    signal grp_fu_805_p10 : STD_LOGIC_VECTOR (56 downto 0);
    signal grp_fu_809_p10 : STD_LOGIC_VECTOR (79 downto 0);
    signal mul_ln73_fu_1303_p00 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln73_fu_1303_p10 : STD_LOGIC_VECTOR (43 downto 0);
    signal mul_ln74_fu_1334_p00 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln74_fu_1334_p10 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln78_fu_1365_p00 : STD_LOGIC_VECTOR (42 downto 0);
    signal mul_ln79_fu_1396_p00 : STD_LOGIC_VECTOR (27 downto 0);
    signal Mx_zeros_fu_1107_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal Mx_zeros_fu_1107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_3_fu_1515_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_3_fu_1515_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_4_fu_1567_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_4_fu_1567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_2_fu_1579_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_2_fu_1579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_1_fu_1625_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_1_fu_1625_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sin_results_sign_fu_1827_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sin_results_sign_fu_1827_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sin_results_sign_fu_1827_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal sin_results_sign_fu_1827_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal sin_results_sign_fu_1827_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal sin_results_sign_fu_1827_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal sin_results_sign_fu_1827_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal sin_results_sign_fu_1827_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal sin_results_sign_fu_1827_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal sin_results_sign_fu_1827_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal sin_results_sign_fu_1827_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal sin_results_sign_fu_1827_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal sin_results_sign_fu_1827_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal sin_results_sign_fu_1827_p27 : STD_LOGIC_VECTOR (3 downto 0);
    signal sin_results_sign_fu_1827_p29 : STD_LOGIC_VECTOR (3 downto 0);
    signal sin_results_sign_fu_1827_p31 : STD_LOGIC_VECTOR (3 downto 0);
    signal cos_results_sign_fu_1899_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal cos_results_sign_fu_1899_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal cos_results_sign_fu_1899_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal cos_results_sign_fu_1899_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal cos_results_sign_fu_1899_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal cos_results_sign_fu_1899_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal cos_results_sign_fu_1899_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal cos_results_sign_fu_1899_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal cos_results_sign_fu_1899_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal cos_results_sign_fu_1899_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal cos_results_sign_fu_1899_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal cos_results_sign_fu_1899_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal cos_results_sign_fu_1899_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal cos_results_sign_fu_1899_p27 : STD_LOGIC_VECTOR (3 downto 0);
    signal cos_results_sign_fu_1899_p29 : STD_LOGIC_VECTOR (3 downto 0);
    signal cos_results_sign_fu_1899_p31 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_12_fu_2089_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_12_fu_2089_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_12_fu_2089_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_12_fu_2089_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_12_fu_2089_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_12_fu_2089_p11 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_12_fu_2089_p13 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_12_fu_2089_p15 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_14_fu_2228_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_14_fu_2228_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_14_fu_2228_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_14_fu_2228_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_14_fu_2228_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_14_fu_2228_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_14_fu_2228_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_14_fu_2228_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_13_fu_2283_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_13_fu_2283_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_13_fu_2283_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_13_fu_2283_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_13_fu_2283_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_13_fu_2283_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_13_fu_2283_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_13_fu_2283_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component kernel_mhsa_pow_generic_float_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        exp : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kernel_mhsa_fmul_32ns_32ns_32_1_primitive_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kernel_mhsa_sitofp_32ns_32_3_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kernel_mhsa_fmadd_32ns_32ns_32ns_32ns_32_2_primitive_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kernel_mhsa_fmsub_32ns_32ns_32ns_32ns_32_2_primitive_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kernel_mhsa_mul_29ns_28ns_57_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (28 downto 0);
        din1 : IN STD_LOGIC_VECTOR (27 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (56 downto 0) );
    end component;


    component kernel_mhsa_mul_80s_24ns_80_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (79 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (79 downto 0) );
    end component;


    component kernel_mhsa_ctlz_30_30_1_1 IS
    generic (
        din_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din : IN STD_LOGIC_VECTOR (29 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component kernel_mhsa_mul_15ns_15ns_30_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component kernel_mhsa_mul_22ns_22ns_44_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (21 downto 0);
        din1 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (43 downto 0) );
    end component;


    component kernel_mhsa_mul_15ns_14ns_29_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component kernel_mhsa_mul_22ns_21s_43_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (21 downto 0);
        din1 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (42 downto 0) );
    end component;


    component kernel_mhsa_mul_15ns_13s_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component kernel_mhsa_ctlz_32_32_1_1 IS
    generic (
        din_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kernel_mhsa_sparsemux_33_4_1_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (3 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (3 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (3 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (3 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (3 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (3 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (3 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (3 downto 0);
        din7_WIDTH : INTEGER;
        CASE8 : STD_LOGIC_VECTOR (3 downto 0);
        din8_WIDTH : INTEGER;
        CASE9 : STD_LOGIC_VECTOR (3 downto 0);
        din9_WIDTH : INTEGER;
        CASE10 : STD_LOGIC_VECTOR (3 downto 0);
        din10_WIDTH : INTEGER;
        CASE11 : STD_LOGIC_VECTOR (3 downto 0);
        din11_WIDTH : INTEGER;
        CASE12 : STD_LOGIC_VECTOR (3 downto 0);
        din12_WIDTH : INTEGER;
        CASE13 : STD_LOGIC_VECTOR (3 downto 0);
        din13_WIDTH : INTEGER;
        CASE14 : STD_LOGIC_VECTOR (3 downto 0);
        din14_WIDTH : INTEGER;
        CASE15 : STD_LOGIC_VECTOR (3 downto 0);
        din15_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (0 downto 0);
        din1 : IN STD_LOGIC_VECTOR (0 downto 0);
        din2 : IN STD_LOGIC_VECTOR (0 downto 0);
        din3 : IN STD_LOGIC_VECTOR (0 downto 0);
        din4 : IN STD_LOGIC_VECTOR (0 downto 0);
        din5 : IN STD_LOGIC_VECTOR (0 downto 0);
        din6 : IN STD_LOGIC_VECTOR (0 downto 0);
        din7 : IN STD_LOGIC_VECTOR (0 downto 0);
        din8 : IN STD_LOGIC_VECTOR (0 downto 0);
        din9 : IN STD_LOGIC_VECTOR (0 downto 0);
        din10 : IN STD_LOGIC_VECTOR (0 downto 0);
        din11 : IN STD_LOGIC_VECTOR (0 downto 0);
        din12 : IN STD_LOGIC_VECTOR (0 downto 0);
        din13 : IN STD_LOGIC_VECTOR (0 downto 0);
        din14 : IN STD_LOGIC_VECTOR (0 downto 0);
        din15 : IN STD_LOGIC_VECTOR (0 downto 0);
        def : IN STD_LOGIC_VECTOR (0 downto 0);
        sel : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component kernel_mhsa_sparsemux_17_3_1_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (2 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (2 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (2 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (2 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (2 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (2 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (2 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (2 downto 0);
        din7_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (0 downto 0);
        din1 : IN STD_LOGIC_VECTOR (0 downto 0);
        din2 : IN STD_LOGIC_VECTOR (0 downto 0);
        din3 : IN STD_LOGIC_VECTOR (0 downto 0);
        din4 : IN STD_LOGIC_VECTOR (0 downto 0);
        din5 : IN STD_LOGIC_VECTOR (0 downto 0);
        din6 : IN STD_LOGIC_VECTOR (0 downto 0);
        din7 : IN STD_LOGIC_VECTOR (0 downto 0);
        def : IN STD_LOGIC_VECTOR (0 downto 0);
        sel : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component kernel_mhsa_sparsemux_17_4_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (3 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (3 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (3 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (3 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (3 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (3 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (3 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (3 downto 0);
        din7_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        def : IN STD_LOGIC_VECTOR (31 downto 0);
        sel : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kernel_mhsa_RoPE_Pipeline_VITIS_LOOP_16_1_ref_4oPi_table_100_ROM_1P_LUTRAM_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (99 downto 0) );
    end component;


    component kernel_mhsa_RoPE_Pipeline_VITIS_LOOP_16_1_second_order_float_cos_K0_ROM_1P_LUTRAM_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component kernel_mhsa_RoPE_Pipeline_VITIS_LOOP_16_1_second_order_float_cos_K1_ROM_1P_LUTRAM_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component kernel_mhsa_RoPE_Pipeline_VITIS_LOOP_16_1_second_order_float_cos_K2_ROM_1P_LUTRAM_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component kernel_mhsa_RoPE_Pipeline_VITIS_LOOP_16_1_second_order_float_sin_K0_ROM_1P_LUTRAM_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component kernel_mhsa_RoPE_Pipeline_VITIS_LOOP_16_1_second_order_float_sin_K1_ROM_1P_LUTRAM_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component kernel_mhsa_RoPE_Pipeline_VITIS_LOOP_16_1_second_order_float_sin_K2_ROM_1P_LUTRAM_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component kernel_mhsa_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    ref_4oPi_table_100_U : component kernel_mhsa_RoPE_Pipeline_VITIS_LOOP_16_1_ref_4oPi_table_100_ROM_1P_LUTRAM_1R
    generic map (
        DataWidth => 100,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ref_4oPi_table_100_address0,
        ce0 => ref_4oPi_table_100_ce0_local,
        q0 => ref_4oPi_table_100_q0);

    second_order_float_cos_K0_U : component kernel_mhsa_RoPE_Pipeline_VITIS_LOOP_16_1_second_order_float_cos_K0_ROM_1P_LUTRAM_1R
    generic map (
        DataWidth => 28,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => second_order_float_cos_K0_address0,
        ce0 => second_order_float_cos_K0_ce0_local,
        q0 => second_order_float_cos_K0_q0);

    second_order_float_cos_K1_U : component kernel_mhsa_RoPE_Pipeline_VITIS_LOOP_16_1_second_order_float_cos_K1_ROM_1P_LUTRAM_1R
    generic map (
        DataWidth => 22,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => second_order_float_cos_K1_address0,
        ce0 => second_order_float_cos_K1_ce0_local,
        q0 => second_order_float_cos_K1_q0);

    second_order_float_cos_K2_U : component kernel_mhsa_RoPE_Pipeline_VITIS_LOOP_16_1_second_order_float_cos_K2_ROM_1P_LUTRAM_1R
    generic map (
        DataWidth => 14,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => second_order_float_cos_K2_address0,
        ce0 => second_order_float_cos_K2_ce0_local,
        q0 => second_order_float_cos_K2_q0);

    second_order_float_sin_K0_U : component kernel_mhsa_RoPE_Pipeline_VITIS_LOOP_16_1_second_order_float_sin_K0_ROM_1P_LUTRAM_1R
    generic map (
        DataWidth => 29,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => second_order_float_sin_K0_address0,
        ce0 => second_order_float_sin_K0_ce0_local,
        q0 => second_order_float_sin_K0_q0);

    second_order_float_sin_K1_U : component kernel_mhsa_RoPE_Pipeline_VITIS_LOOP_16_1_second_order_float_sin_K1_ROM_1P_LUTRAM_1R
    generic map (
        DataWidth => 21,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => second_order_float_sin_K1_address0,
        ce0 => second_order_float_sin_K1_ce0_local,
        q0 => second_order_float_sin_K1_q0);

    second_order_float_sin_K2_U : component kernel_mhsa_RoPE_Pipeline_VITIS_LOOP_16_1_second_order_float_sin_K2_ROM_1P_LUTRAM_1R
    generic map (
        DataWidth => 13,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => second_order_float_sin_K2_address0,
        ce0 => second_order_float_sin_K2_ce0_local,
        q0 => second_order_float_sin_K2_q0);

    grp_pow_generic_float_s_fu_749 : component kernel_mhsa_pow_generic_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        exp => y_assign_reg_2441,
        ap_return => grp_pow_generic_float_s_fu_749_ap_return);

    fmul_32ns_32ns_32_1_primitive_dsp_1_U340 : component kernel_mhsa_fmul_32ns_32ns_32_1_primitive_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_758_p0,
        din1 => grp_fu_758_p1,
        dout => grp_fu_758_p2);

    fmul_32ns_32ns_32_1_primitive_dsp_1_U341 : component kernel_mhsa_fmul_32ns_32ns_32_1_primitive_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_763_p0,
        din1 => grp_fu_763_p1,
        dout => grp_fu_763_p2);

    fmul_32ns_32ns_32_1_primitive_dsp_1_U342 : component kernel_mhsa_fmul_32ns_32ns_32_1_primitive_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_768_p0,
        din1 => grp_fu_768_p1,
        dout => grp_fu_768_p2);

    fmul_32ns_32ns_32_1_primitive_dsp_1_U343 : component kernel_mhsa_fmul_32ns_32ns_32_1_primitive_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_772_p0,
        din1 => grp_fu_772_p1,
        dout => grp_fu_772_p2);

    fmul_32ns_32ns_32_1_primitive_dsp_1_U344 : component kernel_mhsa_fmul_32ns_32ns_32_1_primitive_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_776_p0,
        din1 => grp_fu_776_p1,
        dout => grp_fu_776_p2);

    sitofp_32ns_32_3_no_dsp_1_U345 : component kernel_mhsa_sitofp_32ns_32_3_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_780_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_780_p1);

    fmadd_32ns_32ns_32ns_32ns_32_2_primitive_dsp_1_U346 : component kernel_mhsa_fmadd_32ns_32ns_32ns_32ns_32_2_primitive_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_0,
        din1 => tmp_13_reg_2859,
        din2 => s_out_2_reg_2799_pp0_iter35_reg,
        din3 => mul5_reg_2873,
        ce => ap_const_logic_1,
        dout => grp_fu_783_p4);

    fmsub_32ns_32ns_32ns_32ns_32_2_primitive_dsp_1_U347 : component kernel_mhsa_fmsub_32ns_32ns_32ns_32ns_32_2_primitive_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_0,
        din1 => tmp_13_reg_2859,
        din2 => c_out_2_reg_2806_pp0_iter35_reg,
        din3 => mul7_reg_2867,
        ce => ap_const_logic_1,
        dout => grp_fu_794_p4);

    mul_29ns_28ns_57_2_1_U348 : component kernel_mhsa_mul_29ns_28ns_57_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 29,
        din1_WIDTH => 28,
        dout_WIDTH => 57)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_805_p0,
        din1 => grp_fu_805_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_805_p2);

    mul_80s_24ns_80_2_1_U349 : component kernel_mhsa_mul_80s_24ns_80_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 80,
        din1_WIDTH => 24,
        dout_WIDTH => 80)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => Med_reg_2492,
        din1 => grp_fu_809_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_809_p2);

    ctlz_30_30_1_1_U350 : component kernel_mhsa_ctlz_30_30_1_1
    generic map (
        din_WIDTH => 30,
        dout_WIDTH => 30)
    port map (
        din => Mx_zeros_fu_1107_p1,
        dout => Mx_zeros_fu_1107_p3);

    mul_15ns_15ns_30_1_1_U351 : component kernel_mhsa_mul_15ns_15ns_30_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 15,
        dout_WIDTH => 30)
    port map (
        din0 => mul_ln69_fu_1229_p0,
        din1 => mul_ln69_fu_1229_p1,
        dout => mul_ln69_fu_1229_p2);

    mul_22ns_22ns_44_1_1_U352 : component kernel_mhsa_mul_22ns_22ns_44_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 22,
        din1_WIDTH => 22,
        dout_WIDTH => 44)
    port map (
        din0 => mul_ln73_fu_1303_p0,
        din1 => mul_ln73_fu_1303_p1,
        dout => mul_ln73_fu_1303_p2);

    mul_15ns_14ns_29_1_1_U353 : component kernel_mhsa_mul_15ns_14ns_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 14,
        dout_WIDTH => 29)
    port map (
        din0 => mul_ln74_fu_1334_p0,
        din1 => mul_ln74_fu_1334_p1,
        dout => mul_ln74_fu_1334_p2);

    mul_22ns_21s_43_1_1_U354 : component kernel_mhsa_mul_22ns_21s_43_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 22,
        din1_WIDTH => 21,
        dout_WIDTH => 43)
    port map (
        din0 => mul_ln78_fu_1365_p0,
        din1 => second_order_float_sin_K1_q0,
        dout => mul_ln78_fu_1365_p2);

    mul_15ns_13s_28_1_1_U355 : component kernel_mhsa_mul_15ns_13s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 13,
        dout_WIDTH => 28)
    port map (
        din0 => mul_ln79_fu_1396_p0,
        din1 => second_order_float_sin_K2_q0,
        dout => mul_ln79_fu_1396_p2);

    ctlz_32_32_1_1_U356 : component kernel_mhsa_ctlz_32_32_1_1
    generic map (
        din_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din => c_3_fu_1515_p1,
        dout => c_3_fu_1515_p3);

    ctlz_32_32_1_1_U357 : component kernel_mhsa_ctlz_32_32_1_1
    generic map (
        din_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din => c_4_fu_1567_p1,
        dout => c_4_fu_1567_p3);

    ctlz_32_32_1_1_U358 : component kernel_mhsa_ctlz_32_32_1_1
    generic map (
        din_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din => c_2_fu_1579_p1,
        dout => c_2_fu_1579_p3);

    ctlz_32_32_1_1_U359 : component kernel_mhsa_ctlz_32_32_1_1
    generic map (
        din_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din => c_1_fu_1625_p1,
        dout => c_1_fu_1625_p3);

    sparsemux_33_4_1_1_1_U360 : component kernel_mhsa_sparsemux_33_4_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 1,
        CASE1 => "0001",
        din1_WIDTH => 1,
        CASE2 => "0010",
        din2_WIDTH => 1,
        CASE3 => "0011",
        din3_WIDTH => 1,
        CASE4 => "0100",
        din4_WIDTH => 1,
        CASE5 => "0101",
        din5_WIDTH => 1,
        CASE6 => "0110",
        din6_WIDTH => 1,
        CASE7 => "0111",
        din7_WIDTH => 1,
        CASE8 => "1000",
        din8_WIDTH => 1,
        CASE9 => "1001",
        din9_WIDTH => 1,
        CASE10 => "1010",
        din10_WIDTH => 1,
        CASE11 => "1011",
        din11_WIDTH => 1,
        CASE12 => "1100",
        din12_WIDTH => 1,
        CASE13 => "1101",
        din13_WIDTH => 1,
        CASE14 => "1110",
        din14_WIDTH => 1,
        CASE15 => "1111",
        din15_WIDTH => 1,
        def_WIDTH => 1,
        sel_WIDTH => 4,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_0,
        din1 => ap_const_lv1_0,
        din2 => ap_const_lv1_1,
        din3 => ap_const_lv1_0,
        din4 => ap_const_lv1_1,
        din5 => ap_const_lv1_1,
        din6 => ap_const_lv1_0,
        din7 => ap_const_lv1_1,
        din8 => ap_const_lv1_1,
        din9 => ap_const_lv1_0,
        din10 => ap_const_lv1_1,
        din11 => ap_const_lv1_1,
        din12 => ap_const_lv1_0,
        din13 => ap_const_lv1_1,
        din14 => ap_const_lv1_0,
        din15 => ap_const_lv1_0,
        def => sin_results_sign_fu_1827_p33,
        sel => index_fu_1821_p3,
        dout => sin_results_sign_fu_1827_p35);

    sparsemux_33_4_1_1_1_U361 : component kernel_mhsa_sparsemux_33_4_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 1,
        CASE1 => "0001",
        din1_WIDTH => 1,
        CASE2 => "0010",
        din2_WIDTH => 1,
        CASE3 => "0011",
        din3_WIDTH => 1,
        CASE4 => "0100",
        din4_WIDTH => 1,
        CASE5 => "0101",
        din5_WIDTH => 1,
        CASE6 => "0110",
        din6_WIDTH => 1,
        CASE7 => "0111",
        din7_WIDTH => 1,
        CASE8 => "1000",
        din8_WIDTH => 1,
        CASE9 => "1001",
        din9_WIDTH => 1,
        CASE10 => "1010",
        din10_WIDTH => 1,
        CASE11 => "1011",
        din11_WIDTH => 1,
        CASE12 => "1100",
        din12_WIDTH => 1,
        CASE13 => "1101",
        din13_WIDTH => 1,
        CASE14 => "1110",
        din14_WIDTH => 1,
        CASE15 => "1111",
        din15_WIDTH => 1,
        def_WIDTH => 1,
        sel_WIDTH => 4,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_0,
        din1 => ap_const_lv1_0,
        din2 => ap_const_lv1_0,
        din3 => ap_const_lv1_1,
        din4 => ap_const_lv1_1,
        din5 => ap_const_lv1_1,
        din6 => ap_const_lv1_1,
        din7 => ap_const_lv1_0,
        din8 => ap_const_lv1_0,
        din9 => ap_const_lv1_1,
        din10 => ap_const_lv1_1,
        din11 => ap_const_lv1_1,
        din12 => ap_const_lv1_1,
        din13 => ap_const_lv1_0,
        din14 => ap_const_lv1_0,
        din15 => ap_const_lv1_0,
        def => cos_results_sign_fu_1899_p33,
        sel => index_fu_1821_p3,
        dout => cos_results_sign_fu_1899_p35);

    sparsemux_17_3_1_1_1_U362 : component kernel_mhsa_sparsemux_17_3_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "000",
        din0_WIDTH => 1,
        CASE1 => "001",
        din1_WIDTH => 1,
        CASE2 => "010",
        din2_WIDTH => 1,
        CASE3 => "011",
        din3_WIDTH => 1,
        CASE4 => "100",
        din4_WIDTH => 1,
        CASE5 => "101",
        din5_WIDTH => 1,
        CASE6 => "110",
        din6_WIDTH => 1,
        CASE7 => "111",
        din7_WIDTH => 1,
        def_WIDTH => 1,
        sel_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_0,
        din1 => ap_const_lv1_1,
        din2 => ap_const_lv1_1,
        din3 => ap_const_lv1_0,
        din4 => ap_const_lv1_0,
        din5 => ap_const_lv1_1,
        din6 => ap_const_lv1_1,
        din7 => ap_const_lv1_0,
        def => tmp_12_fu_2089_p17,
        sel => k_reg_2513_pp0_iter32_reg,
        dout => tmp_12_fu_2089_p19);

    sparsemux_17_4_32_1_1_U363 : component kernel_mhsa_sparsemux_17_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0010",
        din1_WIDTH => 32,
        CASE2 => "0100",
        din2_WIDTH => 32,
        CASE3 => "0110",
        din3_WIDTH => 32,
        CASE4 => "1000",
        din4_WIDTH => 32,
        CASE5 => "1010",
        din5_WIDTH => 32,
        CASE6 => "1100",
        din6_WIDTH => 32,
        CASE7 => "1110",
        din7_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => in_1_q0,
        din1 => in_3_q0,
        din2 => in_5_q0,
        din3 => in_7_q0,
        din4 => in_9_q0,
        din5 => in_11_q0,
        din6 => in_13_q0,
        din7 => in_15_q0,
        def => tmp_14_fu_2228_p17,
        sel => trunc_ln16_reg_2396_pp0_iter33_reg,
        dout => tmp_14_fu_2228_p19);

    sparsemux_17_4_32_1_1_U364 : component kernel_mhsa_sparsemux_17_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0010",
        din1_WIDTH => 32,
        CASE2 => "0100",
        din2_WIDTH => 32,
        CASE3 => "0110",
        din3_WIDTH => 32,
        CASE4 => "1000",
        din4_WIDTH => 32,
        CASE5 => "1010",
        din5_WIDTH => 32,
        CASE6 => "1100",
        din6_WIDTH => 32,
        CASE7 => "1110",
        din7_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => in_0_q0,
        din1 => in_2_q0,
        din2 => in_4_q0,
        din3 => in_6_q0,
        din4 => in_8_q0,
        din5 => in_10_q0,
        din6 => in_12_q0,
        din7 => in_14_q0,
        def => tmp_13_fu_2283_p17,
        sel => trunc_ln16_reg_2396_pp0_iter34_reg,
        dout => tmp_13_fu_2283_p19);

    flow_control_loop_pipe_sequential_init_U : component kernel_mhsa_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter37_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter29 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter30 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter31 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter32 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter33 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter34 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter35 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter36 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter37_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter37 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter37_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_exit_ready_pp0_iter36_reg = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                ap_loop_exit_ready_pp0_iter37_reg <= ap_const_logic_0;
            elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
            end if; 
        end if;
    end process;

    i183_fu_336_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then 
                    i183_fu_336 <= i_fu_871_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i183_fu_336 <= ap_const_lv10_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                A_reg_2563 <= select_ln506_1_fu_1187_p3(28 downto 22);
                B_reg_2557 <= B_fu_1194_p1;
                B_reg_2557_pp0_iter28_reg <= B_reg_2557;
                B_trunc_reg_2568 <= select_ln506_1_fu_1187_p3(21 downto 7);
                Ex_1_reg_2529 <= Ex_1_fu_1128_p2;
                Ex_1_reg_2529_pp0_iter27_reg <= Ex_1_reg_2529;
                Ex_1_reg_2529_pp0_iter28_reg <= Ex_1_reg_2529_pp0_iter27_reg;
                Ex_1_reg_2529_pp0_iter29_reg <= Ex_1_reg_2529_pp0_iter28_reg;
                Ex_1_reg_2529_pp0_iter30_reg <= Ex_1_reg_2529_pp0_iter29_reg;
                Ex_1_reg_2529_pp0_iter31_reg <= Ex_1_reg_2529_pp0_iter30_reg;
                Ex_1_reg_2529_pp0_iter32_reg <= Ex_1_reg_2529_pp0_iter31_reg;
                Med_reg_2492 <= shl_ln379_fu_986_p2(99 downto 20);
                Mx_bits_3_reg_2519 <= Mx_bits_3_fu_1072_p3;
                add_ln75_1_reg_2639 <= add_ln75_1_fu_1433_p2;
                add_ln75_1_reg_2639_pp0_iter31_reg <= add_ln75_1_reg_2639;
                add_ln80_1_reg_2644 <= add_ln80_1_fu_1455_p2;
                and_ln179_reg_2503 <= and_ln179_fu_1029_p2;
                and_ln179_reg_2503_pp0_iter25_reg <= and_ln179_reg_2503;
                and_ln179_reg_2503_pp0_iter26_reg <= and_ln179_reg_2503_pp0_iter25_reg;
                and_ln179_reg_2503_pp0_iter27_reg <= and_ln179_reg_2503_pp0_iter26_reg;
                and_ln179_reg_2503_pp0_iter28_reg <= and_ln179_reg_2503_pp0_iter27_reg;
                and_ln179_reg_2503_pp0_iter29_reg <= and_ln179_reg_2503_pp0_iter28_reg;
                and_ln179_reg_2503_pp0_iter30_reg <= and_ln179_reg_2503_pp0_iter29_reg;
                and_ln179_reg_2503_pp0_iter31_reg <= and_ln179_reg_2503_pp0_iter30_reg;
                and_ln179_reg_2503_pp0_iter32_reg <= and_ln179_reg_2503_pp0_iter31_reg;
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
                ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
                ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
                ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
                ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
                ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
                ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
                ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
                ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
                ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
                ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
                ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
                ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
                ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
                ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
                ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
                ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
                ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
                ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
                ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
                ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
                ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
                ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                c_2_reg_2691 <= c_2_fu_1579_p3;
                c_3_reg_2669 <= c_3_fu_1515_p3;
                c_4_reg_2680 <= c_4_fu_1567_p3;
                c_out_2_reg_2806 <= c_out_2_fu_2189_p3;
                c_out_2_reg_2806_pp0_iter35_reg <= c_out_2_reg_2806;
                closepath_reg_2476 <= closepath_fu_940_p2;
                closepath_reg_2476_pp0_iter23_reg <= closepath_reg_2476;
                closepath_reg_2476_pp0_iter24_reg <= closepath_reg_2476_pp0_iter23_reg;
                closepath_reg_2476_pp0_iter25_reg <= closepath_reg_2476_pp0_iter24_reg;
                cos_result_reg_2659 <= cos_result_fu_1479_p2;
                cos_results_exp_1_reg_2743 <= cos_results_exp_1_fu_2065_p3;
                cos_results_sig_1_reg_2748 <= cos_results_sig_1_fu_2081_p3;
                cos_results_sign_2_reg_2738 <= cos_results_sign_2_fu_2048_p2;
                din_exp_reg_2463 <= data_fu_917_p1(30 downto 23);
                din_exp_reg_2463_pp0_iter23_reg <= din_exp_reg_2463;
                din_exp_reg_2463_pp0_iter24_reg <= din_exp_reg_2463_pp0_iter23_reg;
                din_exp_reg_2463_pp0_iter25_reg <= din_exp_reg_2463_pp0_iter24_reg;
                din_sig_reg_2470 <= din_sig_fu_936_p1;
                din_sig_reg_2470_pp0_iter23_reg <= din_sig_reg_2470;
                din_sign_reg_2457 <= data_fu_917_p1(31 downto 31);
                din_sign_reg_2457_pp0_iter23_reg <= din_sign_reg_2457;
                din_sign_reg_2457_pp0_iter24_reg <= din_sign_reg_2457_pp0_iter23_reg;
                din_sign_reg_2457_pp0_iter25_reg <= din_sign_reg_2457_pp0_iter24_reg;
                din_sign_reg_2457_pp0_iter26_reg <= din_sign_reg_2457_pp0_iter25_reg;
                din_sign_reg_2457_pp0_iter27_reg <= din_sign_reg_2457_pp0_iter26_reg;
                din_sign_reg_2457_pp0_iter28_reg <= din_sign_reg_2457_pp0_iter27_reg;
                din_sign_reg_2457_pp0_iter29_reg <= din_sign_reg_2457_pp0_iter28_reg;
                din_sign_reg_2457_pp0_iter30_reg <= din_sign_reg_2457_pp0_iter29_reg;
                din_sign_reg_2457_pp0_iter31_reg <= din_sign_reg_2457_pp0_iter30_reg;
                din_sign_reg_2457_pp0_iter32_reg <= din_sign_reg_2457_pp0_iter31_reg;
                icmp_ln186_reg_2548 <= icmp_ln186_fu_1152_p2;
                icmp_ln186_reg_2548_pp0_iter27_reg <= icmp_ln186_reg_2548;
                icmp_ln186_reg_2548_pp0_iter28_reg <= icmp_ln186_reg_2548_pp0_iter27_reg;
                icmp_ln186_reg_2548_pp0_iter29_reg <= icmp_ln186_reg_2548_pp0_iter28_reg;
                icmp_ln186_reg_2548_pp0_iter30_reg <= icmp_ln186_reg_2548_pp0_iter29_reg;
                icmp_ln186_reg_2548_pp0_iter31_reg <= icmp_ln186_reg_2548_pp0_iter30_reg;
                icmp_ln186_reg_2548_pp0_iter32_reg <= icmp_ln186_reg_2548_pp0_iter31_reg;
                icmp_ln306_reg_2706 <= icmp_ln306_fu_1601_p2;
                k_reg_2513 <= k_fu_1055_p3;
                k_reg_2513_pp0_iter26_reg <= k_reg_2513;
                k_reg_2513_pp0_iter27_reg <= k_reg_2513_pp0_iter26_reg;
                k_reg_2513_pp0_iter28_reg <= k_reg_2513_pp0_iter27_reg;
                k_reg_2513_pp0_iter29_reg <= k_reg_2513_pp0_iter28_reg;
                k_reg_2513_pp0_iter30_reg <= k_reg_2513_pp0_iter29_reg;
                k_reg_2513_pp0_iter31_reg <= k_reg_2513_pp0_iter30_reg;
                k_reg_2513_pp0_iter32_reg <= k_reg_2513_pp0_iter31_reg;
                lshr_ln16_2_reg_2411_pp0_iter10_reg <= lshr_ln16_2_reg_2411_pp0_iter9_reg;
                lshr_ln16_2_reg_2411_pp0_iter11_reg <= lshr_ln16_2_reg_2411_pp0_iter10_reg;
                lshr_ln16_2_reg_2411_pp0_iter12_reg <= lshr_ln16_2_reg_2411_pp0_iter11_reg;
                lshr_ln16_2_reg_2411_pp0_iter13_reg <= lshr_ln16_2_reg_2411_pp0_iter12_reg;
                lshr_ln16_2_reg_2411_pp0_iter14_reg <= lshr_ln16_2_reg_2411_pp0_iter13_reg;
                lshr_ln16_2_reg_2411_pp0_iter15_reg <= lshr_ln16_2_reg_2411_pp0_iter14_reg;
                lshr_ln16_2_reg_2411_pp0_iter16_reg <= lshr_ln16_2_reg_2411_pp0_iter15_reg;
                lshr_ln16_2_reg_2411_pp0_iter17_reg <= lshr_ln16_2_reg_2411_pp0_iter16_reg;
                lshr_ln16_2_reg_2411_pp0_iter18_reg <= lshr_ln16_2_reg_2411_pp0_iter17_reg;
                lshr_ln16_2_reg_2411_pp0_iter19_reg <= lshr_ln16_2_reg_2411_pp0_iter18_reg;
                lshr_ln16_2_reg_2411_pp0_iter20_reg <= lshr_ln16_2_reg_2411_pp0_iter19_reg;
                lshr_ln16_2_reg_2411_pp0_iter21_reg <= lshr_ln16_2_reg_2411_pp0_iter20_reg;
                lshr_ln16_2_reg_2411_pp0_iter22_reg <= lshr_ln16_2_reg_2411_pp0_iter21_reg;
                lshr_ln16_2_reg_2411_pp0_iter23_reg <= lshr_ln16_2_reg_2411_pp0_iter22_reg;
                lshr_ln16_2_reg_2411_pp0_iter24_reg <= lshr_ln16_2_reg_2411_pp0_iter23_reg;
                lshr_ln16_2_reg_2411_pp0_iter25_reg <= lshr_ln16_2_reg_2411_pp0_iter24_reg;
                lshr_ln16_2_reg_2411_pp0_iter26_reg <= lshr_ln16_2_reg_2411_pp0_iter25_reg;
                lshr_ln16_2_reg_2411_pp0_iter27_reg <= lshr_ln16_2_reg_2411_pp0_iter26_reg;
                lshr_ln16_2_reg_2411_pp0_iter28_reg <= lshr_ln16_2_reg_2411_pp0_iter27_reg;
                lshr_ln16_2_reg_2411_pp0_iter29_reg <= lshr_ln16_2_reg_2411_pp0_iter28_reg;
                lshr_ln16_2_reg_2411_pp0_iter2_reg <= lshr_ln16_2_reg_2411_pp0_iter1_reg;
                lshr_ln16_2_reg_2411_pp0_iter30_reg <= lshr_ln16_2_reg_2411_pp0_iter29_reg;
                lshr_ln16_2_reg_2411_pp0_iter31_reg <= lshr_ln16_2_reg_2411_pp0_iter30_reg;
                lshr_ln16_2_reg_2411_pp0_iter32_reg <= lshr_ln16_2_reg_2411_pp0_iter31_reg;
                lshr_ln16_2_reg_2411_pp0_iter3_reg <= lshr_ln16_2_reg_2411_pp0_iter2_reg;
                lshr_ln16_2_reg_2411_pp0_iter4_reg <= lshr_ln16_2_reg_2411_pp0_iter3_reg;
                lshr_ln16_2_reg_2411_pp0_iter5_reg <= lshr_ln16_2_reg_2411_pp0_iter4_reg;
                lshr_ln16_2_reg_2411_pp0_iter6_reg <= lshr_ln16_2_reg_2411_pp0_iter5_reg;
                lshr_ln16_2_reg_2411_pp0_iter7_reg <= lshr_ln16_2_reg_2411_pp0_iter6_reg;
                lshr_ln16_2_reg_2411_pp0_iter8_reg <= lshr_ln16_2_reg_2411_pp0_iter7_reg;
                lshr_ln16_2_reg_2411_pp0_iter9_reg <= lshr_ln16_2_reg_2411_pp0_iter8_reg;
                lshr_ln_reg_2406_pp0_iter10_reg <= lshr_ln_reg_2406_pp0_iter9_reg;
                lshr_ln_reg_2406_pp0_iter11_reg <= lshr_ln_reg_2406_pp0_iter10_reg;
                lshr_ln_reg_2406_pp0_iter12_reg <= lshr_ln_reg_2406_pp0_iter11_reg;
                lshr_ln_reg_2406_pp0_iter13_reg <= lshr_ln_reg_2406_pp0_iter12_reg;
                lshr_ln_reg_2406_pp0_iter14_reg <= lshr_ln_reg_2406_pp0_iter13_reg;
                lshr_ln_reg_2406_pp0_iter15_reg <= lshr_ln_reg_2406_pp0_iter14_reg;
                lshr_ln_reg_2406_pp0_iter16_reg <= lshr_ln_reg_2406_pp0_iter15_reg;
                lshr_ln_reg_2406_pp0_iter17_reg <= lshr_ln_reg_2406_pp0_iter16_reg;
                lshr_ln_reg_2406_pp0_iter18_reg <= lshr_ln_reg_2406_pp0_iter17_reg;
                lshr_ln_reg_2406_pp0_iter19_reg <= lshr_ln_reg_2406_pp0_iter18_reg;
                lshr_ln_reg_2406_pp0_iter20_reg <= lshr_ln_reg_2406_pp0_iter19_reg;
                lshr_ln_reg_2406_pp0_iter21_reg <= lshr_ln_reg_2406_pp0_iter20_reg;
                lshr_ln_reg_2406_pp0_iter22_reg <= lshr_ln_reg_2406_pp0_iter21_reg;
                lshr_ln_reg_2406_pp0_iter23_reg <= lshr_ln_reg_2406_pp0_iter22_reg;
                lshr_ln_reg_2406_pp0_iter24_reg <= lshr_ln_reg_2406_pp0_iter23_reg;
                lshr_ln_reg_2406_pp0_iter25_reg <= lshr_ln_reg_2406_pp0_iter24_reg;
                lshr_ln_reg_2406_pp0_iter26_reg <= lshr_ln_reg_2406_pp0_iter25_reg;
                lshr_ln_reg_2406_pp0_iter27_reg <= lshr_ln_reg_2406_pp0_iter26_reg;
                lshr_ln_reg_2406_pp0_iter28_reg <= lshr_ln_reg_2406_pp0_iter27_reg;
                lshr_ln_reg_2406_pp0_iter29_reg <= lshr_ln_reg_2406_pp0_iter28_reg;
                lshr_ln_reg_2406_pp0_iter2_reg <= lshr_ln_reg_2406_pp0_iter1_reg;
                lshr_ln_reg_2406_pp0_iter30_reg <= lshr_ln_reg_2406_pp0_iter29_reg;
                lshr_ln_reg_2406_pp0_iter31_reg <= lshr_ln_reg_2406_pp0_iter30_reg;
                lshr_ln_reg_2406_pp0_iter32_reg <= lshr_ln_reg_2406_pp0_iter31_reg;
                lshr_ln_reg_2406_pp0_iter33_reg <= lshr_ln_reg_2406_pp0_iter32_reg;
                lshr_ln_reg_2406_pp0_iter34_reg <= lshr_ln_reg_2406_pp0_iter33_reg;
                lshr_ln_reg_2406_pp0_iter35_reg <= lshr_ln_reg_2406_pp0_iter34_reg;
                lshr_ln_reg_2406_pp0_iter36_reg <= lshr_ln_reg_2406_pp0_iter35_reg;
                lshr_ln_reg_2406_pp0_iter3_reg <= lshr_ln_reg_2406_pp0_iter2_reg;
                lshr_ln_reg_2406_pp0_iter4_reg <= lshr_ln_reg_2406_pp0_iter3_reg;
                lshr_ln_reg_2406_pp0_iter5_reg <= lshr_ln_reg_2406_pp0_iter4_reg;
                lshr_ln_reg_2406_pp0_iter6_reg <= lshr_ln_reg_2406_pp0_iter5_reg;
                lshr_ln_reg_2406_pp0_iter7_reg <= lshr_ln_reg_2406_pp0_iter6_reg;
                lshr_ln_reg_2406_pp0_iter8_reg <= lshr_ln_reg_2406_pp0_iter7_reg;
                lshr_ln_reg_2406_pp0_iter9_reg <= lshr_ln_reg_2406_pp0_iter8_reg;
                mul5_reg_2873 <= grp_fu_776_p2;
                mul7_reg_2867 <= grp_fu_772_p2;
                mul_reg_2435 <= grp_fu_758_p2;
                s_out_2_reg_2799 <= s_out_2_fu_2182_p3;
                s_out_2_reg_2799_pp0_iter35_reg <= s_out_2_reg_2799;
                sin_results_exp_1_reg_2728 <= sin_results_exp_1_fu_2029_p3;
                sin_results_sig_1_reg_2733 <= sin_results_sig_1_fu_2036_p3;
                sin_results_sign_2_reg_2723 <= sin_results_sign_2_fu_2023_p3;
                tmp_12_reg_2753 <= tmp_12_fu_2089_p19;
                tmp_13_reg_2859 <= tmp_13_fu_2283_p19;
                tmp_19_reg_2536 <= Ex_1_fu_1128_p2(7 downto 7);
                tmp_1_reg_2542 <= shl_ln504_fu_1119_p2(57 downto 29);
                tmp_1_reg_2542_pp0_iter27_reg <= tmp_1_reg_2542;
                tmp_1_reg_2542_pp0_iter28_reg <= tmp_1_reg_2542_pp0_iter27_reg;
                tmp_1_reg_2542_pp0_iter29_reg <= tmp_1_reg_2542_pp0_iter28_reg;
                tmp_1_reg_2542_pp0_iter30_reg <= tmp_1_reg_2542_pp0_iter29_reg;
                tmp_2_reg_2614 <= mul_ln73_fu_1303_p2(43 downto 23);
                tmp_3_reg_2583 <= mul_ln69_fu_1229_p2(29 downto 15);
                tmp_4_reg_2619 <= mul_ln74_fu_1334_p2(28 downto 16);
                tmp_s_reg_2524 <= Mx_bits_3_fu_1072_p3(57 downto 29);
                trunc_ln16_1_reg_2402_pp0_iter10_reg <= trunc_ln16_1_reg_2402_pp0_iter9_reg;
                trunc_ln16_1_reg_2402_pp0_iter11_reg <= trunc_ln16_1_reg_2402_pp0_iter10_reg;
                trunc_ln16_1_reg_2402_pp0_iter12_reg <= trunc_ln16_1_reg_2402_pp0_iter11_reg;
                trunc_ln16_1_reg_2402_pp0_iter13_reg <= trunc_ln16_1_reg_2402_pp0_iter12_reg;
                trunc_ln16_1_reg_2402_pp0_iter14_reg <= trunc_ln16_1_reg_2402_pp0_iter13_reg;
                trunc_ln16_1_reg_2402_pp0_iter15_reg <= trunc_ln16_1_reg_2402_pp0_iter14_reg;
                trunc_ln16_1_reg_2402_pp0_iter16_reg <= trunc_ln16_1_reg_2402_pp0_iter15_reg;
                trunc_ln16_1_reg_2402_pp0_iter17_reg <= trunc_ln16_1_reg_2402_pp0_iter16_reg;
                trunc_ln16_1_reg_2402_pp0_iter18_reg <= trunc_ln16_1_reg_2402_pp0_iter17_reg;
                trunc_ln16_1_reg_2402_pp0_iter19_reg <= trunc_ln16_1_reg_2402_pp0_iter18_reg;
                trunc_ln16_1_reg_2402_pp0_iter20_reg <= trunc_ln16_1_reg_2402_pp0_iter19_reg;
                trunc_ln16_1_reg_2402_pp0_iter21_reg <= trunc_ln16_1_reg_2402_pp0_iter20_reg;
                trunc_ln16_1_reg_2402_pp0_iter22_reg <= trunc_ln16_1_reg_2402_pp0_iter21_reg;
                trunc_ln16_1_reg_2402_pp0_iter23_reg <= trunc_ln16_1_reg_2402_pp0_iter22_reg;
                trunc_ln16_1_reg_2402_pp0_iter24_reg <= trunc_ln16_1_reg_2402_pp0_iter23_reg;
                trunc_ln16_1_reg_2402_pp0_iter25_reg <= trunc_ln16_1_reg_2402_pp0_iter24_reg;
                trunc_ln16_1_reg_2402_pp0_iter26_reg <= trunc_ln16_1_reg_2402_pp0_iter25_reg;
                trunc_ln16_1_reg_2402_pp0_iter27_reg <= trunc_ln16_1_reg_2402_pp0_iter26_reg;
                trunc_ln16_1_reg_2402_pp0_iter28_reg <= trunc_ln16_1_reg_2402_pp0_iter27_reg;
                trunc_ln16_1_reg_2402_pp0_iter29_reg <= trunc_ln16_1_reg_2402_pp0_iter28_reg;
                trunc_ln16_1_reg_2402_pp0_iter2_reg <= trunc_ln16_1_reg_2402_pp0_iter1_reg;
                trunc_ln16_1_reg_2402_pp0_iter30_reg <= trunc_ln16_1_reg_2402_pp0_iter29_reg;
                trunc_ln16_1_reg_2402_pp0_iter31_reg <= trunc_ln16_1_reg_2402_pp0_iter30_reg;
                trunc_ln16_1_reg_2402_pp0_iter32_reg <= trunc_ln16_1_reg_2402_pp0_iter31_reg;
                trunc_ln16_1_reg_2402_pp0_iter33_reg <= trunc_ln16_1_reg_2402_pp0_iter32_reg;
                trunc_ln16_1_reg_2402_pp0_iter34_reg <= trunc_ln16_1_reg_2402_pp0_iter33_reg;
                trunc_ln16_1_reg_2402_pp0_iter35_reg <= trunc_ln16_1_reg_2402_pp0_iter34_reg;
                trunc_ln16_1_reg_2402_pp0_iter36_reg <= trunc_ln16_1_reg_2402_pp0_iter35_reg;
                trunc_ln16_1_reg_2402_pp0_iter3_reg <= trunc_ln16_1_reg_2402_pp0_iter2_reg;
                trunc_ln16_1_reg_2402_pp0_iter4_reg <= trunc_ln16_1_reg_2402_pp0_iter3_reg;
                trunc_ln16_1_reg_2402_pp0_iter5_reg <= trunc_ln16_1_reg_2402_pp0_iter4_reg;
                trunc_ln16_1_reg_2402_pp0_iter6_reg <= trunc_ln16_1_reg_2402_pp0_iter5_reg;
                trunc_ln16_1_reg_2402_pp0_iter7_reg <= trunc_ln16_1_reg_2402_pp0_iter6_reg;
                trunc_ln16_1_reg_2402_pp0_iter8_reg <= trunc_ln16_1_reg_2402_pp0_iter7_reg;
                trunc_ln16_1_reg_2402_pp0_iter9_reg <= trunc_ln16_1_reg_2402_pp0_iter8_reg;
                trunc_ln16_reg_2396_pp0_iter10_reg <= trunc_ln16_reg_2396_pp0_iter9_reg;
                trunc_ln16_reg_2396_pp0_iter11_reg <= trunc_ln16_reg_2396_pp0_iter10_reg;
                trunc_ln16_reg_2396_pp0_iter12_reg <= trunc_ln16_reg_2396_pp0_iter11_reg;
                trunc_ln16_reg_2396_pp0_iter13_reg <= trunc_ln16_reg_2396_pp0_iter12_reg;
                trunc_ln16_reg_2396_pp0_iter14_reg <= trunc_ln16_reg_2396_pp0_iter13_reg;
                trunc_ln16_reg_2396_pp0_iter15_reg <= trunc_ln16_reg_2396_pp0_iter14_reg;
                trunc_ln16_reg_2396_pp0_iter16_reg <= trunc_ln16_reg_2396_pp0_iter15_reg;
                trunc_ln16_reg_2396_pp0_iter17_reg <= trunc_ln16_reg_2396_pp0_iter16_reg;
                trunc_ln16_reg_2396_pp0_iter18_reg <= trunc_ln16_reg_2396_pp0_iter17_reg;
                trunc_ln16_reg_2396_pp0_iter19_reg <= trunc_ln16_reg_2396_pp0_iter18_reg;
                trunc_ln16_reg_2396_pp0_iter20_reg <= trunc_ln16_reg_2396_pp0_iter19_reg;
                trunc_ln16_reg_2396_pp0_iter21_reg <= trunc_ln16_reg_2396_pp0_iter20_reg;
                trunc_ln16_reg_2396_pp0_iter22_reg <= trunc_ln16_reg_2396_pp0_iter21_reg;
                trunc_ln16_reg_2396_pp0_iter23_reg <= trunc_ln16_reg_2396_pp0_iter22_reg;
                trunc_ln16_reg_2396_pp0_iter24_reg <= trunc_ln16_reg_2396_pp0_iter23_reg;
                trunc_ln16_reg_2396_pp0_iter25_reg <= trunc_ln16_reg_2396_pp0_iter24_reg;
                trunc_ln16_reg_2396_pp0_iter26_reg <= trunc_ln16_reg_2396_pp0_iter25_reg;
                trunc_ln16_reg_2396_pp0_iter27_reg <= trunc_ln16_reg_2396_pp0_iter26_reg;
                trunc_ln16_reg_2396_pp0_iter28_reg <= trunc_ln16_reg_2396_pp0_iter27_reg;
                trunc_ln16_reg_2396_pp0_iter29_reg <= trunc_ln16_reg_2396_pp0_iter28_reg;
                trunc_ln16_reg_2396_pp0_iter2_reg <= trunc_ln16_reg_2396_pp0_iter1_reg;
                trunc_ln16_reg_2396_pp0_iter30_reg <= trunc_ln16_reg_2396_pp0_iter29_reg;
                trunc_ln16_reg_2396_pp0_iter31_reg <= trunc_ln16_reg_2396_pp0_iter30_reg;
                trunc_ln16_reg_2396_pp0_iter32_reg <= trunc_ln16_reg_2396_pp0_iter31_reg;
                trunc_ln16_reg_2396_pp0_iter33_reg <= trunc_ln16_reg_2396_pp0_iter32_reg;
                trunc_ln16_reg_2396_pp0_iter34_reg <= trunc_ln16_reg_2396_pp0_iter33_reg;
                trunc_ln16_reg_2396_pp0_iter3_reg <= trunc_ln16_reg_2396_pp0_iter2_reg;
                trunc_ln16_reg_2396_pp0_iter4_reg <= trunc_ln16_reg_2396_pp0_iter3_reg;
                trunc_ln16_reg_2396_pp0_iter5_reg <= trunc_ln16_reg_2396_pp0_iter4_reg;
                trunc_ln16_reg_2396_pp0_iter6_reg <= trunc_ln16_reg_2396_pp0_iter5_reg;
                trunc_ln16_reg_2396_pp0_iter7_reg <= trunc_ln16_reg_2396_pp0_iter6_reg;
                trunc_ln16_reg_2396_pp0_iter8_reg <= trunc_ln16_reg_2396_pp0_iter7_reg;
                trunc_ln16_reg_2396_pp0_iter9_reg <= trunc_ln16_reg_2396_pp0_iter8_reg;
                trunc_ln1_reg_2609 <= second_order_float_cos_K0_q0(27 downto 1);
                trunc_ln276_reg_2664 <= trunc_ln276_fu_1511_p1;
                trunc_ln281_2_reg_2685 <= trunc_ln281_2_fu_1575_p1;
                trunc_ln281_3_reg_2696 <= trunc_ln281_3_fu_1587_p1;
                trunc_ln281_reg_2674 <= trunc_ln281_fu_1523_p1;
                trunc_ln2_reg_2624 <= mul_ln78_fu_1365_p2(42 downto 23);
                trunc_ln379_reg_2487 <= trunc_ln379_fu_979_p1;
                trunc_ln3_reg_2629 <= mul_ln79_fu_1396_p2(27 downto 16);
                trunc_ln4_reg_2634 <= second_order_float_sin_K0_q0(28 downto 1);
                trunc_ln6_reg_2701 <= grp_fu_805_p2(55 downto 29);
                val_reg_2452 <= grp_fu_768_p2;
                y_assign_reg_2441 <= grp_fu_763_p2;
                    zext_ln16_1_reg_2711(5 downto 0) <= zext_ln16_1_fu_1607_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                head_dim_reg_2416 <= head_dim_fu_857_p1;
                lshr_ln16_2_reg_2411 <= ap_sig_allocacmp_i183_load(9 downto 4);
                lshr_ln16_2_reg_2411_pp0_iter1_reg <= lshr_ln16_2_reg_2411;
                lshr_ln_reg_2406 <= ap_sig_allocacmp_i183_load(9 downto 3);
                lshr_ln_reg_2406_pp0_iter1_reg <= lshr_ln_reg_2406;
                trunc_ln16_1_reg_2402 <= trunc_ln16_1_fu_833_p1;
                trunc_ln16_1_reg_2402_pp0_iter1_reg <= trunc_ln16_1_reg_2402;
                trunc_ln16_reg_2396 <= trunc_ln16_fu_829_p1;
                trunc_ln16_reg_2396_pp0_iter1_reg <= trunc_ln16_reg_2396;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                grp_fu_758_p0 <= grp_fu_780_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                grp_fu_763_p0 <= mul_reg_2435;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                grp_fu_768_p0 <= conv;
                grp_fu_768_p1 <= tmp_reg_2446;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter34 = ap_const_logic_1))) then
                grp_fu_772_p0 <= tmp_14_fu_2228_p19;
                grp_fu_772_p1 <= s_out_2_fu_2182_p3;
                grp_fu_776_p0 <= tmp_14_fu_2228_p19;
                grp_fu_776_p1 <= c_out_2_fu_2189_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp95)) then
                tmp_reg_2446 <= grp_pow_generic_float_s_fu_749_ap_return;
            end if;
        end if;
    end process;
    zext_ln16_1_reg_2711(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    B_fu_1194_p1 <= select_ln506_1_fu_1187_p3(22 - 1 downto 0);
    Ex_1_fu_1128_p2 <= std_logic_vector(unsigned(select_ln453_fu_1093_p3) - unsigned(trunc_ln505_fu_1124_p1));
    Ex_fu_1088_p2 <= std_logic_vector(unsigned(din_exp_reg_2463_pp0_iter25_reg) + unsigned(ap_const_lv8_83));
    Mx_bits_1_fu_1066_p2 <= std_logic_vector(unsigned(ap_const_lv58_0) - unsigned(Mx_bits_fu_1035_p4));
    Mx_bits_3_fu_1072_p3 <= 
        Mx_bits_1_fu_1066_p2 when (trunc_ln491_fu_1062_p1(0) = '1') else 
        Mx_bits_fu_1035_p4;
    Mx_bits_fu_1035_p4 <= grp_fu_809_p2(76 downto 19);
    Mx_zeros_fu_1107_p1 <= (tmp_s_reg_2524 & ap_const_lv1_1);
    X_fu_1000_p3 <= (ap_const_lv1_1 & din_sig_reg_2470_pp0_iter23_reg);
    add_ln300_fu_1764_p2 <= std_logic_vector(signed(sext_ln163_fu_1719_p1) + signed(ap_const_lv9_7F));
    add_ln376_fu_946_p2 <= std_logic_vector(unsigned(din_exp_fu_928_p3) + unsigned(ap_const_lv8_C2));
    add_ln75_1_fu_1433_p2 <= std_logic_vector(unsigned(add_ln75_fu_1428_p2) + unsigned(zext_ln73_2_fu_1422_p1));
    add_ln75_fu_1428_p2 <= std_logic_vector(unsigned(trunc_ln1_reg_2609) + unsigned(zext_ln74_2_fu_1425_p1));
    add_ln80_1_fu_1455_p2 <= std_logic_vector(signed(sext_ln80_2_fu_1451_p1) + signed(trunc_ln4_reg_2634));
    add_ln80_fu_1445_p2 <= std_logic_vector(signed(sext_ln80_fu_1439_p1) + signed(sext_ln80_1_fu_1442_p1));
    addr_fu_952_p3 <= 
        ap_const_lv8_3F when (closepath_fu_940_p2(0) = '1') else 
        add_ln376_fu_946_p2;
    and_ln179_fu_1029_p2 <= (icmp_ln179_fu_1019_p2 and icmp_ln179_1_fu_1024_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001_ignoreCallOp95 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_ignoreCallOp83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln16_fu_877_p2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln16_fu_877_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter37_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter37_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_idle_pp0 = ap_const_logic_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_enable_reg_pp0_iter32, ap_enable_reg_pp0_iter33, ap_enable_reg_pp0_iter34, ap_enable_reg_pp0_iter35, ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter37)
    begin
        if (((ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = 
    ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter37 = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_0) and (ap_enable_reg_pp0_iter35 = ap_const_logic_0) and (ap_enable_reg_pp0_iter34 = ap_const_logic_0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i183_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i183_fu_336, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_i183_load <= ap_const_lv10_0;
        else 
            ap_sig_allocacmp_i183_load <= i183_fu_336;
        end if; 
    end process;

    c_1_fu_1625_p1 <= (trunc_ln276_reg_2664 & ap_const_lv19_40000);
    c_2_fu_1579_p1 <= (tmp_9_fu_1549_p4 & ap_const_lv19_40000);
    c_3_fu_1515_p1 <= (tmp_5_fu_1495_p3 & ap_const_lv16_8000);
    c_4_fu_1567_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_bits_4_fu_1537_p3),32));
    c_out_2_fu_2189_p3 <= 
        c_out_fu_2178_p1 when (tmp_12_reg_2753(0) = '1') else 
        s_out_fu_2174_p1;
    c_out_fu_2178_p1 <= t_4_fu_2167_p4;
    closepath_fu_940_p2 <= "1" when (unsigned(din_exp_fu_928_p3) < unsigned(ap_const_lv8_7E)) else "0";
    cos_result_fu_1479_p2 <= std_logic_vector(signed(ap_const_lv29_10000000) - signed(zext_ln75_fu_1476_p1));
    cos_results_exp_1_fu_2065_p3 <= 
        cos_results_exp_3_fu_2054_p3 when (empty_503_fu_2061_p2(0) = '1') else 
        out_exp_fu_1687_p1;
    cos_results_exp_3_fu_2054_p3 <= 
        ap_const_lv8_7F when (and_ln179_reg_2503_pp0_iter32_reg(0) = '1') else 
        ap_const_lv8_FF;
    cos_results_sig_1_fu_2081_p3 <= 
        cos_results_sig_3_cast_fu_2073_p3 when (empty_503_fu_2061_p2(0) = '1') else 
        significand_fu_1711_p3;
    cos_results_sig_3_cast_fu_2073_p3 <= 
        ap_const_lv23_7FFFFF when (not_and_ln179_fu_2043_p2(0) = '1') else 
        ap_const_lv23_0;
    cos_results_sign_1_fu_2017_p2 <= (xor_ln186_fu_1971_p2 and cos_results_sign_fu_1899_p35);
    cos_results_sign_2_fu_2048_p2 <= (not_and_ln179_fu_2043_p2 and cos_results_sign_1_fu_2017_p2);
    cos_results_sign_fu_1899_p33 <= "X";
    data_fu_917_p1 <= val_reg_2452;
    din_exp_fu_928_p3 <= data_fu_917_p1(30 downto 23);
    din_sig_fu_936_p1 <= data_fu_917_p1(23 - 1 downto 0);
    empty_502_fu_1813_p3 <= 
        tmp_10_fu_1793_p4 when (icmp_ln292_1_fu_1734_p2(0) = '1') else 
        tmp_11_fu_1803_p4;
    empty_503_fu_2061_p2 <= (icmp_ln186_reg_2548_pp0_iter32_reg or and_ln179_reg_2503_pp0_iter32_reg);
    empty_fu_1789_p1 <= newexp_fu_1770_p2(8 - 1 downto 0);
    grp_fu_758_p1 <= ap_const_lv32_C0000000;
    grp_fu_763_p1 <= ap_const_lv32_3C800000;
    grp_fu_780_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(head_dim_reg_2416),32));
    grp_fu_805_p0 <= grp_fu_805_p00(29 - 1 downto 0);
    grp_fu_805_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_reg_2542_pp0_iter30_reg),57));
    grp_fu_805_p1 <= grp_fu_805_p10(28 - 1 downto 0);
    grp_fu_805_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln80_1_reg_2644),57));
    grp_fu_809_p1 <= grp_fu_809_p10(24 - 1 downto 0);
    grp_fu_809_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(X_fu_1000_p3),80));
    head_dim_fu_857_p1 <= ap_sig_allocacmp_i183_load(6 - 1 downto 0);
    i_fu_871_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i183_load) + unsigned(ap_const_lv10_2));
    icmp_ln16_fu_877_p2 <= "1" when (unsigned(i_fu_871_p2) < unsigned(ap_const_lv10_300)) else "0";
    icmp_ln179_1_fu_1024_p2 <= "1" when (din_sig_reg_2470_pp0_iter23_reg = ap_const_lv23_0) else "0";
    icmp_ln179_fu_1019_p2 <= "1" when (din_exp_reg_2463_pp0_iter23_reg = ap_const_lv8_0) else "0";
    icmp_ln186_fu_1152_p2 <= "1" when (din_exp_reg_2463_pp0_iter25_reg = ap_const_lv8_FF) else "0";
    icmp_ln292_1_fu_1734_p2 <= "1" when (trunc_ln281_2_reg_2685 = ap_const_lv6_10) else "0";
    icmp_ln292_fu_1649_p2 <= "1" when (trunc_ln281_reg_2674 = ap_const_lv6_10) else "0";
    icmp_ln306_fu_1601_p2 <= "1" when (trunc_ln5_fu_1485_p4 = ap_const_lv28_0) else "0";
    in_0_address0 <= zext_ln16_1_reg_2711(6 - 1 downto 0);
    in_0_ce0 <= in_0_ce0_local;

    in_0_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter34, ap_block_pp0_stage0_11001, trunc_ln16_reg_2396_pp0_iter33_reg)
    begin
        if (((trunc_ln16_reg_2396_pp0_iter33_reg = ap_const_lv4_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter34 = ap_const_logic_1))) then 
            in_0_ce0_local <= ap_const_logic_1;
        else 
            in_0_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    in_10_address0 <= zext_ln16_1_reg_2711(6 - 1 downto 0);
    in_10_ce0 <= in_10_ce0_local;

    in_10_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter34, ap_block_pp0_stage0_11001, trunc_ln16_reg_2396_pp0_iter33_reg)
    begin
        if (((trunc_ln16_reg_2396_pp0_iter33_reg = ap_const_lv4_A) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter34 = ap_const_logic_1))) then 
            in_10_ce0_local <= ap_const_logic_1;
        else 
            in_10_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    in_11_address0 <= zext_ln16_1_fu_1607_p1(6 - 1 downto 0);
    in_11_ce0 <= in_11_ce0_local;

    in_11_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter33, ap_block_pp0_stage0_11001, trunc_ln16_reg_2396_pp0_iter32_reg)
    begin
        if (((trunc_ln16_reg_2396_pp0_iter32_reg = ap_const_lv4_A) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1))) then 
            in_11_ce0_local <= ap_const_logic_1;
        else 
            in_11_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    in_12_address0 <= zext_ln16_1_reg_2711(6 - 1 downto 0);
    in_12_ce0 <= in_12_ce0_local;

    in_12_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter34, ap_block_pp0_stage0_11001, trunc_ln16_reg_2396_pp0_iter33_reg)
    begin
        if (((trunc_ln16_reg_2396_pp0_iter33_reg = ap_const_lv4_C) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter34 = ap_const_logic_1))) then 
            in_12_ce0_local <= ap_const_logic_1;
        else 
            in_12_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    in_13_address0 <= zext_ln16_1_fu_1607_p1(6 - 1 downto 0);
    in_13_ce0 <= in_13_ce0_local;

    in_13_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter33, ap_block_pp0_stage0_11001, trunc_ln16_reg_2396_pp0_iter32_reg)
    begin
        if (((trunc_ln16_reg_2396_pp0_iter32_reg = ap_const_lv4_C) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1))) then 
            in_13_ce0_local <= ap_const_logic_1;
        else 
            in_13_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    in_14_address0 <= zext_ln16_1_reg_2711(6 - 1 downto 0);
    in_14_ce0 <= in_14_ce0_local;

    in_14_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter34, ap_block_pp0_stage0_11001, trunc_ln16_reg_2396_pp0_iter33_reg)
    begin
        if (((trunc_ln16_reg_2396_pp0_iter33_reg = ap_const_lv4_E) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter34 = ap_const_logic_1))) then 
            in_14_ce0_local <= ap_const_logic_1;
        else 
            in_14_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    in_15_address0 <= zext_ln16_1_fu_1607_p1(6 - 1 downto 0);
    in_15_ce0 <= in_15_ce0_local;

    in_15_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter33, ap_block_pp0_stage0_11001, trunc_ln16_reg_2396_pp0_iter32_reg)
    begin
        if (((trunc_ln16_reg_2396_pp0_iter32_reg = ap_const_lv4_E) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1))) then 
            in_15_ce0_local <= ap_const_logic_1;
        else 
            in_15_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    in_1_address0 <= zext_ln16_1_fu_1607_p1(6 - 1 downto 0);
    in_1_ce0 <= in_1_ce0_local;

    in_1_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter33, ap_block_pp0_stage0_11001, trunc_ln16_reg_2396_pp0_iter32_reg)
    begin
        if (((trunc_ln16_reg_2396_pp0_iter32_reg = ap_const_lv4_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1))) then 
            in_1_ce0_local <= ap_const_logic_1;
        else 
            in_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    in_2_address0 <= zext_ln16_1_reg_2711(6 - 1 downto 0);
    in_2_ce0 <= in_2_ce0_local;

    in_2_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter34, ap_block_pp0_stage0_11001, trunc_ln16_reg_2396_pp0_iter33_reg)
    begin
        if (((trunc_ln16_reg_2396_pp0_iter33_reg = ap_const_lv4_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter34 = ap_const_logic_1))) then 
            in_2_ce0_local <= ap_const_logic_1;
        else 
            in_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    in_3_address0 <= zext_ln16_1_fu_1607_p1(6 - 1 downto 0);
    in_3_ce0 <= in_3_ce0_local;

    in_3_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter33, ap_block_pp0_stage0_11001, trunc_ln16_reg_2396_pp0_iter32_reg)
    begin
        if (((trunc_ln16_reg_2396_pp0_iter32_reg = ap_const_lv4_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1))) then 
            in_3_ce0_local <= ap_const_logic_1;
        else 
            in_3_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    in_4_address0 <= zext_ln16_1_reg_2711(6 - 1 downto 0);
    in_4_ce0 <= in_4_ce0_local;

    in_4_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter34, ap_block_pp0_stage0_11001, trunc_ln16_reg_2396_pp0_iter33_reg)
    begin
        if (((trunc_ln16_reg_2396_pp0_iter33_reg = ap_const_lv4_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter34 = ap_const_logic_1))) then 
            in_4_ce0_local <= ap_const_logic_1;
        else 
            in_4_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    in_5_address0 <= zext_ln16_1_fu_1607_p1(6 - 1 downto 0);
    in_5_ce0 <= in_5_ce0_local;

    in_5_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter33, ap_block_pp0_stage0_11001, trunc_ln16_reg_2396_pp0_iter32_reg)
    begin
        if (((trunc_ln16_reg_2396_pp0_iter32_reg = ap_const_lv4_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1))) then 
            in_5_ce0_local <= ap_const_logic_1;
        else 
            in_5_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    in_6_address0 <= zext_ln16_1_reg_2711(6 - 1 downto 0);
    in_6_ce0 <= in_6_ce0_local;

    in_6_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter34, ap_block_pp0_stage0_11001, trunc_ln16_reg_2396_pp0_iter33_reg)
    begin
        if (((trunc_ln16_reg_2396_pp0_iter33_reg = ap_const_lv4_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter34 = ap_const_logic_1))) then 
            in_6_ce0_local <= ap_const_logic_1;
        else 
            in_6_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    in_7_address0 <= zext_ln16_1_fu_1607_p1(6 - 1 downto 0);
    in_7_ce0 <= in_7_ce0_local;

    in_7_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter33, ap_block_pp0_stage0_11001, trunc_ln16_reg_2396_pp0_iter32_reg)
    begin
        if (((trunc_ln16_reg_2396_pp0_iter32_reg = ap_const_lv4_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1))) then 
            in_7_ce0_local <= ap_const_logic_1;
        else 
            in_7_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    in_8_address0 <= zext_ln16_1_reg_2711(6 - 1 downto 0);
    in_8_ce0 <= in_8_ce0_local;

    in_8_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter34, ap_block_pp0_stage0_11001, trunc_ln16_reg_2396_pp0_iter33_reg)
    begin
        if (((trunc_ln16_reg_2396_pp0_iter33_reg = ap_const_lv4_8) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter34 = ap_const_logic_1))) then 
            in_8_ce0_local <= ap_const_logic_1;
        else 
            in_8_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    in_9_address0 <= zext_ln16_1_fu_1607_p1(6 - 1 downto 0);
    in_9_ce0 <= in_9_ce0_local;

    in_9_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter33, ap_block_pp0_stage0_11001, trunc_ln16_reg_2396_pp0_iter32_reg)
    begin
        if (((trunc_ln16_reg_2396_pp0_iter32_reg = ap_const_lv4_8) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1))) then 
            in_9_ce0_local <= ap_const_logic_1;
        else 
            in_9_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    in_shift_1_fu_1645_p1 <= shl_ln291_fu_1640_p2(28 - 1 downto 0);
    in_shift_2_fu_1730_p1 <= shl_ln291_2_fu_1725_p2(28 - 1 downto 0);
    index_fu_1821_p3 <= (din_sign_reg_2457_pp0_iter32_reg & k_reg_2513_pp0_iter32_reg);
    k_fu_1055_p3 <= 
        ap_const_lv3_0 when (closepath_reg_2476_pp0_iter24_reg(0) = '1') else 
        trunc_ln_fu_1045_p4;
    lshr_ln506_fu_1175_p2 <= std_logic_vector(shift_right(unsigned(zext_ln506_1_fu_1172_p1),to_integer(unsigned('0' & zext_ln506_fu_1168_p1(31-1 downto 0)))));
    lshr_ln6_fu_960_p4 <= addr_fu_952_p3(7 downto 4);
    mul_ln69_fu_1229_p0 <= zext_ln69_fu_1218_p1(15 - 1 downto 0);
    mul_ln69_fu_1229_p1 <= zext_ln69_fu_1218_p1(15 - 1 downto 0);
    mul_ln73_fu_1303_p0 <= mul_ln73_fu_1303_p00(22 - 1 downto 0);
    mul_ln73_fu_1303_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(second_order_float_cos_K1_q0),44));
    mul_ln73_fu_1303_p1 <= mul_ln73_fu_1303_p10(22 - 1 downto 0);
    mul_ln73_fu_1303_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_reg_2557_pp0_iter28_reg),44));
    mul_ln74_fu_1334_p0 <= mul_ln74_fu_1334_p00(15 - 1 downto 0);
    mul_ln74_fu_1334_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_reg_2583),29));
    mul_ln74_fu_1334_p1 <= mul_ln74_fu_1334_p10(14 - 1 downto 0);
    mul_ln74_fu_1334_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(second_order_float_cos_K2_q0),29));
    mul_ln78_fu_1365_p0 <= mul_ln78_fu_1365_p00(22 - 1 downto 0);
    mul_ln78_fu_1365_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_reg_2557_pp0_iter28_reg),43));
    mul_ln79_fu_1396_p0 <= mul_ln79_fu_1396_p00(15 - 1 downto 0);
    mul_ln79_fu_1396_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_reg_2583),28));
    newexp_2_fu_1681_p2 <= (zext_ln287_fu_1677_p1 xor ap_const_lv7_7F);
    newexp_fu_1770_p2 <= std_logic_vector(unsigned(add_ln300_fu_1764_p2) - unsigned(zext_ln287_1_fu_1760_p1));
    not_and_ln179_fu_2043_p2 <= (ap_const_lv1_1 xor and_ln179_reg_2503_pp0_iter32_reg);
    or_ln186_fu_1989_p2 <= (or_ln306_fu_1784_p2 or icmp_ln186_reg_2548_pp0_iter32_reg);
    or_ln306_fu_1784_p2 <= (tmp_20_fu_1776_p3 or icmp_ln306_reg_2706);
    out_0_address0 <= zext_ln16_fu_2340_p1(7 - 1 downto 0);
    out_0_ce0 <= out_0_ce0_local;

    out_0_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter37, ap_block_pp0_stage0_11001, trunc_ln16_1_reg_2402_pp0_iter36_reg)
    begin
        if (((trunc_ln16_1_reg_2402_pp0_iter36_reg = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
            out_0_ce0_local <= ap_const_logic_1;
        else 
            out_0_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_0_d0 <= grp_fu_794_p4;
    out_0_we0 <= out_0_we0_local;

    out_0_we0_local_assign_proc : process(ap_enable_reg_pp0_iter37, ap_block_pp0_stage0_11001, trunc_ln16_1_reg_2402_pp0_iter36_reg)
    begin
        if (((trunc_ln16_1_reg_2402_pp0_iter36_reg = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
            out_0_we0_local <= ap_const_logic_1;
        else 
            out_0_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_1_address0 <= zext_ln16_fu_2340_p1(7 - 1 downto 0);
    out_1_ce0 <= out_1_ce0_local;

    out_1_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter37, ap_block_pp0_stage0_11001, trunc_ln16_1_reg_2402_pp0_iter36_reg)
    begin
        if (((trunc_ln16_1_reg_2402_pp0_iter36_reg = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
            out_1_ce0_local <= ap_const_logic_1;
        else 
            out_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_1_d0 <= grp_fu_783_p4;
    out_1_we0 <= out_1_we0_local;

    out_1_we0_local_assign_proc : process(ap_enable_reg_pp0_iter37, ap_block_pp0_stage0_11001, trunc_ln16_1_reg_2402_pp0_iter36_reg)
    begin
        if (((trunc_ln16_1_reg_2402_pp0_iter36_reg = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
            out_1_we0_local <= ap_const_logic_1;
        else 
            out_1_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_2_address0 <= zext_ln16_fu_2340_p1(7 - 1 downto 0);
    out_2_ce0 <= out_2_ce0_local;

    out_2_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter37, ap_block_pp0_stage0_11001, trunc_ln16_1_reg_2402_pp0_iter36_reg)
    begin
        if (((trunc_ln16_1_reg_2402_pp0_iter36_reg = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
            out_2_ce0_local <= ap_const_logic_1;
        else 
            out_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_2_d0 <= grp_fu_794_p4;
    out_2_we0 <= out_2_we0_local;

    out_2_we0_local_assign_proc : process(ap_enable_reg_pp0_iter37, ap_block_pp0_stage0_11001, trunc_ln16_1_reg_2402_pp0_iter36_reg)
    begin
        if (((trunc_ln16_1_reg_2402_pp0_iter36_reg = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
            out_2_we0_local <= ap_const_logic_1;
        else 
            out_2_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_3_address0 <= zext_ln16_fu_2340_p1(7 - 1 downto 0);
    out_3_ce0 <= out_3_ce0_local;

    out_3_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter37, ap_block_pp0_stage0_11001, trunc_ln16_1_reg_2402_pp0_iter36_reg)
    begin
        if (((trunc_ln16_1_reg_2402_pp0_iter36_reg = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
            out_3_ce0_local <= ap_const_logic_1;
        else 
            out_3_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_3_d0 <= grp_fu_783_p4;
    out_3_we0 <= out_3_we0_local;

    out_3_we0_local_assign_proc : process(ap_enable_reg_pp0_iter37, ap_block_pp0_stage0_11001, trunc_ln16_1_reg_2402_pp0_iter36_reg)
    begin
        if (((trunc_ln16_1_reg_2402_pp0_iter36_reg = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
            out_3_we0_local <= ap_const_logic_1;
        else 
            out_3_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_4_address0 <= zext_ln16_fu_2340_p1(7 - 1 downto 0);
    out_4_ce0 <= out_4_ce0_local;

    out_4_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter37, ap_block_pp0_stage0_11001, trunc_ln16_1_reg_2402_pp0_iter36_reg)
    begin
        if (((trunc_ln16_1_reg_2402_pp0_iter36_reg = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
            out_4_ce0_local <= ap_const_logic_1;
        else 
            out_4_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_4_d0 <= grp_fu_794_p4;
    out_4_we0 <= out_4_we0_local;

    out_4_we0_local_assign_proc : process(ap_enable_reg_pp0_iter37, ap_block_pp0_stage0_11001, trunc_ln16_1_reg_2402_pp0_iter36_reg)
    begin
        if (((trunc_ln16_1_reg_2402_pp0_iter36_reg = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
            out_4_we0_local <= ap_const_logic_1;
        else 
            out_4_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_5_address0 <= zext_ln16_fu_2340_p1(7 - 1 downto 0);
    out_5_ce0 <= out_5_ce0_local;

    out_5_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter37, ap_block_pp0_stage0_11001, trunc_ln16_1_reg_2402_pp0_iter36_reg)
    begin
        if (((trunc_ln16_1_reg_2402_pp0_iter36_reg = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
            out_5_ce0_local <= ap_const_logic_1;
        else 
            out_5_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_5_d0 <= grp_fu_783_p4;
    out_5_we0 <= out_5_we0_local;

    out_5_we0_local_assign_proc : process(ap_enable_reg_pp0_iter37, ap_block_pp0_stage0_11001, trunc_ln16_1_reg_2402_pp0_iter36_reg)
    begin
        if (((trunc_ln16_1_reg_2402_pp0_iter36_reg = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
            out_5_we0_local <= ap_const_logic_1;
        else 
            out_5_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_6_address0 <= zext_ln16_fu_2340_p1(7 - 1 downto 0);
    out_6_ce0 <= out_6_ce0_local;

    out_6_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter37, ap_block_pp0_stage0_11001, trunc_ln16_1_reg_2402_pp0_iter36_reg)
    begin
        if ((not((trunc_ln16_1_reg_2402_pp0_iter36_reg = ap_const_lv3_0)) and not((trunc_ln16_1_reg_2402_pp0_iter36_reg = ap_const_lv3_2)) and not((trunc_ln16_1_reg_2402_pp0_iter36_reg = ap_const_lv3_4)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
            out_6_ce0_local <= ap_const_logic_1;
        else 
            out_6_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_6_d0 <= grp_fu_794_p4;
    out_6_we0 <= out_6_we0_local;

    out_6_we0_local_assign_proc : process(ap_enable_reg_pp0_iter37, ap_block_pp0_stage0_11001, trunc_ln16_1_reg_2402_pp0_iter36_reg)
    begin
        if ((not((trunc_ln16_1_reg_2402_pp0_iter36_reg = ap_const_lv3_0)) and not((trunc_ln16_1_reg_2402_pp0_iter36_reg = ap_const_lv3_2)) and not((trunc_ln16_1_reg_2402_pp0_iter36_reg = ap_const_lv3_4)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
            out_6_we0_local <= ap_const_logic_1;
        else 
            out_6_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_7_address0 <= zext_ln16_fu_2340_p1(7 - 1 downto 0);
    out_7_ce0 <= out_7_ce0_local;

    out_7_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter37, ap_block_pp0_stage0_11001, trunc_ln16_1_reg_2402_pp0_iter36_reg)
    begin
        if ((not((trunc_ln16_1_reg_2402_pp0_iter36_reg = ap_const_lv3_0)) and not((trunc_ln16_1_reg_2402_pp0_iter36_reg = ap_const_lv3_2)) and not((trunc_ln16_1_reg_2402_pp0_iter36_reg = ap_const_lv3_4)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
            out_7_ce0_local <= ap_const_logic_1;
        else 
            out_7_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_7_d0 <= grp_fu_783_p4;
    out_7_we0 <= out_7_we0_local;

    out_7_we0_local_assign_proc : process(ap_enable_reg_pp0_iter37, ap_block_pp0_stage0_11001, trunc_ln16_1_reg_2402_pp0_iter36_reg)
    begin
        if ((not((trunc_ln16_1_reg_2402_pp0_iter36_reg = ap_const_lv3_0)) and not((trunc_ln16_1_reg_2402_pp0_iter36_reg = ap_const_lv3_2)) and not((trunc_ln16_1_reg_2402_pp0_iter36_reg = ap_const_lv3_4)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
            out_7_we0_local <= ap_const_logic_1;
        else 
            out_7_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_bits_4_fu_1537_p3 <= (tmp_8_fu_1527_p4 & ap_const_lv16_8000);
    out_exp_fu_1687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newexp_2_fu_1681_p2),8));
    ref_4oPi_table_100_address0 <= zext_ln378_fu_970_p1(4 - 1 downto 0);

    ref_4oPi_table_100_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter22, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter22 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ref_4oPi_table_100_ce0_local <= ap_const_logic_1;
        else 
            ref_4oPi_table_100_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    s_out_2_fu_2182_p3 <= 
        s_out_fu_2174_p1 when (tmp_12_reg_2753(0) = '1') else 
        c_out_fu_2178_p1;
    s_out_fu_2174_p1 <= t_3_fu_2160_p4;
    second_order_float_cos_K0_address0 <= zext_ln72_fu_1235_p1(7 - 1 downto 0);

    second_order_float_cos_K0_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter28, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1))) then 
            second_order_float_cos_K0_ce0_local <= ap_const_logic_1;
        else 
            second_order_float_cos_K0_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    second_order_float_cos_K1_address0 <= zext_ln72_fu_1235_p1(7 - 1 downto 0);

    second_order_float_cos_K1_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter28, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1))) then 
            second_order_float_cos_K1_ce0_local <= ap_const_logic_1;
        else 
            second_order_float_cos_K1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    second_order_float_cos_K2_address0 <= zext_ln72_fu_1235_p1(7 - 1 downto 0);

    second_order_float_cos_K2_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter28, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1))) then 
            second_order_float_cos_K2_ce0_local <= ap_const_logic_1;
        else 
            second_order_float_cos_K2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    second_order_float_sin_K0_address0 <= zext_ln72_fu_1235_p1(7 - 1 downto 0);

    second_order_float_sin_K0_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter28, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1))) then 
            second_order_float_sin_K0_ce0_local <= ap_const_logic_1;
        else 
            second_order_float_sin_K0_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    second_order_float_sin_K1_address0 <= zext_ln72_fu_1235_p1(7 - 1 downto 0);

    second_order_float_sin_K1_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter28, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1))) then 
            second_order_float_sin_K1_ce0_local <= ap_const_logic_1;
        else 
            second_order_float_sin_K1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    second_order_float_sin_K2_address0 <= zext_ln72_fu_1235_p1(7 - 1 downto 0);

    second_order_float_sin_K2_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter28, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1))) then 
            second_order_float_sin_K2_ce0_local <= ap_const_logic_1;
        else 
            second_order_float_sin_K2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    select_ln186_2_fu_2002_p3 <= 
        ap_const_lv23_7FFFFF when (icmp_ln186_reg_2548_pp0_iter32_reg(0) = '1') else 
        ap_const_lv23_0;
    select_ln186_fu_1982_p3 <= 
        ap_const_lv8_FF when (icmp_ln186_reg_2548_pp0_iter32_reg(0) = '1') else 
        ap_const_lv8_0;
    select_ln453_fu_1093_p3 <= 
        Ex_fu_1088_p2 when (closepath_reg_2476_pp0_iter25_reg(0) = '1') else 
        ap_const_lv8_0;
    select_ln506_1_fu_1187_p3 <= 
        lshr_ln506_fu_1175_p2 when (tmp_19_reg_2536(0) = '1') else 
        shl_ln506_fu_1181_p2;
    select_ln506_fu_1162_p3 <= 
        sub_ln506_fu_1157_p2 when (tmp_19_reg_2536(0) = '1') else 
        Ex_1_reg_2529;
        sext_ln163_fu_1719_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(Ex_1_reg_2529_pp0_iter32_reg),9));

        sext_ln80_1_fu_1442_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln3_reg_2629),21));

        sext_ln80_2_fu_1451_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln80_fu_1445_p2),28));

        sext_ln80_fu_1439_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln2_reg_2624),21));

    shift_1_fu_1654_p2 <= std_logic_vector(unsigned(trunc_ln281_1_fu_1633_p1) + unsigned(ap_const_lv6_10));
    shift_2_fu_1670_p3 <= 
        shift_1_fu_1654_p2 when (icmp_ln292_fu_1649_p2(0) = '1') else 
        trunc_ln281_reg_2674;
    shift_4_fu_1739_p2 <= std_logic_vector(unsigned(trunc_ln281_3_reg_2696) + unsigned(ap_const_lv6_10));
    shift_5_fu_1753_p3 <= 
        shift_4_fu_1739_p2 when (icmp_ln292_1_fu_1734_p2(0) = '1') else 
        trunc_ln281_2_reg_2685;
    shl_ln291_1_fu_1664_p2 <= std_logic_vector(shift_left(unsigned(zext_ln291_1_fu_1660_p1),to_integer(unsigned('0' & c_1_fu_1625_p3(31-1 downto 0)))));
    shl_ln291_2_fu_1725_p2 <= std_logic_vector(shift_left(unsigned(zext_ln291_2_fu_1722_p1),to_integer(unsigned('0' & c_4_reg_2680(31-1 downto 0)))));
    shl_ln291_3_fu_1748_p2 <= std_logic_vector(shift_left(unsigned(zext_ln291_3_fu_1744_p1),to_integer(unsigned('0' & c_2_reg_2691(31-1 downto 0)))));
    shl_ln291_fu_1640_p2 <= std_logic_vector(shift_left(unsigned(zext_ln291_fu_1637_p1),to_integer(unsigned('0' & c_3_reg_2669(31-1 downto 0)))));
    shl_ln379_fu_986_p2 <= std_logic_vector(shift_left(unsigned(ref_4oPi_table_100_q0),to_integer(unsigned('0' & zext_ln379_fu_983_p1(31-1 downto 0)))));
    shl_ln504_fu_1119_p2 <= std_logic_vector(shift_left(unsigned(Mx_bits_3_reg_2519),to_integer(unsigned('0' & zext_ln504_fu_1115_p1(31-1 downto 0)))));
    shl_ln506_fu_1181_p2 <= std_logic_vector(shift_left(unsigned(zext_ln506_1_fu_1172_p1),to_integer(unsigned('0' & zext_ln506_fu_1168_p1(31-1 downto 0)))));
    significand_fu_1711_p3 <= 
        tmp_6_fu_1691_p4 when (icmp_ln292_fu_1649_p2(0) = '1') else 
        tmp_7_fu_1701_p4;
    sin_results_exp_1_fu_2029_p3 <= 
        ap_const_lv8_0 when (and_ln179_reg_2503_pp0_iter32_reg(0) = '1') else 
        sin_results_exp_fu_1994_p3;
    sin_results_exp_fu_1994_p3 <= 
        select_ln186_fu_1982_p3 when (or_ln186_fu_1989_p2(0) = '1') else 
        empty_fu_1789_p1;
    sin_results_sig_1_fu_2036_p3 <= 
        ap_const_lv23_0 when (and_ln179_reg_2503_pp0_iter32_reg(0) = '1') else 
        sin_results_sig_fu_2009_p3;
    sin_results_sig_fu_2009_p3 <= 
        select_ln186_2_fu_2002_p3 when (or_ln186_fu_1989_p2(0) = '1') else 
        empty_502_fu_1813_p3;
    sin_results_sign_1_fu_1976_p2 <= (xor_ln186_fu_1971_p2 and sin_results_sign_fu_1827_p35);
    sin_results_sign_2_fu_2023_p3 <= 
        din_sign_reg_2457_pp0_iter32_reg when (and_ln179_reg_2503_pp0_iter32_reg(0) = '1') else 
        sin_results_sign_1_fu_1976_p2;
    sin_results_sign_fu_1827_p33 <= "X";
    sub_ln506_fu_1157_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(Ex_1_reg_2529));
    t_3_fu_2160_p4 <= ((cos_results_sign_2_reg_2738 & cos_results_exp_1_reg_2743) & cos_results_sig_1_reg_2748);
    t_4_fu_2167_p4 <= ((sin_results_sign_2_reg_2723 & sin_results_exp_1_reg_2728) & sin_results_sig_1_reg_2733);
    tmp_10_fu_1793_p4 <= shl_ln291_3_fu_1748_p2(27 downto 5);
    tmp_11_fu_1803_p4 <= shl_ln291_2_fu_1725_p2(27 downto 5);
    tmp_12_fu_2089_p17 <= "X";
    tmp_13_fu_2283_p17 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_14_fu_2228_p17 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_20_fu_1776_p3 <= newexp_fu_1770_p2(8 downto 8);
    tmp_5_fu_1495_p3 <= cos_result_fu_1479_p2(28 downto 13);
    tmp_6_fu_1691_p4 <= shl_ln291_1_fu_1664_p2(27 downto 5);
    tmp_7_fu_1701_p4 <= shl_ln291_fu_1640_p2(27 downto 5);
    tmp_8_fu_1527_p4 <= grp_fu_805_p2(56 downto 42);
    tmp_9_fu_1549_p4 <= grp_fu_805_p2(41 downto 29);
    trunc_ln16_1_fu_833_p1 <= ap_sig_allocacmp_i183_load(3 - 1 downto 0);
    trunc_ln16_fu_829_p1 <= ap_sig_allocacmp_i183_load(4 - 1 downto 0);
    trunc_ln276_fu_1511_p1 <= cos_result_fu_1479_p2(13 - 1 downto 0);
    trunc_ln281_1_fu_1633_p1 <= c_1_fu_1625_p3(6 - 1 downto 0);
    trunc_ln281_2_fu_1575_p1 <= c_4_fu_1567_p3(6 - 1 downto 0);
    trunc_ln281_3_fu_1587_p1 <= c_2_fu_1579_p3(6 - 1 downto 0);
    trunc_ln281_fu_1523_p1 <= c_3_fu_1515_p3(6 - 1 downto 0);
    trunc_ln379_fu_979_p1 <= addr_fu_952_p3(4 - 1 downto 0);
    trunc_ln491_fu_1062_p1 <= k_fu_1055_p3(1 - 1 downto 0);
    trunc_ln505_fu_1124_p1 <= Mx_zeros_fu_1107_p3(8 - 1 downto 0);
    trunc_ln5_fu_1485_p4 <= grp_fu_805_p2(56 downto 29);
    trunc_ln_fu_1045_p4 <= grp_fu_809_p2(79 downto 77);
    xor_ln186_fu_1971_p2 <= (icmp_ln186_reg_2548_pp0_iter32_reg xor ap_const_lv1_1);
    zext_ln16_1_fu_1607_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln16_2_reg_2411_pp0_iter32_reg),64));
    zext_ln16_fu_2340_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_reg_2406_pp0_iter36_reg),64));
    zext_ln287_1_fu_1760_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shift_5_fu_1753_p3),9));
    zext_ln287_fu_1677_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shift_2_fu_1670_p3),7));
    zext_ln291_1_fu_1660_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(in_shift_1_fu_1645_p1),32));
    zext_ln291_2_fu_1722_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln6_reg_2701),32));
    zext_ln291_3_fu_1744_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(in_shift_2_fu_1730_p1),32));
    zext_ln291_fu_1637_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cos_result_reg_2659),32));
    zext_ln378_fu_970_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln6_fu_960_p4),64));
    zext_ln379_fu_983_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln379_reg_2487),100));
    zext_ln504_fu_1115_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Mx_zeros_fu_1107_p3),58));
    zext_ln506_1_fu_1172_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_reg_2542),32));
    zext_ln506_fu_1168_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln506_fu_1162_p3),32));
    zext_ln69_fu_1218_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_trunc_reg_2568),30));
    zext_ln72_fu_1235_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A_reg_2563),64));
    zext_ln73_2_fu_1422_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_reg_2614),27));
    zext_ln74_2_fu_1425_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_reg_2619),27));
    zext_ln75_fu_1476_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln75_1_reg_2639_pp0_iter31_reg),29));
end behav;
