// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module llama_layer_RoPE (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        out_0_address0,
        out_0_ce0,
        out_0_we0,
        out_0_d0,
        out_1_address0,
        out_1_ce0,
        out_1_we0,
        out_1_d0,
        out_2_address0,
        out_2_ce0,
        out_2_we0,
        out_2_d0,
        out_3_address0,
        out_3_ce0,
        out_3_we0,
        out_3_d0,
        out_4_address0,
        out_4_ce0,
        out_4_we0,
        out_4_d0,
        out_5_address0,
        out_5_ce0,
        out_5_we0,
        out_5_d0,
        out_6_address0,
        out_6_ce0,
        out_6_we0,
        out_6_d0,
        out_7_address0,
        out_7_ce0,
        out_7_we0,
        out_7_d0,
        in_0_address0,
        in_0_ce0,
        in_0_q0,
        in_1_address0,
        in_1_ce0,
        in_1_q0,
        in_2_address0,
        in_2_ce0,
        in_2_q0,
        in_3_address0,
        in_3_ce0,
        in_3_q0,
        in_4_address0,
        in_4_ce0,
        in_4_q0,
        in_5_address0,
        in_5_ce0,
        in_5_q0,
        in_6_address0,
        in_6_ce0,
        in_6_q0,
        in_7_address0,
        in_7_ce0,
        in_7_q0,
        in_8_address0,
        in_8_ce0,
        in_8_q0,
        in_9_address0,
        in_9_ce0,
        in_9_q0,
        in_10_address0,
        in_10_ce0,
        in_10_q0,
        in_11_address0,
        in_11_ce0,
        in_11_q0,
        in_12_address0,
        in_12_ce0,
        in_12_q0,
        in_13_address0,
        in_13_ce0,
        in_13_q0,
        in_14_address0,
        in_14_ce0,
        in_14_q0,
        in_15_address0,
        in_15_ce0,
        in_15_q0,
        pos_r,
        grp_fu_3553_p_din0,
        grp_fu_3553_p_din1,
        grp_fu_3553_p_dout0,
        grp_fu_3557_p_din0,
        grp_fu_3557_p_din1,
        grp_fu_3557_p_dout0,
        grp_fu_3561_p_din0,
        grp_fu_3561_p_din1,
        grp_fu_3561_p_dout0,
        grp_fu_3565_p_din0,
        grp_fu_3565_p_din1,
        grp_fu_3565_p_dout0,
        grp_fu_3569_p_din0,
        grp_fu_3569_p_din1,
        grp_fu_3569_p_dout0,
        grp_fu_3573_p_din0,
        grp_fu_3573_p_dout0,
        grp_fu_3573_p_ce,
        grp_fu_3576_p_din0,
        grp_fu_3576_p_din1,
        grp_fu_3576_p_din2,
        grp_fu_3576_p_din3,
        grp_fu_3576_p_dout0,
        grp_fu_3576_p_ce,
        grp_fu_3582_p_din0,
        grp_fu_3582_p_din1,
        grp_fu_3582_p_din2,
        grp_fu_3582_p_din3,
        grp_fu_3582_p_dout0,
        grp_fu_3582_p_ce,
        grp_fu_3588_p_din0,
        grp_fu_3588_p_din1,
        grp_fu_3588_p_dout0,
        grp_fu_3588_p_ce,
        grp_fu_3592_p_din0,
        grp_fu_3592_p_din1,
        grp_fu_3592_p_dout0,
        grp_fu_3592_p_ce,
        grp_pow_generic_float_s_fu_3596_p_din1,
        grp_pow_generic_float_s_fu_3596_p_dout0
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_pp0_stage0 = 5'd8;
parameter    ap_ST_fsm_state42 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] out_0_address0;
output   out_0_ce0;
output   out_0_we0;
output  [31:0] out_0_d0;
output  [6:0] out_1_address0;
output   out_1_ce0;
output   out_1_we0;
output  [31:0] out_1_d0;
output  [6:0] out_2_address0;
output   out_2_ce0;
output   out_2_we0;
output  [31:0] out_2_d0;
output  [6:0] out_3_address0;
output   out_3_ce0;
output   out_3_we0;
output  [31:0] out_3_d0;
output  [6:0] out_4_address0;
output   out_4_ce0;
output   out_4_we0;
output  [31:0] out_4_d0;
output  [6:0] out_5_address0;
output   out_5_ce0;
output   out_5_we0;
output  [31:0] out_5_d0;
output  [6:0] out_6_address0;
output   out_6_ce0;
output   out_6_we0;
output  [31:0] out_6_d0;
output  [6:0] out_7_address0;
output   out_7_ce0;
output   out_7_we0;
output  [31:0] out_7_d0;
output  [5:0] in_0_address0;
output   in_0_ce0;
input  [31:0] in_0_q0;
output  [5:0] in_1_address0;
output   in_1_ce0;
input  [31:0] in_1_q0;
output  [5:0] in_2_address0;
output   in_2_ce0;
input  [31:0] in_2_q0;
output  [5:0] in_3_address0;
output   in_3_ce0;
input  [31:0] in_3_q0;
output  [5:0] in_4_address0;
output   in_4_ce0;
input  [31:0] in_4_q0;
output  [5:0] in_5_address0;
output   in_5_ce0;
input  [31:0] in_5_q0;
output  [5:0] in_6_address0;
output   in_6_ce0;
input  [31:0] in_6_q0;
output  [5:0] in_7_address0;
output   in_7_ce0;
input  [31:0] in_7_q0;
output  [5:0] in_8_address0;
output   in_8_ce0;
input  [31:0] in_8_q0;
output  [5:0] in_9_address0;
output   in_9_ce0;
input  [31:0] in_9_q0;
output  [5:0] in_10_address0;
output   in_10_ce0;
input  [31:0] in_10_q0;
output  [5:0] in_11_address0;
output   in_11_ce0;
input  [31:0] in_11_q0;
output  [5:0] in_12_address0;
output   in_12_ce0;
input  [31:0] in_12_q0;
output  [5:0] in_13_address0;
output   in_13_ce0;
input  [31:0] in_13_q0;
output  [5:0] in_14_address0;
output   in_14_ce0;
input  [31:0] in_14_q0;
output  [5:0] in_15_address0;
output   in_15_ce0;
input  [31:0] in_15_q0;
input  [31:0] pos_r;
output  [31:0] grp_fu_3553_p_din0;
output  [31:0] grp_fu_3553_p_din1;
input  [31:0] grp_fu_3553_p_dout0;
output  [31:0] grp_fu_3557_p_din0;
output  [31:0] grp_fu_3557_p_din1;
input  [31:0] grp_fu_3557_p_dout0;
output  [31:0] grp_fu_3561_p_din0;
output  [31:0] grp_fu_3561_p_din1;
input  [31:0] grp_fu_3561_p_dout0;
output  [31:0] grp_fu_3565_p_din0;
output  [31:0] grp_fu_3565_p_din1;
input  [31:0] grp_fu_3565_p_dout0;
output  [31:0] grp_fu_3569_p_din0;
output  [31:0] grp_fu_3569_p_din1;
input  [31:0] grp_fu_3569_p_dout0;
output  [31:0] grp_fu_3573_p_din0;
input  [31:0] grp_fu_3573_p_dout0;
output   grp_fu_3573_p_ce;
output  [31:0] grp_fu_3576_p_din0;
output  [31:0] grp_fu_3576_p_din1;
output  [31:0] grp_fu_3576_p_din2;
output  [31:0] grp_fu_3576_p_din3;
input  [31:0] grp_fu_3576_p_dout0;
output   grp_fu_3576_p_ce;
output  [31:0] grp_fu_3582_p_din0;
output  [31:0] grp_fu_3582_p_din1;
output  [31:0] grp_fu_3582_p_din2;
output  [31:0] grp_fu_3582_p_din3;
input  [31:0] grp_fu_3582_p_dout0;
output   grp_fu_3582_p_ce;
output  [28:0] grp_fu_3588_p_din0;
output  [27:0] grp_fu_3588_p_din1;
input  [56:0] grp_fu_3588_p_dout0;
output   grp_fu_3588_p_ce;
output  [79:0] grp_fu_3592_p_din0;
output  [23:0] grp_fu_3592_p_din1;
input  [79:0] grp_fu_3592_p_dout0;
output   grp_fu_3592_p_ce;
output  [31:0] grp_pow_generic_float_s_fu_3596_p_din1;
input  [31:0] grp_pow_generic_float_s_fu_3596_p_dout0;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] ref_4oPi_table_100_address0;
wire   [99:0] ref_4oPi_table_100_q0;
wire   [6:0] second_order_float_cos_K0_address0;
wire   [27:0] second_order_float_cos_K0_q0;
wire   [6:0] second_order_float_cos_K1_address0;
wire   [21:0] second_order_float_cos_K1_q0;
wire   [6:0] second_order_float_cos_K2_address0;
wire   [13:0] second_order_float_cos_K2_q0;
wire   [6:0] second_order_float_sin_K0_address0;
wire   [28:0] second_order_float_sin_K0_q0;
wire   [6:0] second_order_float_sin_K1_address0;
wire  signed [20:0] second_order_float_sin_K1_q0;
wire   [6:0] second_order_float_sin_K2_address0;
wire  signed [12:0] second_order_float_sin_K2_q0;
reg   [31:0] conv_reg_2404;
wire    ap_CS_fsm_state3;
reg   [9:0] i_25_reg_2410;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0_11001;
reg   [9:0] i_25_reg_2410_pp0_iter1_reg;
reg   [9:0] i_25_reg_2410_pp0_iter2_reg;
reg   [9:0] i_25_reg_2410_pp0_iter3_reg;
reg   [9:0] i_25_reg_2410_pp0_iter4_reg;
reg   [9:0] i_25_reg_2410_pp0_iter5_reg;
reg   [9:0] i_25_reg_2410_pp0_iter6_reg;
reg   [9:0] i_25_reg_2410_pp0_iter7_reg;
reg   [9:0] i_25_reg_2410_pp0_iter8_reg;
reg   [9:0] i_25_reg_2410_pp0_iter9_reg;
reg   [9:0] i_25_reg_2410_pp0_iter10_reg;
reg   [9:0] i_25_reg_2410_pp0_iter11_reg;
reg   [9:0] i_25_reg_2410_pp0_iter12_reg;
reg   [9:0] i_25_reg_2410_pp0_iter13_reg;
reg   [9:0] i_25_reg_2410_pp0_iter14_reg;
reg   [9:0] i_25_reg_2410_pp0_iter15_reg;
reg   [9:0] i_25_reg_2410_pp0_iter16_reg;
reg   [9:0] i_25_reg_2410_pp0_iter17_reg;
reg   [9:0] i_25_reg_2410_pp0_iter18_reg;
reg   [9:0] i_25_reg_2410_pp0_iter19_reg;
reg   [9:0] i_25_reg_2410_pp0_iter20_reg;
reg   [9:0] i_25_reg_2410_pp0_iter21_reg;
reg   [9:0] i_25_reg_2410_pp0_iter22_reg;
reg   [9:0] i_25_reg_2410_pp0_iter23_reg;
reg   [9:0] i_25_reg_2410_pp0_iter24_reg;
reg   [9:0] i_25_reg_2410_pp0_iter25_reg;
reg   [9:0] i_25_reg_2410_pp0_iter26_reg;
reg   [9:0] i_25_reg_2410_pp0_iter27_reg;
reg   [9:0] i_25_reg_2410_pp0_iter28_reg;
reg   [9:0] i_25_reg_2410_pp0_iter29_reg;
reg   [9:0] i_25_reg_2410_pp0_iter30_reg;
reg   [9:0] i_25_reg_2410_pp0_iter31_reg;
reg   [9:0] i_25_reg_2410_pp0_iter32_reg;
wire   [0:0] icmp_ln16_fu_838_p2;
wire   [2:0] trunc_ln16_2_fu_855_p1;
reg   [2:0] trunc_ln16_2_reg_2423;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter2_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter3_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter4_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter5_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter6_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter7_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter8_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter9_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter10_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter11_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter12_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter13_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter14_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter15_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter16_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter17_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter18_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter19_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter20_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter21_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter22_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter23_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter24_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter25_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter26_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter27_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter28_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter29_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter30_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter31_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter32_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter33_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter34_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter35_reg;
reg   [2:0] trunc_ln16_2_reg_2423_pp0_iter36_reg;
wire   [31:0] zext_ln18_fu_861_p1;
reg    ap_enable_reg_pp0_iter3;
reg   [31:0] mul_reg_2437;
reg   [31:0] y_assign_reg_2443;
reg   [31:0] tmp_reg_2448;
wire    ap_block_pp0_stage0_11001_ignoreCallOp100;
reg   [31:0] val_reg_2454;
reg   [0:0] din_sign_reg_2459;
reg   [0:0] din_sign_reg_2459_pp0_iter23_reg;
reg   [0:0] din_sign_reg_2459_pp0_iter24_reg;
reg   [0:0] din_sign_reg_2459_pp0_iter25_reg;
reg   [0:0] din_sign_reg_2459_pp0_iter26_reg;
reg   [0:0] din_sign_reg_2459_pp0_iter27_reg;
reg   [0:0] din_sign_reg_2459_pp0_iter28_reg;
reg   [0:0] din_sign_reg_2459_pp0_iter29_reg;
reg   [0:0] din_sign_reg_2459_pp0_iter30_reg;
reg   [0:0] din_sign_reg_2459_pp0_iter31_reg;
reg   [0:0] din_sign_reg_2459_pp0_iter32_reg;
wire   [7:0] din_exp_fu_912_p3;
reg   [7:0] din_exp_reg_2465;
reg   [7:0] din_exp_reg_2465_pp0_iter23_reg;
reg   [7:0] din_exp_reg_2465_pp0_iter24_reg;
reg   [7:0] din_exp_reg_2465_pp0_iter25_reg;
wire   [22:0] din_sig_fu_920_p1;
reg   [22:0] din_sig_reg_2472;
reg   [22:0] din_sig_reg_2472_pp0_iter23_reg;
wire   [0:0] closepath_fu_924_p2;
reg   [0:0] closepath_reg_2478;
reg   [0:0] closepath_reg_2478_pp0_iter23_reg;
reg   [0:0] closepath_reg_2478_pp0_iter24_reg;
reg   [0:0] closepath_reg_2478_pp0_iter25_reg;
wire   [3:0] trunc_ln379_fu_963_p1;
reg   [3:0] trunc_ln379_reg_2489;
reg  signed [79:0] Med_reg_2494;
wire   [79:0] zext_ln468_fu_991_p1;
wire   [0:0] and_ln179_fu_1013_p2;
reg   [0:0] and_ln179_reg_2505;
reg   [0:0] and_ln179_reg_2505_pp0_iter25_reg;
reg   [0:0] and_ln179_reg_2505_pp0_iter26_reg;
reg   [0:0] and_ln179_reg_2505_pp0_iter27_reg;
reg   [0:0] and_ln179_reg_2505_pp0_iter28_reg;
reg   [0:0] and_ln179_reg_2505_pp0_iter29_reg;
reg   [0:0] and_ln179_reg_2505_pp0_iter30_reg;
reg   [0:0] and_ln179_reg_2505_pp0_iter31_reg;
reg   [0:0] and_ln179_reg_2505_pp0_iter32_reg;
wire   [2:0] k_fu_1039_p3;
reg   [2:0] k_reg_2515;
reg   [2:0] k_reg_2515_pp0_iter26_reg;
reg   [2:0] k_reg_2515_pp0_iter27_reg;
reg   [2:0] k_reg_2515_pp0_iter28_reg;
reg   [2:0] k_reg_2515_pp0_iter29_reg;
reg   [2:0] k_reg_2515_pp0_iter30_reg;
reg   [2:0] k_reg_2515_pp0_iter31_reg;
reg   [2:0] k_reg_2515_pp0_iter32_reg;
wire   [57:0] Mx_bits_6_fu_1056_p3;
reg   [57:0] Mx_bits_6_reg_2521;
reg   [28:0] tmp_14_reg_2526;
wire  signed [7:0] Ex_2_fu_1112_p2;
reg  signed [7:0] Ex_2_reg_2531;
reg  signed [7:0] Ex_2_reg_2531_pp0_iter27_reg;
reg  signed [7:0] Ex_2_reg_2531_pp0_iter28_reg;
reg  signed [7:0] Ex_2_reg_2531_pp0_iter29_reg;
reg  signed [7:0] Ex_2_reg_2531_pp0_iter30_reg;
reg  signed [7:0] Ex_2_reg_2531_pp0_iter31_reg;
reg  signed [7:0] Ex_2_reg_2531_pp0_iter32_reg;
reg   [0:0] tmp_23_reg_2538;
reg   [28:0] tmp_s_reg_2544;
reg   [28:0] tmp_s_reg_2544_pp0_iter27_reg;
reg   [28:0] tmp_s_reg_2544_pp0_iter28_reg;
reg   [28:0] tmp_s_reg_2544_pp0_iter29_reg;
reg   [28:0] tmp_s_reg_2544_pp0_iter30_reg;
wire   [0:0] icmp_ln186_fu_1136_p2;
reg   [0:0] icmp_ln186_reg_2550;
reg   [0:0] icmp_ln186_reg_2550_pp0_iter27_reg;
reg   [0:0] icmp_ln186_reg_2550_pp0_iter28_reg;
reg   [0:0] icmp_ln186_reg_2550_pp0_iter29_reg;
reg   [0:0] icmp_ln186_reg_2550_pp0_iter30_reg;
reg   [0:0] icmp_ln186_reg_2550_pp0_iter31_reg;
reg   [0:0] icmp_ln186_reg_2550_pp0_iter32_reg;
wire   [21:0] B_fu_1178_p1;
reg   [21:0] B_reg_2559;
reg   [21:0] B_reg_2559_pp0_iter28_reg;
reg   [6:0] A_reg_2565;
reg   [14:0] B_trunc_reg_2570;
reg   [14:0] tmp_22_reg_2585;
reg   [26:0] trunc_ln7_reg_2611;
reg   [20:0] tmp_16_reg_2616;
reg   [12:0] tmp_24_reg_2621;
reg   [19:0] trunc_ln8_reg_2626;
reg   [11:0] trunc_ln9_reg_2631;
reg   [27:0] trunc_ln10_reg_2636;
wire   [26:0] add_ln75_2_fu_1417_p2;
reg   [26:0] add_ln75_2_reg_2641;
reg   [26:0] add_ln75_2_reg_2641_pp0_iter31_reg;
wire   [27:0] add_ln80_2_fu_1439_p2;
reg   [27:0] add_ln80_2_reg_2646;
wire   [56:0] zext_ln80_2_fu_1444_p1;
wire   [56:0] zext_ln80_fu_1448_p1;
wire   [63:0] zext_ln16_2_fu_1469_p1;
reg   [63:0] zext_ln16_2_reg_2661;
reg   [63:0] zext_ln16_2_reg_2661_pp0_iter33_reg;
wire   [28:0] cos_result_fu_1484_p2;
reg   [28:0] cos_result_reg_2673;
wire   [12:0] trunc_ln276_fu_1516_p1;
reg   [12:0] trunc_ln276_reg_2678;
wire   [31:0] c_7_fu_1520_p3;
reg   [31:0] c_7_reg_2683;
wire   [5:0] trunc_ln281_fu_1528_p1;
reg   [5:0] trunc_ln281_reg_2688;
wire   [31:0] c_8_fu_1572_p3;
reg   [31:0] c_8_reg_2694;
wire   [5:0] trunc_ln281_5_fu_1580_p1;
reg   [5:0] trunc_ln281_5_reg_2699;
wire   [31:0] c_6_fu_1584_p3;
reg   [31:0] c_6_reg_2705;
wire   [5:0] trunc_ln281_6_fu_1592_p1;
reg   [5:0] trunc_ln281_6_reg_2710;
reg   [26:0] trunc_ln12_reg_2715;
wire   [0:0] icmp_ln306_fu_1606_p2;
reg   [0:0] icmp_ln306_reg_2720;
wire   [3:0] trunc_ln16_fu_1644_p1;
reg   [3:0] trunc_ln16_reg_2765;
reg   [3:0] trunc_ln16_reg_2765_pp0_iter34_reg;
reg   [6:0] lshr_ln2_reg_2770;
reg   [6:0] lshr_ln2_reg_2770_pp0_iter34_reg;
reg   [6:0] lshr_ln2_reg_2770_pp0_iter35_reg;
reg   [6:0] lshr_ln2_reg_2770_pp0_iter36_reg;
wire   [0:0] sin_results_sign_4_fu_2061_p3;
reg   [0:0] sin_results_sign_4_reg_2775;
wire   [7:0] sin_results_exp_2_fu_2067_p3;
reg   [7:0] sin_results_exp_2_reg_2780;
wire   [22:0] sin_results_sig_2_fu_2074_p3;
reg   [22:0] sin_results_sig_2_reg_2785;
wire   [0:0] cos_results_sign_4_fu_2086_p2;
reg   [0:0] cos_results_sign_4_reg_2790;
wire   [7:0] cos_results_exp_4_fu_2103_p3;
reg   [7:0] cos_results_exp_4_reg_2795;
wire   [22:0] cos_results_sig_2_fu_2119_p3;
reg   [22:0] cos_results_sig_2_reg_2800;
wire   [0:0] tmp_19_fu_2127_p19;
reg   [0:0] tmp_19_reg_2805;
wire   [31:0] tmp_21_fu_2166_p19;
reg   [31:0] tmp_21_reg_2811;
wire   [31:0] s_out_4_fu_2228_p3;
reg   [31:0] s_out_4_reg_2819;
wire   [31:0] c_out_4_fu_2235_p3;
reg   [31:0] c_out_4_reg_2826;
wire   [31:0] tmp_20_fu_2288_p19;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
wire    ap_block_pp0_stage0_ignoreCallOp88;
wire   [63:0] zext_ln378_fu_954_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln72_fu_1219_p1;
wire   [63:0] zext_ln16_fu_2349_p1;
reg   [9:0] i_fu_340;
wire   [9:0] add_ln16_fu_844_p2;
reg    ref_4oPi_table_100_ce0_local;
reg    second_order_float_cos_K0_ce0_local;
reg    second_order_float_cos_K1_ce0_local;
reg    second_order_float_cos_K2_ce0_local;
reg    second_order_float_sin_K0_ce0_local;
reg    second_order_float_sin_K1_ce0_local;
reg    second_order_float_sin_K2_ce0_local;
reg    in_1_ce0_local;
reg    in_3_ce0_local;
reg    in_5_ce0_local;
reg    in_7_ce0_local;
reg    in_9_ce0_local;
reg    in_11_ce0_local;
reg    in_13_ce0_local;
reg    in_15_ce0_local;
reg    in_0_ce0_local;
reg    in_2_ce0_local;
reg    in_4_ce0_local;
reg    in_6_ce0_local;
reg    in_8_ce0_local;
reg    in_10_ce0_local;
reg    in_12_ce0_local;
reg    in_14_ce0_local;
reg    out_4_we0_local;
reg    out_4_ce0_local;
reg    out_5_we0_local;
reg    out_5_ce0_local;
reg    out_2_we0_local;
reg    out_2_ce0_local;
reg    out_3_we0_local;
reg    out_3_ce0_local;
reg    out_0_we0_local;
reg    out_0_ce0_local;
reg    out_1_we0_local;
reg    out_1_ce0_local;
reg    out_6_we0_local;
reg    out_6_ce0_local;
reg    out_7_we0_local;
reg    out_7_ce0_local;
reg   [31:0] grp_fu_762_p0;
reg   [31:0] grp_fu_762_p0_keep;
wire   [31:0] grp_fu_762_p1;
reg   [31:0] grp_fu_767_p0;
reg   [31:0] grp_fu_767_p0_keep;
wire   [31:0] grp_fu_767_p1;
reg   [31:0] grp_fu_772_p0;
reg   [31:0] grp_fu_772_p0_keep;
reg   [31:0] grp_fu_772_p1;
reg   [31:0] grp_fu_772_p1_keep;
reg   [31:0] grp_fu_776_p0;
reg   [31:0] grp_fu_776_p0_keep;
reg   [31:0] grp_fu_776_p1;
reg   [31:0] grp_fu_776_p1_keep;
reg   [31:0] grp_fu_780_p0;
reg   [31:0] grp_fu_780_p0_keep;
reg   [31:0] grp_fu_780_p1;
reg   [31:0] grp_fu_780_p1_keep;
reg   [31:0] grp_fu_784_p0;
wire   [5:0] head_dim_fu_858_p1;
wire   [31:0] data_fu_901_p1;
wire   [7:0] add_ln376_fu_930_p2;
wire   [7:0] addr_fu_936_p3;
wire   [3:0] lshr_ln_fu_944_p4;
wire   [99:0] zext_ln379_fu_967_p1;
wire   [99:0] shl_ln379_fu_970_p2;
wire   [23:0] X_fu_984_p3;
wire   [0:0] icmp_ln179_fu_1003_p2;
wire   [0:0] icmp_ln179_2_fu_1008_p2;
wire   [2:0] trunc_ln_fu_1029_p4;
wire   [57:0] Mx_bits_fu_1019_p4;
wire   [0:0] trunc_ln491_fu_1046_p1;
wire   [57:0] Mx_bits_4_fu_1050_p2;
wire   [7:0] Ex_fu_1072_p2;
wire   [29:0] Mx_zeros_fu_1091_p1;
wire   [29:0] Mx_zeros_fu_1091_p3;
wire   [57:0] zext_ln504_fu_1099_p1;
wire   [7:0] select_ln453_fu_1077_p3;
wire   [7:0] trunc_ln505_fu_1108_p1;
wire   [57:0] shl_ln504_fu_1103_p2;
wire   [7:0] sub_ln506_fu_1141_p2;
wire   [7:0] select_ln506_fu_1146_p3;
wire   [31:0] zext_ln506_2_fu_1156_p1;
wire   [31:0] zext_ln506_fu_1152_p1;
wire   [31:0] lshr_ln506_fu_1159_p2;
wire   [31:0] shl_ln506_fu_1165_p2;
wire   [31:0] select_ln506_2_fu_1171_p3;
wire   [14:0] mul_ln69_fu_1213_p0;
wire   [29:0] zext_ln69_fu_1202_p1;
wire   [14:0] mul_ln69_fu_1213_p1;
wire   [29:0] mul_ln69_fu_1213_p2;
wire   [21:0] mul_ln73_fu_1287_p0;
wire   [21:0] mul_ln73_fu_1287_p1;
wire   [43:0] mul_ln73_fu_1287_p2;
wire   [14:0] mul_ln74_fu_1318_p0;
wire   [13:0] mul_ln74_fu_1318_p1;
wire   [28:0] mul_ln74_fu_1318_p2;
wire   [21:0] mul_ln78_fu_1349_p0;
wire   [42:0] mul_ln78_fu_1349_p2;
wire   [14:0] mul_ln79_fu_1380_p0;
wire   [27:0] mul_ln79_fu_1380_p2;
wire   [26:0] zext_ln74_4_fu_1409_p1;
wire   [26:0] add_ln75_fu_1412_p2;
wire   [26:0] zext_ln73_3_fu_1406_p1;
wire  signed [20:0] sext_ln80_fu_1423_p1;
wire  signed [20:0] sext_ln80_3_fu_1426_p1;
wire   [20:0] add_ln80_fu_1429_p2;
wire  signed [27:0] sext_ln80_4_fu_1435_p1;
wire   [5:0] lshr_ln16_2_fu_1460_p4;
wire   [28:0] zext_ln75_fu_1481_p1;
wire   [15:0] tmp_15_fu_1500_p3;
wire   [31:0] c_7_fu_1520_p1;
wire   [14:0] tmp_17_fu_1532_p4;
wire   [30:0] out_bits_9_fu_1542_p3;
wire   [12:0] tmp_18_fu_1554_p4;
wire   [31:0] c_8_fu_1572_p1;
wire   [31:0] c_6_fu_1584_p1;
wire   [27:0] trunc_ln11_fu_1490_p4;
wire   [31:0] c_5_fu_1663_p1;
wire   [31:0] c_5_fu_1663_p3;
wire   [31:0] zext_ln291_fu_1675_p1;
wire   [31:0] shl_ln291_fu_1678_p2;
wire   [5:0] trunc_ln281_4_fu_1671_p1;
wire   [27:0] in_shift_3_fu_1683_p1;
wire   [31:0] zext_ln291_3_fu_1698_p1;
wire   [0:0] icmp_ln292_fu_1687_p2;
wire   [5:0] shift_6_fu_1692_p2;
wire   [5:0] shift_7_fu_1708_p3;
wire   [6:0] zext_ln287_fu_1715_p1;
wire   [6:0] newexp_4_fu_1719_p2;
wire   [31:0] shl_ln291_4_fu_1702_p2;
wire   [22:0] tmp_25_fu_1729_p4;
wire   [22:0] tmp_26_fu_1739_p4;
wire   [31:0] zext_ln291_5_fu_1760_p1;
wire   [31:0] shl_ln291_5_fu_1763_p2;
wire   [27:0] in_shift_4_fu_1768_p1;
wire   [31:0] zext_ln291_4_fu_1782_p1;
wire   [0:0] icmp_ln292_2_fu_1772_p2;
wire   [5:0] shift_9_fu_1777_p2;
wire   [5:0] shift_10_fu_1791_p3;
wire  signed [8:0] sext_ln163_fu_1757_p1;
wire   [8:0] add_ln300_fu_1802_p2;
wire   [8:0] zext_ln287_2_fu_1798_p1;
wire   [8:0] newexp_fu_1808_p2;
wire   [0:0] tmp_27_fu_1814_p3;
wire   [31:0] shl_ln291_6_fu_1786_p2;
wire   [22:0] tmp_28_fu_1831_p4;
wire   [22:0] tmp_29_fu_1841_p4;
wire   [0:0] sin_results_sign_fu_1865_p33;
wire   [3:0] index_fu_1859_p3;
wire   [0:0] cos_results_sign_fu_1937_p33;
wire   [0:0] sin_results_sign_fu_1865_p35;
wire   [0:0] xor_ln186_fu_2009_p2;
wire   [0:0] or_ln306_fu_1822_p2;
wire   [0:0] or_ln186_fu_2027_p2;
wire   [7:0] select_ln186_fu_2020_p3;
wire   [7:0] empty_fu_1827_p1;
wire   [22:0] select_ln186_5_fu_2040_p3;
wire   [22:0] empty_675_fu_1851_p3;
wire   [0:0] cos_results_sign_fu_1937_p35;
wire   [0:0] sin_results_sign_3_fu_2014_p2;
wire   [7:0] sin_results_exp_fu_2032_p3;
wire   [22:0] sin_results_sig_fu_2047_p3;
wire   [0:0] cos_results_sign_3_fu_2055_p2;
wire   [0:0] not_and_ln179_fu_2081_p2;
wire   [0:0] empty_676_fu_2099_p2;
wire   [7:0] cos_results_exp_3_fu_2092_p3;
wire   [7:0] out_exp_fu_1725_p1;
wire   [22:0] cos_results_sig_3_cast_fu_2111_p3;
wire   [22:0] significand_fu_1749_p3;
wire   [0:0] tmp_19_fu_2127_p17;
wire   [31:0] tmp_21_fu_2166_p17;
wire   [3:0] tmp_21_fu_2166_p18;
wire   [31:0] t_8_fu_2206_p4;
wire   [31:0] t_9_fu_2213_p4;
wire   [31:0] s_out_fu_2220_p1;
wire   [31:0] c_out_fu_2224_p1;
wire   [31:0] tmp_20_fu_2288_p17;
wire    ap_CS_fsm_state42;
reg   [4:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state42_blk;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [43:0] mul_ln73_fu_1287_p00;
wire   [43:0] mul_ln73_fu_1287_p10;
wire   [28:0] mul_ln74_fu_1318_p00;
wire   [28:0] mul_ln74_fu_1318_p10;
wire   [42:0] mul_ln78_fu_1349_p00;
wire   [27:0] mul_ln79_fu_1380_p00;
wire   [29:0] Mx_zeros_fu_1091_p0;
wire   [0:0] Mx_zeros_fu_1091_p2;
wire   [31:0] c_7_fu_1520_p0;
wire   [0:0] c_7_fu_1520_p2;
wire   [31:0] c_8_fu_1572_p0;
wire   [0:0] c_8_fu_1572_p2;
wire   [31:0] c_6_fu_1584_p0;
wire   [0:0] c_6_fu_1584_p2;
wire   [31:0] c_5_fu_1663_p0;
wire   [0:0] c_5_fu_1663_p2;
wire   [3:0] sin_results_sign_fu_1865_p1;
wire   [3:0] sin_results_sign_fu_1865_p3;
wire   [3:0] sin_results_sign_fu_1865_p5;
wire   [3:0] sin_results_sign_fu_1865_p7;
wire   [3:0] sin_results_sign_fu_1865_p9;
wire   [3:0] sin_results_sign_fu_1865_p11;
wire   [3:0] sin_results_sign_fu_1865_p13;
wire   [3:0] sin_results_sign_fu_1865_p15;
wire  signed [3:0] sin_results_sign_fu_1865_p17;
wire  signed [3:0] sin_results_sign_fu_1865_p19;
wire  signed [3:0] sin_results_sign_fu_1865_p21;
wire  signed [3:0] sin_results_sign_fu_1865_p23;
wire  signed [3:0] sin_results_sign_fu_1865_p25;
wire  signed [3:0] sin_results_sign_fu_1865_p27;
wire  signed [3:0] sin_results_sign_fu_1865_p29;
wire  signed [3:0] sin_results_sign_fu_1865_p31;
wire   [3:0] cos_results_sign_fu_1937_p1;
wire   [3:0] cos_results_sign_fu_1937_p3;
wire   [3:0] cos_results_sign_fu_1937_p5;
wire   [3:0] cos_results_sign_fu_1937_p7;
wire   [3:0] cos_results_sign_fu_1937_p9;
wire   [3:0] cos_results_sign_fu_1937_p11;
wire   [3:0] cos_results_sign_fu_1937_p13;
wire   [3:0] cos_results_sign_fu_1937_p15;
wire  signed [3:0] cos_results_sign_fu_1937_p17;
wire  signed [3:0] cos_results_sign_fu_1937_p19;
wire  signed [3:0] cos_results_sign_fu_1937_p21;
wire  signed [3:0] cos_results_sign_fu_1937_p23;
wire  signed [3:0] cos_results_sign_fu_1937_p25;
wire  signed [3:0] cos_results_sign_fu_1937_p27;
wire  signed [3:0] cos_results_sign_fu_1937_p29;
wire  signed [3:0] cos_results_sign_fu_1937_p31;
wire   [2:0] tmp_19_fu_2127_p1;
wire   [2:0] tmp_19_fu_2127_p3;
wire   [2:0] tmp_19_fu_2127_p5;
wire   [2:0] tmp_19_fu_2127_p7;
wire  signed [2:0] tmp_19_fu_2127_p9;
wire  signed [2:0] tmp_19_fu_2127_p11;
wire  signed [2:0] tmp_19_fu_2127_p13;
wire  signed [2:0] tmp_19_fu_2127_p15;
wire   [3:0] tmp_21_fu_2166_p1;
wire   [3:0] tmp_21_fu_2166_p3;
wire   [3:0] tmp_21_fu_2166_p5;
wire   [3:0] tmp_21_fu_2166_p7;
wire  signed [3:0] tmp_21_fu_2166_p9;
wire  signed [3:0] tmp_21_fu_2166_p11;
wire  signed [3:0] tmp_21_fu_2166_p13;
wire  signed [3:0] tmp_21_fu_2166_p15;
wire   [3:0] tmp_20_fu_2288_p1;
wire   [3:0] tmp_20_fu_2288_p3;
wire   [3:0] tmp_20_fu_2288_p5;
wire   [3:0] tmp_20_fu_2288_p7;
wire  signed [3:0] tmp_20_fu_2288_p9;
wire  signed [3:0] tmp_20_fu_2288_p11;
wire  signed [3:0] tmp_20_fu_2288_p13;
wire  signed [3:0] tmp_20_fu_2288_p15;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 i_fu_340 = 10'd0;
end

llama_layer_RoPE_ref_4oPi_table_100_ROM_1P_LUTRAM_1R #(
    .DataWidth( 100 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
ref_4oPi_table_100_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ref_4oPi_table_100_address0),
    .ce0(ref_4oPi_table_100_ce0_local),
    .q0(ref_4oPi_table_100_q0)
);

llama_layer_RoPE_second_order_float_cos_K0_ROM_1P_LUTRAM_1R #(
    .DataWidth( 28 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
second_order_float_cos_K0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(second_order_float_cos_K0_address0),
    .ce0(second_order_float_cos_K0_ce0_local),
    .q0(second_order_float_cos_K0_q0)
);

llama_layer_RoPE_second_order_float_cos_K1_ROM_1P_LUTRAM_1R #(
    .DataWidth( 22 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
second_order_float_cos_K1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(second_order_float_cos_K1_address0),
    .ce0(second_order_float_cos_K1_ce0_local),
    .q0(second_order_float_cos_K1_q0)
);

llama_layer_RoPE_second_order_float_cos_K2_ROM_1P_LUTRAM_1R #(
    .DataWidth( 14 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
second_order_float_cos_K2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(second_order_float_cos_K2_address0),
    .ce0(second_order_float_cos_K2_ce0_local),
    .q0(second_order_float_cos_K2_q0)
);

llama_layer_RoPE_second_order_float_sin_K0_ROM_1P_LUTRAM_1R #(
    .DataWidth( 29 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
second_order_float_sin_K0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(second_order_float_sin_K0_address0),
    .ce0(second_order_float_sin_K0_ce0_local),
    .q0(second_order_float_sin_K0_q0)
);

llama_layer_RoPE_second_order_float_sin_K1_ROM_1P_LUTRAM_1R #(
    .DataWidth( 21 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
second_order_float_sin_K1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(second_order_float_sin_K1_address0),
    .ce0(second_order_float_sin_K1_ce0_local),
    .q0(second_order_float_sin_K1_q0)
);

llama_layer_RoPE_second_order_float_sin_K2_ROM_1P_LUTRAM_1R #(
    .DataWidth( 13 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
second_order_float_sin_K2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(second_order_float_sin_K2_address0),
    .ce0(second_order_float_sin_K2_ce0_local),
    .q0(second_order_float_sin_K2_q0)
);

llama_layer_ctlz_30_30_1_1 #(
    .din_WIDTH( 30 ),
    .dout_WIDTH( 30 ))
ctlz_30_30_1_1_U493(
    .din(Mx_zeros_fu_1091_p1),
    .dout(Mx_zeros_fu_1091_p3)
);

llama_layer_mul_15ns_15ns_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
mul_15ns_15ns_30_1_1_U494(
    .din0(mul_ln69_fu_1213_p0),
    .din1(mul_ln69_fu_1213_p1),
    .dout(mul_ln69_fu_1213_p2)
);

llama_layer_mul_22ns_22ns_44_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 44 ))
mul_22ns_22ns_44_1_1_U495(
    .din0(mul_ln73_fu_1287_p0),
    .din1(mul_ln73_fu_1287_p1),
    .dout(mul_ln73_fu_1287_p2)
);

llama_layer_mul_15ns_14ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
mul_15ns_14ns_29_1_1_U496(
    .din0(mul_ln74_fu_1318_p0),
    .din1(mul_ln74_fu_1318_p1),
    .dout(mul_ln74_fu_1318_p2)
);

llama_layer_mul_22ns_21s_43_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 43 ))
mul_22ns_21s_43_1_1_U497(
    .din0(mul_ln78_fu_1349_p0),
    .din1(second_order_float_sin_K1_q0),
    .dout(mul_ln78_fu_1349_p2)
);

llama_layer_mul_15ns_13s_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 28 ))
mul_15ns_13s_28_1_1_U498(
    .din0(mul_ln79_fu_1380_p0),
    .din1(second_order_float_sin_K2_q0),
    .dout(mul_ln79_fu_1380_p2)
);

llama_layer_ctlz_32_32_1_1 #(
    .din_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
ctlz_32_32_1_1_U499(
    .din(c_7_fu_1520_p1),
    .dout(c_7_fu_1520_p3)
);

llama_layer_ctlz_32_32_1_1 #(
    .din_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
ctlz_32_32_1_1_U500(
    .din(c_8_fu_1572_p1),
    .dout(c_8_fu_1572_p3)
);

llama_layer_ctlz_32_32_1_1 #(
    .din_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
ctlz_32_32_1_1_U501(
    .din(c_6_fu_1584_p1),
    .dout(c_6_fu_1584_p3)
);

llama_layer_ctlz_32_32_1_1 #(
    .din_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
ctlz_32_32_1_1_U502(
    .din(c_5_fu_1663_p1),
    .dout(c_5_fu_1663_p3)
);

(* dissolve_hierarchy = "yes" *) llama_layer_sparsemux_33_4_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 1 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 1 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 1 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 1 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 1 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 1 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 1 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 1 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 1 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 1 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 1 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 1 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 1 ),
    .CASE13( 4'hD ),
    .din13_WIDTH( 1 ),
    .CASE14( 4'hE ),
    .din14_WIDTH( 1 ),
    .CASE15( 4'hF ),
    .din15_WIDTH( 1 ),
    .def_WIDTH( 1 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
sparsemux_33_4_1_1_1_U503(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd0),
    .din7(1'd1),
    .din8(1'd1),
    .din9(1'd0),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd0),
    .din13(1'd1),
    .din14(1'd0),
    .din15(1'd0),
    .def(sin_results_sign_fu_1865_p33),
    .sel(index_fu_1859_p3),
    .dout(sin_results_sign_fu_1865_p35)
);

(* dissolve_hierarchy = "yes" *) llama_layer_sparsemux_33_4_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 1 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 1 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 1 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 1 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 1 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 1 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 1 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 1 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 1 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 1 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 1 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 1 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 1 ),
    .CASE13( 4'hD ),
    .din13_WIDTH( 1 ),
    .CASE14( 4'hE ),
    .din14_WIDTH( 1 ),
    .CASE15( 4'hF ),
    .din15_WIDTH( 1 ),
    .def_WIDTH( 1 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
sparsemux_33_4_1_1_1_U504(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd0),
    .din3(1'd1),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(1'd0),
    .din9(1'd1),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd1),
    .din13(1'd0),
    .din14(1'd0),
    .din15(1'd0),
    .def(cos_results_sign_fu_1937_p33),
    .sel(index_fu_1859_p3),
    .dout(cos_results_sign_fu_1937_p35)
);

(* dissolve_hierarchy = "yes" *) llama_layer_sparsemux_17_3_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 1 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 1 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 1 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 1 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 1 ),
    .CASE5( 3'h5 ),
    .din5_WIDTH( 1 ),
    .CASE6( 3'h6 ),
    .din6_WIDTH( 1 ),
    .CASE7( 3'h7 ),
    .din7_WIDTH( 1 ),
    .def_WIDTH( 1 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
sparsemux_17_3_1_1_1_U505(
    .din0(1'd0),
    .din1(1'd1),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd0),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .def(tmp_19_fu_2127_p17),
    .sel(k_reg_2515_pp0_iter32_reg),
    .dout(tmp_19_fu_2127_p19)
);

(* dissolve_hierarchy = "yes" *) llama_layer_sparsemux_17_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h2 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h4 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h6 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h8 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'hA ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'hC ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'hE ),
    .din7_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_17_4_32_1_1_U506(
    .din0(in_1_q0),
    .din1(in_3_q0),
    .din2(in_5_q0),
    .din3(in_7_q0),
    .din4(in_9_q0),
    .din5(in_11_q0),
    .din6(in_13_q0),
    .din7(in_15_q0),
    .def(tmp_21_fu_2166_p17),
    .sel(tmp_21_fu_2166_p18),
    .dout(tmp_21_fu_2166_p19)
);

(* dissolve_hierarchy = "yes" *) llama_layer_sparsemux_17_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h2 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h4 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h6 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h8 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'hA ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'hC ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'hE ),
    .din7_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_17_4_32_1_1_U507(
    .din0(in_0_q0),
    .din1(in_2_q0),
    .din2(in_4_q0),
    .din3(in_6_q0),
    .din4(in_8_q0),
    .din5(in_10_q0),
    .din6(in_12_q0),
    .din7(in_14_q0),
    .def(tmp_20_fu_2288_p17),
    .sel(trunc_ln16_reg_2765_pp0_iter34_reg),
    .dout(tmp_20_fu_2288_p19)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state4)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state4);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter37 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_fu_340 <= 10'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln16_fu_838_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_340 <= add_ln16_fu_844_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        A_reg_2565 <= {{select_ln506_2_fu_1171_p3[28:22]}};
        B_reg_2559 <= B_fu_1178_p1;
        B_reg_2559_pp0_iter28_reg <= B_reg_2559;
        B_trunc_reg_2570 <= {{select_ln506_2_fu_1171_p3[21:7]}};
        Ex_2_reg_2531 <= Ex_2_fu_1112_p2;
        Ex_2_reg_2531_pp0_iter27_reg <= Ex_2_reg_2531;
        Ex_2_reg_2531_pp0_iter28_reg <= Ex_2_reg_2531_pp0_iter27_reg;
        Ex_2_reg_2531_pp0_iter29_reg <= Ex_2_reg_2531_pp0_iter28_reg;
        Ex_2_reg_2531_pp0_iter30_reg <= Ex_2_reg_2531_pp0_iter29_reg;
        Ex_2_reg_2531_pp0_iter31_reg <= Ex_2_reg_2531_pp0_iter30_reg;
        Ex_2_reg_2531_pp0_iter32_reg <= Ex_2_reg_2531_pp0_iter31_reg;
        Med_reg_2494 <= {{shl_ln379_fu_970_p2[99:20]}};
        Mx_bits_6_reg_2521 <= Mx_bits_6_fu_1056_p3;
        add_ln75_2_reg_2641 <= add_ln75_2_fu_1417_p2;
        add_ln75_2_reg_2641_pp0_iter31_reg <= add_ln75_2_reg_2641;
        add_ln80_2_reg_2646 <= add_ln80_2_fu_1439_p2;
        and_ln179_reg_2505 <= and_ln179_fu_1013_p2;
        and_ln179_reg_2505_pp0_iter25_reg <= and_ln179_reg_2505;
        and_ln179_reg_2505_pp0_iter26_reg <= and_ln179_reg_2505_pp0_iter25_reg;
        and_ln179_reg_2505_pp0_iter27_reg <= and_ln179_reg_2505_pp0_iter26_reg;
        and_ln179_reg_2505_pp0_iter28_reg <= and_ln179_reg_2505_pp0_iter27_reg;
        and_ln179_reg_2505_pp0_iter29_reg <= and_ln179_reg_2505_pp0_iter28_reg;
        and_ln179_reg_2505_pp0_iter30_reg <= and_ln179_reg_2505_pp0_iter29_reg;
        and_ln179_reg_2505_pp0_iter31_reg <= and_ln179_reg_2505_pp0_iter30_reg;
        and_ln179_reg_2505_pp0_iter32_reg <= and_ln179_reg_2505_pp0_iter31_reg;
        c_6_reg_2705 <= c_6_fu_1584_p3;
        c_7_reg_2683 <= c_7_fu_1520_p3;
        c_8_reg_2694 <= c_8_fu_1572_p3;
        c_out_4_reg_2826 <= c_out_4_fu_2235_p3;
        closepath_reg_2478 <= closepath_fu_924_p2;
        closepath_reg_2478_pp0_iter23_reg <= closepath_reg_2478;
        closepath_reg_2478_pp0_iter24_reg <= closepath_reg_2478_pp0_iter23_reg;
        closepath_reg_2478_pp0_iter25_reg <= closepath_reg_2478_pp0_iter24_reg;
        cos_result_reg_2673 <= cos_result_fu_1484_p2;
        cos_results_exp_4_reg_2795 <= cos_results_exp_4_fu_2103_p3;
        cos_results_sig_2_reg_2800 <= cos_results_sig_2_fu_2119_p3;
        cos_results_sign_4_reg_2790 <= cos_results_sign_4_fu_2086_p2;
        din_exp_reg_2465 <= {{data_fu_901_p1[30:23]}};
        din_exp_reg_2465_pp0_iter23_reg <= din_exp_reg_2465;
        din_exp_reg_2465_pp0_iter24_reg <= din_exp_reg_2465_pp0_iter23_reg;
        din_exp_reg_2465_pp0_iter25_reg <= din_exp_reg_2465_pp0_iter24_reg;
        din_sig_reg_2472 <= din_sig_fu_920_p1;
        din_sig_reg_2472_pp0_iter23_reg <= din_sig_reg_2472;
        din_sign_reg_2459 <= data_fu_901_p1[32'd31];
        din_sign_reg_2459_pp0_iter23_reg <= din_sign_reg_2459;
        din_sign_reg_2459_pp0_iter24_reg <= din_sign_reg_2459_pp0_iter23_reg;
        din_sign_reg_2459_pp0_iter25_reg <= din_sign_reg_2459_pp0_iter24_reg;
        din_sign_reg_2459_pp0_iter26_reg <= din_sign_reg_2459_pp0_iter25_reg;
        din_sign_reg_2459_pp0_iter27_reg <= din_sign_reg_2459_pp0_iter26_reg;
        din_sign_reg_2459_pp0_iter28_reg <= din_sign_reg_2459_pp0_iter27_reg;
        din_sign_reg_2459_pp0_iter29_reg <= din_sign_reg_2459_pp0_iter28_reg;
        din_sign_reg_2459_pp0_iter30_reg <= din_sign_reg_2459_pp0_iter29_reg;
        din_sign_reg_2459_pp0_iter31_reg <= din_sign_reg_2459_pp0_iter30_reg;
        din_sign_reg_2459_pp0_iter32_reg <= din_sign_reg_2459_pp0_iter31_reg;
        i_25_reg_2410_pp0_iter10_reg <= i_25_reg_2410_pp0_iter9_reg;
        i_25_reg_2410_pp0_iter11_reg <= i_25_reg_2410_pp0_iter10_reg;
        i_25_reg_2410_pp0_iter12_reg <= i_25_reg_2410_pp0_iter11_reg;
        i_25_reg_2410_pp0_iter13_reg <= i_25_reg_2410_pp0_iter12_reg;
        i_25_reg_2410_pp0_iter14_reg <= i_25_reg_2410_pp0_iter13_reg;
        i_25_reg_2410_pp0_iter15_reg <= i_25_reg_2410_pp0_iter14_reg;
        i_25_reg_2410_pp0_iter16_reg <= i_25_reg_2410_pp0_iter15_reg;
        i_25_reg_2410_pp0_iter17_reg <= i_25_reg_2410_pp0_iter16_reg;
        i_25_reg_2410_pp0_iter18_reg <= i_25_reg_2410_pp0_iter17_reg;
        i_25_reg_2410_pp0_iter19_reg <= i_25_reg_2410_pp0_iter18_reg;
        i_25_reg_2410_pp0_iter20_reg <= i_25_reg_2410_pp0_iter19_reg;
        i_25_reg_2410_pp0_iter21_reg <= i_25_reg_2410_pp0_iter20_reg;
        i_25_reg_2410_pp0_iter22_reg <= i_25_reg_2410_pp0_iter21_reg;
        i_25_reg_2410_pp0_iter23_reg <= i_25_reg_2410_pp0_iter22_reg;
        i_25_reg_2410_pp0_iter24_reg <= i_25_reg_2410_pp0_iter23_reg;
        i_25_reg_2410_pp0_iter25_reg <= i_25_reg_2410_pp0_iter24_reg;
        i_25_reg_2410_pp0_iter26_reg <= i_25_reg_2410_pp0_iter25_reg;
        i_25_reg_2410_pp0_iter27_reg <= i_25_reg_2410_pp0_iter26_reg;
        i_25_reg_2410_pp0_iter28_reg <= i_25_reg_2410_pp0_iter27_reg;
        i_25_reg_2410_pp0_iter29_reg <= i_25_reg_2410_pp0_iter28_reg;
        i_25_reg_2410_pp0_iter2_reg <= i_25_reg_2410_pp0_iter1_reg;
        i_25_reg_2410_pp0_iter30_reg <= i_25_reg_2410_pp0_iter29_reg;
        i_25_reg_2410_pp0_iter31_reg <= i_25_reg_2410_pp0_iter30_reg;
        i_25_reg_2410_pp0_iter32_reg <= i_25_reg_2410_pp0_iter31_reg;
        i_25_reg_2410_pp0_iter3_reg <= i_25_reg_2410_pp0_iter2_reg;
        i_25_reg_2410_pp0_iter4_reg <= i_25_reg_2410_pp0_iter3_reg;
        i_25_reg_2410_pp0_iter5_reg <= i_25_reg_2410_pp0_iter4_reg;
        i_25_reg_2410_pp0_iter6_reg <= i_25_reg_2410_pp0_iter5_reg;
        i_25_reg_2410_pp0_iter7_reg <= i_25_reg_2410_pp0_iter6_reg;
        i_25_reg_2410_pp0_iter8_reg <= i_25_reg_2410_pp0_iter7_reg;
        i_25_reg_2410_pp0_iter9_reg <= i_25_reg_2410_pp0_iter8_reg;
        icmp_ln186_reg_2550 <= icmp_ln186_fu_1136_p2;
        icmp_ln186_reg_2550_pp0_iter27_reg <= icmp_ln186_reg_2550;
        icmp_ln186_reg_2550_pp0_iter28_reg <= icmp_ln186_reg_2550_pp0_iter27_reg;
        icmp_ln186_reg_2550_pp0_iter29_reg <= icmp_ln186_reg_2550_pp0_iter28_reg;
        icmp_ln186_reg_2550_pp0_iter30_reg <= icmp_ln186_reg_2550_pp0_iter29_reg;
        icmp_ln186_reg_2550_pp0_iter31_reg <= icmp_ln186_reg_2550_pp0_iter30_reg;
        icmp_ln186_reg_2550_pp0_iter32_reg <= icmp_ln186_reg_2550_pp0_iter31_reg;
        icmp_ln306_reg_2720 <= icmp_ln306_fu_1606_p2;
        k_reg_2515 <= k_fu_1039_p3;
        k_reg_2515_pp0_iter26_reg <= k_reg_2515;
        k_reg_2515_pp0_iter27_reg <= k_reg_2515_pp0_iter26_reg;
        k_reg_2515_pp0_iter28_reg <= k_reg_2515_pp0_iter27_reg;
        k_reg_2515_pp0_iter29_reg <= k_reg_2515_pp0_iter28_reg;
        k_reg_2515_pp0_iter30_reg <= k_reg_2515_pp0_iter29_reg;
        k_reg_2515_pp0_iter31_reg <= k_reg_2515_pp0_iter30_reg;
        k_reg_2515_pp0_iter32_reg <= k_reg_2515_pp0_iter31_reg;
        lshr_ln2_reg_2770 <= {{i_25_reg_2410_pp0_iter32_reg[9:3]}};
        lshr_ln2_reg_2770_pp0_iter34_reg <= lshr_ln2_reg_2770;
        lshr_ln2_reg_2770_pp0_iter35_reg <= lshr_ln2_reg_2770_pp0_iter34_reg;
        lshr_ln2_reg_2770_pp0_iter36_reg <= lshr_ln2_reg_2770_pp0_iter35_reg;
        mul_reg_2437 <= grp_fu_3553_p_dout0;
        s_out_4_reg_2819 <= s_out_4_fu_2228_p3;
        sin_results_exp_2_reg_2780 <= sin_results_exp_2_fu_2067_p3;
        sin_results_sig_2_reg_2785 <= sin_results_sig_2_fu_2074_p3;
        sin_results_sign_4_reg_2775 <= sin_results_sign_4_fu_2061_p3;
        tmp_14_reg_2526 <= {{Mx_bits_6_fu_1056_p3[57:29]}};
        tmp_16_reg_2616 <= {{mul_ln73_fu_1287_p2[43:23]}};
        tmp_19_reg_2805 <= tmp_19_fu_2127_p19;
        tmp_21_reg_2811 <= tmp_21_fu_2166_p19;
        tmp_22_reg_2585 <= {{mul_ln69_fu_1213_p2[29:15]}};
        tmp_23_reg_2538 <= Ex_2_fu_1112_p2[32'd7];
        tmp_24_reg_2621 <= {{mul_ln74_fu_1318_p2[28:16]}};
        tmp_s_reg_2544 <= {{shl_ln504_fu_1103_p2[57:29]}};
        tmp_s_reg_2544_pp0_iter27_reg <= tmp_s_reg_2544;
        tmp_s_reg_2544_pp0_iter28_reg <= tmp_s_reg_2544_pp0_iter27_reg;
        tmp_s_reg_2544_pp0_iter29_reg <= tmp_s_reg_2544_pp0_iter28_reg;
        tmp_s_reg_2544_pp0_iter30_reg <= tmp_s_reg_2544_pp0_iter29_reg;
        trunc_ln10_reg_2636 <= {{second_order_float_sin_K0_q0[28:1]}};
        trunc_ln12_reg_2715 <= {{grp_fu_3588_p_dout0[55:29]}};
        trunc_ln16_2_reg_2423_pp0_iter10_reg <= trunc_ln16_2_reg_2423_pp0_iter9_reg;
        trunc_ln16_2_reg_2423_pp0_iter11_reg <= trunc_ln16_2_reg_2423_pp0_iter10_reg;
        trunc_ln16_2_reg_2423_pp0_iter12_reg <= trunc_ln16_2_reg_2423_pp0_iter11_reg;
        trunc_ln16_2_reg_2423_pp0_iter13_reg <= trunc_ln16_2_reg_2423_pp0_iter12_reg;
        trunc_ln16_2_reg_2423_pp0_iter14_reg <= trunc_ln16_2_reg_2423_pp0_iter13_reg;
        trunc_ln16_2_reg_2423_pp0_iter15_reg <= trunc_ln16_2_reg_2423_pp0_iter14_reg;
        trunc_ln16_2_reg_2423_pp0_iter16_reg <= trunc_ln16_2_reg_2423_pp0_iter15_reg;
        trunc_ln16_2_reg_2423_pp0_iter17_reg <= trunc_ln16_2_reg_2423_pp0_iter16_reg;
        trunc_ln16_2_reg_2423_pp0_iter18_reg <= trunc_ln16_2_reg_2423_pp0_iter17_reg;
        trunc_ln16_2_reg_2423_pp0_iter19_reg <= trunc_ln16_2_reg_2423_pp0_iter18_reg;
        trunc_ln16_2_reg_2423_pp0_iter20_reg <= trunc_ln16_2_reg_2423_pp0_iter19_reg;
        trunc_ln16_2_reg_2423_pp0_iter21_reg <= trunc_ln16_2_reg_2423_pp0_iter20_reg;
        trunc_ln16_2_reg_2423_pp0_iter22_reg <= trunc_ln16_2_reg_2423_pp0_iter21_reg;
        trunc_ln16_2_reg_2423_pp0_iter23_reg <= trunc_ln16_2_reg_2423_pp0_iter22_reg;
        trunc_ln16_2_reg_2423_pp0_iter24_reg <= trunc_ln16_2_reg_2423_pp0_iter23_reg;
        trunc_ln16_2_reg_2423_pp0_iter25_reg <= trunc_ln16_2_reg_2423_pp0_iter24_reg;
        trunc_ln16_2_reg_2423_pp0_iter26_reg <= trunc_ln16_2_reg_2423_pp0_iter25_reg;
        trunc_ln16_2_reg_2423_pp0_iter27_reg <= trunc_ln16_2_reg_2423_pp0_iter26_reg;
        trunc_ln16_2_reg_2423_pp0_iter28_reg <= trunc_ln16_2_reg_2423_pp0_iter27_reg;
        trunc_ln16_2_reg_2423_pp0_iter29_reg <= trunc_ln16_2_reg_2423_pp0_iter28_reg;
        trunc_ln16_2_reg_2423_pp0_iter2_reg <= trunc_ln16_2_reg_2423;
        trunc_ln16_2_reg_2423_pp0_iter30_reg <= trunc_ln16_2_reg_2423_pp0_iter29_reg;
        trunc_ln16_2_reg_2423_pp0_iter31_reg <= trunc_ln16_2_reg_2423_pp0_iter30_reg;
        trunc_ln16_2_reg_2423_pp0_iter32_reg <= trunc_ln16_2_reg_2423_pp0_iter31_reg;
        trunc_ln16_2_reg_2423_pp0_iter33_reg <= trunc_ln16_2_reg_2423_pp0_iter32_reg;
        trunc_ln16_2_reg_2423_pp0_iter34_reg <= trunc_ln16_2_reg_2423_pp0_iter33_reg;
        trunc_ln16_2_reg_2423_pp0_iter35_reg <= trunc_ln16_2_reg_2423_pp0_iter34_reg;
        trunc_ln16_2_reg_2423_pp0_iter36_reg <= trunc_ln16_2_reg_2423_pp0_iter35_reg;
        trunc_ln16_2_reg_2423_pp0_iter3_reg <= trunc_ln16_2_reg_2423_pp0_iter2_reg;
        trunc_ln16_2_reg_2423_pp0_iter4_reg <= trunc_ln16_2_reg_2423_pp0_iter3_reg;
        trunc_ln16_2_reg_2423_pp0_iter5_reg <= trunc_ln16_2_reg_2423_pp0_iter4_reg;
        trunc_ln16_2_reg_2423_pp0_iter6_reg <= trunc_ln16_2_reg_2423_pp0_iter5_reg;
        trunc_ln16_2_reg_2423_pp0_iter7_reg <= trunc_ln16_2_reg_2423_pp0_iter6_reg;
        trunc_ln16_2_reg_2423_pp0_iter8_reg <= trunc_ln16_2_reg_2423_pp0_iter7_reg;
        trunc_ln16_2_reg_2423_pp0_iter9_reg <= trunc_ln16_2_reg_2423_pp0_iter8_reg;
        trunc_ln16_reg_2765 <= trunc_ln16_fu_1644_p1;
        trunc_ln16_reg_2765_pp0_iter34_reg <= trunc_ln16_reg_2765;
        trunc_ln276_reg_2678 <= trunc_ln276_fu_1516_p1;
        trunc_ln281_5_reg_2699 <= trunc_ln281_5_fu_1580_p1;
        trunc_ln281_6_reg_2710 <= trunc_ln281_6_fu_1592_p1;
        trunc_ln281_reg_2688 <= trunc_ln281_fu_1528_p1;
        trunc_ln379_reg_2489 <= trunc_ln379_fu_963_p1;
        trunc_ln7_reg_2611 <= {{second_order_float_cos_K0_q0[27:1]}};
        trunc_ln8_reg_2626 <= {{mul_ln78_fu_1349_p2[42:23]}};
        trunc_ln9_reg_2631 <= {{mul_ln79_fu_1380_p2[27:16]}};
        val_reg_2454 <= grp_fu_3561_p_dout0;
        y_assign_reg_2443 <= grp_fu_3557_p_dout0;
        zext_ln16_2_reg_2661[5 : 0] <= zext_ln16_2_fu_1469_p1[5 : 0];
        zext_ln16_2_reg_2661_pp0_iter33_reg[5 : 0] <= zext_ln16_2_reg_2661[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        conv_reg_2404 <= grp_fu_3573_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_762_p0_keep <= grp_fu_3573_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_767_p0_keep <= mul_reg_2437;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_772_p0_keep <= conv_reg_2404;
        grp_fu_772_p1_keep <= tmp_reg_2448;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter34 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_776_p0_keep <= tmp_21_reg_2811;
        grp_fu_776_p1_keep <= s_out_4_fu_2228_p3;
        grp_fu_780_p0_keep <= tmp_21_reg_2811;
        grp_fu_780_p1_keep <= c_out_4_fu_2235_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_25_reg_2410 <= i_fu_340;
        i_25_reg_2410_pp0_iter1_reg <= i_25_reg_2410;
        trunc_ln16_2_reg_2423 <= trunc_ln16_2_fu_855_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp100)) begin
        tmp_reg_2448 <= grp_pow_generic_float_s_fu_3596_p_dout0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

always @ (*) begin
    if ((icmp_ln16_fu_838_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 
    == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_762_p0 = grp_fu_3573_p_dout0;
    end else begin
        grp_fu_762_p0 = grp_fu_762_p0_keep;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_767_p0 = mul_reg_2437;
    end else begin
        grp_fu_767_p0 = grp_fu_767_p0_keep;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_772_p0 = conv_reg_2404;
    end else begin
        grp_fu_772_p0 = grp_fu_772_p0_keep;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_772_p1 = tmp_reg_2448;
    end else begin
        grp_fu_772_p1 = grp_fu_772_p1_keep;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter34 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_776_p0 = tmp_21_reg_2811;
    end else begin
        grp_fu_776_p0 = grp_fu_776_p0_keep;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter34 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_776_p1 = s_out_4_fu_2228_p3;
    end else begin
        grp_fu_776_p1 = grp_fu_776_p1_keep;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter34 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_780_p0 = tmp_21_reg_2811;
    end else begin
        grp_fu_780_p0 = grp_fu_780_p0_keep;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter34 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_780_p1 = c_out_4_fu_2235_p3;
    end else begin
        grp_fu_780_p1 = grp_fu_780_p1_keep;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_784_p0 = zext_ln18_fu_861_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_784_p0 = pos_r;
    end else begin
        grp_fu_784_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter34 == 1'b1) & (trunc_ln16_reg_2765 == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_0_ce0_local = 1'b1;
    end else begin
        in_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter34 == 1'b1) & (trunc_ln16_reg_2765 == 4'd10) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_10_ce0_local = 1'b1;
    end else begin
        in_10_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter32 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_11_ce0_local = 1'b1;
    end else begin
        in_11_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter34 == 1'b1) & (trunc_ln16_reg_2765 == 4'd12) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_12_ce0_local = 1'b1;
    end else begin
        in_12_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter32 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_13_ce0_local = 1'b1;
    end else begin
        in_13_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter34 == 1'b1) & (trunc_ln16_reg_2765 == 4'd14) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_14_ce0_local = 1'b1;
    end else begin
        in_14_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter32 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_15_ce0_local = 1'b1;
    end else begin
        in_15_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter32 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_1_ce0_local = 1'b1;
    end else begin
        in_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter34 == 1'b1) & (trunc_ln16_reg_2765 == 4'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_2_ce0_local = 1'b1;
    end else begin
        in_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter32 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_3_ce0_local = 1'b1;
    end else begin
        in_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter34 == 1'b1) & (trunc_ln16_reg_2765 == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_4_ce0_local = 1'b1;
    end else begin
        in_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter32 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_5_ce0_local = 1'b1;
    end else begin
        in_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter34 == 1'b1) & (trunc_ln16_reg_2765 == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_6_ce0_local = 1'b1;
    end else begin
        in_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter32 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_7_ce0_local = 1'b1;
    end else begin
        in_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter34 == 1'b1) & (trunc_ln16_reg_2765 == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_8_ce0_local = 1'b1;
    end else begin
        in_8_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter32 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_9_ce0_local = 1'b1;
    end else begin
        in_9_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter37 == 1'b1) & (trunc_ln16_2_reg_2423_pp0_iter36_reg == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_0_ce0_local = 1'b1;
    end else begin
        out_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter37 == 1'b1) & (trunc_ln16_2_reg_2423_pp0_iter36_reg == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_0_we0_local = 1'b1;
    end else begin
        out_0_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter37 == 1'b1) & (trunc_ln16_2_reg_2423_pp0_iter36_reg == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_1_ce0_local = 1'b1;
    end else begin
        out_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter37 == 1'b1) & (trunc_ln16_2_reg_2423_pp0_iter36_reg == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_1_we0_local = 1'b1;
    end else begin
        out_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter37 == 1'b1) & (trunc_ln16_2_reg_2423_pp0_iter36_reg == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_2_ce0_local = 1'b1;
    end else begin
        out_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter37 == 1'b1) & (trunc_ln16_2_reg_2423_pp0_iter36_reg == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_2_we0_local = 1'b1;
    end else begin
        out_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter37 == 1'b1) & (trunc_ln16_2_reg_2423_pp0_iter36_reg == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_3_ce0_local = 1'b1;
    end else begin
        out_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter37 == 1'b1) & (trunc_ln16_2_reg_2423_pp0_iter36_reg == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_3_we0_local = 1'b1;
    end else begin
        out_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter37 == 1'b1) & (trunc_ln16_2_reg_2423_pp0_iter36_reg == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_4_ce0_local = 1'b1;
    end else begin
        out_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter37 == 1'b1) & (trunc_ln16_2_reg_2423_pp0_iter36_reg == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_4_we0_local = 1'b1;
    end else begin
        out_4_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter37 == 1'b1) & (trunc_ln16_2_reg_2423_pp0_iter36_reg == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_5_ce0_local = 1'b1;
    end else begin
        out_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter37 == 1'b1) & (trunc_ln16_2_reg_2423_pp0_iter36_reg == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_5_we0_local = 1'b1;
    end else begin
        out_5_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln16_2_reg_2423_pp0_iter36_reg == 3'd2) & ~(trunc_ln16_2_reg_2423_pp0_iter36_reg == 3'd4) & ~(trunc_ln16_2_reg_2423_pp0_iter36_reg == 3'd0) & (ap_enable_reg_pp0_iter37 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_6_ce0_local = 1'b1;
    end else begin
        out_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln16_2_reg_2423_pp0_iter36_reg == 3'd2) & ~(trunc_ln16_2_reg_2423_pp0_iter36_reg == 3'd4) & ~(trunc_ln16_2_reg_2423_pp0_iter36_reg == 3'd0) & (ap_enable_reg_pp0_iter37 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_6_we0_local = 1'b1;
    end else begin
        out_6_we0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln16_2_reg_2423_pp0_iter36_reg == 3'd2) & ~(trunc_ln16_2_reg_2423_pp0_iter36_reg == 3'd4) & ~(trunc_ln16_2_reg_2423_pp0_iter36_reg == 3'd0) & (ap_enable_reg_pp0_iter37 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_7_ce0_local = 1'b1;
    end else begin
        out_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln16_2_reg_2423_pp0_iter36_reg == 3'd2) & ~(trunc_ln16_2_reg_2423_pp0_iter36_reg == 3'd4) & ~(trunc_ln16_2_reg_2423_pp0_iter36_reg == 3'd0) & (ap_enable_reg_pp0_iter37 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_7_we0_local = 1'b1;
    end else begin
        out_7_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ref_4oPi_table_100_ce0_local = 1'b1;
    end else begin
        ref_4oPi_table_100_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter28 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        second_order_float_cos_K0_ce0_local = 1'b1;
    end else begin
        second_order_float_cos_K0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter28 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        second_order_float_cos_K1_ce0_local = 1'b1;
    end else begin
        second_order_float_cos_K1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter28 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        second_order_float_cos_K2_ce0_local = 1'b1;
    end else begin
        second_order_float_cos_K2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter28 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        second_order_float_sin_K0_ce0_local = 1'b1;
    end else begin
        second_order_float_sin_K0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter28 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        second_order_float_sin_K1_ce0_local = 1'b1;
    end else begin
        second_order_float_sin_K1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter28 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        second_order_float_sin_K2_ce0_local = 1'b1;
    end else begin
        second_order_float_sin_K2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln16_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter37 == 1'b1) & (ap_enable_reg_pp0_iter36 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter37 == 1'b1) & (ap_enable_reg_pp0_iter36 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln16_fu_838_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B_fu_1178_p1 = select_ln506_2_fu_1171_p3[21:0];

assign Ex_2_fu_1112_p2 = (select_ln453_fu_1077_p3 - trunc_ln505_fu_1108_p1);

assign Ex_fu_1072_p2 = ($signed(din_exp_reg_2465_pp0_iter25_reg) + $signed(8'd131));

assign Mx_bits_4_fu_1050_p2 = (58'd0 - Mx_bits_fu_1019_p4);

assign Mx_bits_6_fu_1056_p3 = ((trunc_ln491_fu_1046_p1[0:0] == 1'b1) ? Mx_bits_4_fu_1050_p2 : Mx_bits_fu_1019_p4);

assign Mx_bits_fu_1019_p4 = {{grp_fu_3592_p_dout0[76:19]}};

assign Mx_zeros_fu_1091_p1 = {{tmp_14_reg_2526}, {1'd1}};

assign X_fu_984_p3 = {{1'd1}, {din_sig_reg_2472_pp0_iter23_reg}};

assign add_ln16_fu_844_p2 = (i_fu_340 + 10'd2);

assign add_ln300_fu_1802_p2 = ($signed(sext_ln163_fu_1757_p1) + $signed(9'd127));

assign add_ln376_fu_930_p2 = ($signed(din_exp_fu_912_p3) + $signed(8'd194));

assign add_ln75_2_fu_1417_p2 = (add_ln75_fu_1412_p2 + zext_ln73_3_fu_1406_p1);

assign add_ln75_fu_1412_p2 = (trunc_ln7_reg_2611 + zext_ln74_4_fu_1409_p1);

assign add_ln80_2_fu_1439_p2 = ($signed(sext_ln80_4_fu_1435_p1) + $signed(trunc_ln10_reg_2636));

assign add_ln80_fu_1429_p2 = ($signed(sext_ln80_fu_1423_p1) + $signed(sext_ln80_3_fu_1426_p1));

assign addr_fu_936_p3 = ((closepath_fu_924_p2[0:0] == 1'b1) ? 8'd63 : add_ln376_fu_930_p2);

assign and_ln179_fu_1013_p2 = (icmp_ln179_fu_1003_p2 & icmp_ln179_2_fu_1008_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp100 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp88 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign c_5_fu_1663_p1 = {{trunc_ln276_reg_2678}, {19'd262144}};

assign c_6_fu_1584_p1 = {{tmp_18_fu_1554_p4}, {19'd262144}};

assign c_7_fu_1520_p1 = {{tmp_15_fu_1500_p3}, {16'd32768}};

assign c_8_fu_1572_p1 = out_bits_9_fu_1542_p3;

assign c_out_4_fu_2235_p3 = ((tmp_19_reg_2805[0:0] == 1'b1) ? c_out_fu_2224_p1 : s_out_fu_2220_p1);

assign c_out_fu_2224_p1 = t_9_fu_2213_p4;

assign closepath_fu_924_p2 = ((din_exp_fu_912_p3 < 8'd126) ? 1'b1 : 1'b0);

assign cos_result_fu_1484_p2 = ($signed(29'd268435456) - $signed(zext_ln75_fu_1481_p1));

assign cos_results_exp_3_fu_2092_p3 = ((and_ln179_reg_2505_pp0_iter32_reg[0:0] == 1'b1) ? 8'd127 : 8'd255);

assign cos_results_exp_4_fu_2103_p3 = ((empty_676_fu_2099_p2[0:0] == 1'b1) ? cos_results_exp_3_fu_2092_p3 : out_exp_fu_1725_p1);

assign cos_results_sig_2_fu_2119_p3 = ((empty_676_fu_2099_p2[0:0] == 1'b1) ? cos_results_sig_3_cast_fu_2111_p3 : significand_fu_1749_p3);

assign cos_results_sig_3_cast_fu_2111_p3 = ((not_and_ln179_fu_2081_p2[0:0] == 1'b1) ? 23'd8388607 : 23'd0);

assign cos_results_sign_3_fu_2055_p2 = (xor_ln186_fu_2009_p2 & cos_results_sign_fu_1937_p35);

assign cos_results_sign_4_fu_2086_p2 = (not_and_ln179_fu_2081_p2 & cos_results_sign_3_fu_2055_p2);

assign cos_results_sign_fu_1937_p33 = 'bx;

assign data_fu_901_p1 = val_reg_2454;

assign din_exp_fu_912_p3 = {{data_fu_901_p1[30:23]}};

assign din_sig_fu_920_p1 = data_fu_901_p1[22:0];

assign empty_675_fu_1851_p3 = ((icmp_ln292_2_fu_1772_p2[0:0] == 1'b1) ? tmp_28_fu_1831_p4 : tmp_29_fu_1841_p4);

assign empty_676_fu_2099_p2 = (icmp_ln186_reg_2550_pp0_iter32_reg | and_ln179_reg_2505_pp0_iter32_reg);

assign empty_fu_1827_p1 = newexp_fu_1808_p2[7:0];

assign grp_fu_3553_p_din0 = grp_fu_762_p0;

assign grp_fu_3553_p_din1 = grp_fu_762_p1;

assign grp_fu_3557_p_din0 = grp_fu_767_p0;

assign grp_fu_3557_p_din1 = grp_fu_767_p1;

assign grp_fu_3561_p_din0 = grp_fu_772_p0;

assign grp_fu_3561_p_din1 = grp_fu_772_p1;

assign grp_fu_3565_p_din0 = grp_fu_776_p0;

assign grp_fu_3565_p_din1 = grp_fu_776_p1;

assign grp_fu_3569_p_din0 = grp_fu_780_p0;

assign grp_fu_3569_p_din1 = grp_fu_780_p1;

assign grp_fu_3573_p_ce = 1'b1;

assign grp_fu_3573_p_din0 = grp_fu_784_p0;

assign grp_fu_3576_p_ce = 1'b1;

assign grp_fu_3576_p_din0 = 32'd0;

assign grp_fu_3576_p_din1 = tmp_20_fu_2288_p19;

assign grp_fu_3576_p_din2 = s_out_4_reg_2819;

assign grp_fu_3576_p_din3 = grp_fu_3569_p_dout0;

assign grp_fu_3582_p_ce = 1'b1;

assign grp_fu_3582_p_din0 = 32'd0;

assign grp_fu_3582_p_din1 = tmp_20_fu_2288_p19;

assign grp_fu_3582_p_din2 = c_out_4_reg_2826;

assign grp_fu_3582_p_din3 = grp_fu_3565_p_dout0;

assign grp_fu_3588_p_ce = 1'b1;

assign grp_fu_3588_p_din0 = zext_ln80_2_fu_1444_p1;

assign grp_fu_3588_p_din1 = zext_ln80_fu_1448_p1;

assign grp_fu_3592_p_ce = 1'b1;

assign grp_fu_3592_p_din0 = Med_reg_2494;

assign grp_fu_3592_p_din1 = zext_ln468_fu_991_p1;

assign grp_fu_762_p1 = 32'd3221225472;

assign grp_fu_767_p1 = 32'd1015021568;

assign grp_pow_generic_float_s_fu_3596_p_din1 = y_assign_reg_2443;

assign head_dim_fu_858_p1 = i_25_reg_2410[5:0];

assign icmp_ln16_fu_838_p2 = ((i_fu_340 < 10'd768) ? 1'b1 : 1'b0);

assign icmp_ln179_2_fu_1008_p2 = ((din_sig_reg_2472_pp0_iter23_reg == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln179_fu_1003_p2 = ((din_exp_reg_2465_pp0_iter23_reg == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln186_fu_1136_p2 = ((din_exp_reg_2465_pp0_iter25_reg == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln292_2_fu_1772_p2 = ((trunc_ln281_5_reg_2699 == 6'd16) ? 1'b1 : 1'b0);

assign icmp_ln292_fu_1687_p2 = ((trunc_ln281_reg_2688 == 6'd16) ? 1'b1 : 1'b0);

assign icmp_ln306_fu_1606_p2 = ((trunc_ln11_fu_1490_p4 == 28'd0) ? 1'b1 : 1'b0);

assign in_0_address0 = zext_ln16_2_reg_2661_pp0_iter33_reg;

assign in_0_ce0 = in_0_ce0_local;

assign in_10_address0 = zext_ln16_2_reg_2661_pp0_iter33_reg;

assign in_10_ce0 = in_10_ce0_local;

assign in_11_address0 = zext_ln16_2_fu_1469_p1;

assign in_11_ce0 = in_11_ce0_local;

assign in_12_address0 = zext_ln16_2_reg_2661_pp0_iter33_reg;

assign in_12_ce0 = in_12_ce0_local;

assign in_13_address0 = zext_ln16_2_fu_1469_p1;

assign in_13_ce0 = in_13_ce0_local;

assign in_14_address0 = zext_ln16_2_reg_2661_pp0_iter33_reg;

assign in_14_ce0 = in_14_ce0_local;

assign in_15_address0 = zext_ln16_2_fu_1469_p1;

assign in_15_ce0 = in_15_ce0_local;

assign in_1_address0 = zext_ln16_2_fu_1469_p1;

assign in_1_ce0 = in_1_ce0_local;

assign in_2_address0 = zext_ln16_2_reg_2661_pp0_iter33_reg;

assign in_2_ce0 = in_2_ce0_local;

assign in_3_address0 = zext_ln16_2_fu_1469_p1;

assign in_3_ce0 = in_3_ce0_local;

assign in_4_address0 = zext_ln16_2_reg_2661_pp0_iter33_reg;

assign in_4_ce0 = in_4_ce0_local;

assign in_5_address0 = zext_ln16_2_fu_1469_p1;

assign in_5_ce0 = in_5_ce0_local;

assign in_6_address0 = zext_ln16_2_reg_2661_pp0_iter33_reg;

assign in_6_ce0 = in_6_ce0_local;

assign in_7_address0 = zext_ln16_2_fu_1469_p1;

assign in_7_ce0 = in_7_ce0_local;

assign in_8_address0 = zext_ln16_2_reg_2661_pp0_iter33_reg;

assign in_8_ce0 = in_8_ce0_local;

assign in_9_address0 = zext_ln16_2_fu_1469_p1;

assign in_9_ce0 = in_9_ce0_local;

assign in_shift_3_fu_1683_p1 = shl_ln291_fu_1678_p2[27:0];

assign in_shift_4_fu_1768_p1 = shl_ln291_5_fu_1763_p2[27:0];

assign index_fu_1859_p3 = {{din_sign_reg_2459_pp0_iter32_reg}, {k_reg_2515_pp0_iter32_reg}};

assign k_fu_1039_p3 = ((closepath_reg_2478_pp0_iter24_reg[0:0] == 1'b1) ? 3'd0 : trunc_ln_fu_1029_p4);

assign lshr_ln16_2_fu_1460_p4 = {{i_25_reg_2410_pp0_iter31_reg[9:4]}};

assign lshr_ln506_fu_1159_p2 = zext_ln506_2_fu_1156_p1 >> zext_ln506_fu_1152_p1;

assign lshr_ln_fu_944_p4 = {{addr_fu_936_p3[7:4]}};

assign mul_ln69_fu_1213_p0 = zext_ln69_fu_1202_p1;

assign mul_ln69_fu_1213_p1 = zext_ln69_fu_1202_p1;

assign mul_ln73_fu_1287_p0 = mul_ln73_fu_1287_p00;

assign mul_ln73_fu_1287_p00 = second_order_float_cos_K1_q0;

assign mul_ln73_fu_1287_p1 = mul_ln73_fu_1287_p10;

assign mul_ln73_fu_1287_p10 = B_reg_2559_pp0_iter28_reg;

assign mul_ln74_fu_1318_p0 = mul_ln74_fu_1318_p00;

assign mul_ln74_fu_1318_p00 = tmp_22_reg_2585;

assign mul_ln74_fu_1318_p1 = mul_ln74_fu_1318_p10;

assign mul_ln74_fu_1318_p10 = second_order_float_cos_K2_q0;

assign mul_ln78_fu_1349_p0 = mul_ln78_fu_1349_p00;

assign mul_ln78_fu_1349_p00 = B_reg_2559_pp0_iter28_reg;

assign mul_ln79_fu_1380_p0 = mul_ln79_fu_1380_p00;

assign mul_ln79_fu_1380_p00 = tmp_22_reg_2585;

assign newexp_4_fu_1719_p2 = (zext_ln287_fu_1715_p1 ^ 7'd127);

assign newexp_fu_1808_p2 = (add_ln300_fu_1802_p2 - zext_ln287_2_fu_1798_p1);

assign not_and_ln179_fu_2081_p2 = (1'd1 ^ and_ln179_reg_2505_pp0_iter32_reg);

assign or_ln186_fu_2027_p2 = (or_ln306_fu_1822_p2 | icmp_ln186_reg_2550_pp0_iter32_reg);

assign or_ln306_fu_1822_p2 = (tmp_27_fu_1814_p3 | icmp_ln306_reg_2720);

assign out_0_address0 = zext_ln16_fu_2349_p1;

assign out_0_ce0 = out_0_ce0_local;

assign out_0_d0 = grp_fu_3582_p_dout0;

assign out_0_we0 = out_0_we0_local;

assign out_1_address0 = zext_ln16_fu_2349_p1;

assign out_1_ce0 = out_1_ce0_local;

assign out_1_d0 = grp_fu_3576_p_dout0;

assign out_1_we0 = out_1_we0_local;

assign out_2_address0 = zext_ln16_fu_2349_p1;

assign out_2_ce0 = out_2_ce0_local;

assign out_2_d0 = grp_fu_3582_p_dout0;

assign out_2_we0 = out_2_we0_local;

assign out_3_address0 = zext_ln16_fu_2349_p1;

assign out_3_ce0 = out_3_ce0_local;

assign out_3_d0 = grp_fu_3576_p_dout0;

assign out_3_we0 = out_3_we0_local;

assign out_4_address0 = zext_ln16_fu_2349_p1;

assign out_4_ce0 = out_4_ce0_local;

assign out_4_d0 = grp_fu_3582_p_dout0;

assign out_4_we0 = out_4_we0_local;

assign out_5_address0 = zext_ln16_fu_2349_p1;

assign out_5_ce0 = out_5_ce0_local;

assign out_5_d0 = grp_fu_3576_p_dout0;

assign out_5_we0 = out_5_we0_local;

assign out_6_address0 = zext_ln16_fu_2349_p1;

assign out_6_ce0 = out_6_ce0_local;

assign out_6_d0 = grp_fu_3582_p_dout0;

assign out_6_we0 = out_6_we0_local;

assign out_7_address0 = zext_ln16_fu_2349_p1;

assign out_7_ce0 = out_7_ce0_local;

assign out_7_d0 = grp_fu_3576_p_dout0;

assign out_7_we0 = out_7_we0_local;

assign out_bits_9_fu_1542_p3 = {{tmp_17_fu_1532_p4}, {16'd32768}};

assign out_exp_fu_1725_p1 = newexp_4_fu_1719_p2;

assign ref_4oPi_table_100_address0 = zext_ln378_fu_954_p1;

assign s_out_4_fu_2228_p3 = ((tmp_19_reg_2805[0:0] == 1'b1) ? s_out_fu_2220_p1 : c_out_fu_2224_p1);

assign s_out_fu_2220_p1 = t_8_fu_2206_p4;

assign second_order_float_cos_K0_address0 = zext_ln72_fu_1219_p1;

assign second_order_float_cos_K1_address0 = zext_ln72_fu_1219_p1;

assign second_order_float_cos_K2_address0 = zext_ln72_fu_1219_p1;

assign second_order_float_sin_K0_address0 = zext_ln72_fu_1219_p1;

assign second_order_float_sin_K1_address0 = zext_ln72_fu_1219_p1;

assign second_order_float_sin_K2_address0 = zext_ln72_fu_1219_p1;

assign select_ln186_5_fu_2040_p3 = ((icmp_ln186_reg_2550_pp0_iter32_reg[0:0] == 1'b1) ? 23'd8388607 : 23'd0);

assign select_ln186_fu_2020_p3 = ((icmp_ln186_reg_2550_pp0_iter32_reg[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign select_ln453_fu_1077_p3 = ((closepath_reg_2478_pp0_iter25_reg[0:0] == 1'b1) ? Ex_fu_1072_p2 : 8'd0);

assign select_ln506_2_fu_1171_p3 = ((tmp_23_reg_2538[0:0] == 1'b1) ? lshr_ln506_fu_1159_p2 : shl_ln506_fu_1165_p2);

assign select_ln506_fu_1146_p3 = ((tmp_23_reg_2538[0:0] == 1'b1) ? sub_ln506_fu_1141_p2 : Ex_2_reg_2531);

assign sext_ln163_fu_1757_p1 = Ex_2_reg_2531_pp0_iter32_reg;

assign sext_ln80_3_fu_1426_p1 = $signed(trunc_ln9_reg_2631);

assign sext_ln80_4_fu_1435_p1 = $signed(add_ln80_fu_1429_p2);

assign sext_ln80_fu_1423_p1 = $signed(trunc_ln8_reg_2626);

assign shift_10_fu_1791_p3 = ((icmp_ln292_2_fu_1772_p2[0:0] == 1'b1) ? shift_9_fu_1777_p2 : trunc_ln281_5_reg_2699);

assign shift_6_fu_1692_p2 = (trunc_ln281_4_fu_1671_p1 + 6'd16);

assign shift_7_fu_1708_p3 = ((icmp_ln292_fu_1687_p2[0:0] == 1'b1) ? shift_6_fu_1692_p2 : trunc_ln281_reg_2688);

assign shift_9_fu_1777_p2 = (trunc_ln281_6_reg_2710 + 6'd16);

assign shl_ln291_4_fu_1702_p2 = zext_ln291_3_fu_1698_p1 << c_5_fu_1663_p3;

assign shl_ln291_5_fu_1763_p2 = zext_ln291_5_fu_1760_p1 << c_8_reg_2694;

assign shl_ln291_6_fu_1786_p2 = zext_ln291_4_fu_1782_p1 << c_6_reg_2705;

assign shl_ln291_fu_1678_p2 = zext_ln291_fu_1675_p1 << c_7_reg_2683;

assign shl_ln379_fu_970_p2 = ref_4oPi_table_100_q0 << zext_ln379_fu_967_p1;

assign shl_ln504_fu_1103_p2 = Mx_bits_6_reg_2521 << zext_ln504_fu_1099_p1;

assign shl_ln506_fu_1165_p2 = zext_ln506_2_fu_1156_p1 << zext_ln506_fu_1152_p1;

assign significand_fu_1749_p3 = ((icmp_ln292_fu_1687_p2[0:0] == 1'b1) ? tmp_25_fu_1729_p4 : tmp_26_fu_1739_p4);

assign sin_results_exp_2_fu_2067_p3 = ((and_ln179_reg_2505_pp0_iter32_reg[0:0] == 1'b1) ? 8'd0 : sin_results_exp_fu_2032_p3);

assign sin_results_exp_fu_2032_p3 = ((or_ln186_fu_2027_p2[0:0] == 1'b1) ? select_ln186_fu_2020_p3 : empty_fu_1827_p1);

assign sin_results_sig_2_fu_2074_p3 = ((and_ln179_reg_2505_pp0_iter32_reg[0:0] == 1'b1) ? 23'd0 : sin_results_sig_fu_2047_p3);

assign sin_results_sig_fu_2047_p3 = ((or_ln186_fu_2027_p2[0:0] == 1'b1) ? select_ln186_5_fu_2040_p3 : empty_675_fu_1851_p3);

assign sin_results_sign_3_fu_2014_p2 = (xor_ln186_fu_2009_p2 & sin_results_sign_fu_1865_p35);

assign sin_results_sign_4_fu_2061_p3 = ((and_ln179_reg_2505_pp0_iter32_reg[0:0] == 1'b1) ? din_sign_reg_2459_pp0_iter32_reg : sin_results_sign_3_fu_2014_p2);

assign sin_results_sign_fu_1865_p33 = 'bx;

assign sub_ln506_fu_1141_p2 = ($signed(8'd0) - $signed(Ex_2_reg_2531));

assign t_8_fu_2206_p4 = {{{cos_results_sign_4_reg_2790}, {cos_results_exp_4_reg_2795}}, {cos_results_sig_2_reg_2800}};

assign t_9_fu_2213_p4 = {{{sin_results_sign_4_reg_2775}, {sin_results_exp_2_reg_2780}}, {sin_results_sig_2_reg_2785}};

assign tmp_15_fu_1500_p3 = {{cos_result_fu_1484_p2[28:13]}};

assign tmp_17_fu_1532_p4 = {{grp_fu_3588_p_dout0[56:42]}};

assign tmp_18_fu_1554_p4 = {{grp_fu_3588_p_dout0[41:29]}};

assign tmp_19_fu_2127_p17 = 'bx;

assign tmp_20_fu_2288_p17 = 'bx;

assign tmp_21_fu_2166_p17 = 'bx;

assign tmp_21_fu_2166_p18 = i_25_reg_2410_pp0_iter32_reg[3:0];

assign tmp_25_fu_1729_p4 = {{shl_ln291_4_fu_1702_p2[27:5]}};

assign tmp_26_fu_1739_p4 = {{shl_ln291_fu_1678_p2[27:5]}};

assign tmp_27_fu_1814_p3 = newexp_fu_1808_p2[32'd8];

assign tmp_28_fu_1831_p4 = {{shl_ln291_6_fu_1786_p2[27:5]}};

assign tmp_29_fu_1841_p4 = {{shl_ln291_5_fu_1763_p2[27:5]}};

assign trunc_ln11_fu_1490_p4 = {{grp_fu_3588_p_dout0[56:29]}};

assign trunc_ln16_2_fu_855_p1 = i_25_reg_2410[2:0];

assign trunc_ln16_fu_1644_p1 = i_25_reg_2410_pp0_iter32_reg[3:0];

assign trunc_ln276_fu_1516_p1 = cos_result_fu_1484_p2[12:0];

assign trunc_ln281_4_fu_1671_p1 = c_5_fu_1663_p3[5:0];

assign trunc_ln281_5_fu_1580_p1 = c_8_fu_1572_p3[5:0];

assign trunc_ln281_6_fu_1592_p1 = c_6_fu_1584_p3[5:0];

assign trunc_ln281_fu_1528_p1 = c_7_fu_1520_p3[5:0];

assign trunc_ln379_fu_963_p1 = addr_fu_936_p3[3:0];

assign trunc_ln491_fu_1046_p1 = k_fu_1039_p3[0:0];

assign trunc_ln505_fu_1108_p1 = Mx_zeros_fu_1091_p3[7:0];

assign trunc_ln_fu_1029_p4 = {{grp_fu_3592_p_dout0[79:77]}};

assign xor_ln186_fu_2009_p2 = (icmp_ln186_reg_2550_pp0_iter32_reg ^ 1'd1);

assign zext_ln16_2_fu_1469_p1 = lshr_ln16_2_fu_1460_p4;

assign zext_ln16_fu_2349_p1 = lshr_ln2_reg_2770_pp0_iter36_reg;

assign zext_ln18_fu_861_p1 = head_dim_fu_858_p1;

assign zext_ln287_2_fu_1798_p1 = shift_10_fu_1791_p3;

assign zext_ln287_fu_1715_p1 = shift_7_fu_1708_p3;

assign zext_ln291_3_fu_1698_p1 = in_shift_3_fu_1683_p1;

assign zext_ln291_4_fu_1782_p1 = in_shift_4_fu_1768_p1;

assign zext_ln291_5_fu_1760_p1 = trunc_ln12_reg_2715;

assign zext_ln291_fu_1675_p1 = cos_result_reg_2673;

assign zext_ln378_fu_954_p1 = lshr_ln_fu_944_p4;

assign zext_ln379_fu_967_p1 = trunc_ln379_reg_2489;

assign zext_ln468_fu_991_p1 = X_fu_984_p3;

assign zext_ln504_fu_1099_p1 = Mx_zeros_fu_1091_p3;

assign zext_ln506_2_fu_1156_p1 = tmp_s_reg_2544;

assign zext_ln506_fu_1152_p1 = select_ln506_fu_1146_p3;

assign zext_ln69_fu_1202_p1 = B_trunc_reg_2570;

assign zext_ln72_fu_1219_p1 = A_reg_2565;

assign zext_ln73_3_fu_1406_p1 = tmp_16_reg_2616;

assign zext_ln74_4_fu_1409_p1 = tmp_24_reg_2621;

assign zext_ln75_fu_1481_p1 = add_ln75_2_reg_2641_pp0_iter31_reg;

assign zext_ln80_2_fu_1444_p1 = tmp_s_reg_2544_pp0_iter30_reg;

assign zext_ln80_fu_1448_p1 = add_ln80_2_reg_2646;

always @ (posedge ap_clk) begin
    zext_ln16_2_reg_2661[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln16_2_reg_2661_pp0_iter33_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //llama_layer_RoPE
