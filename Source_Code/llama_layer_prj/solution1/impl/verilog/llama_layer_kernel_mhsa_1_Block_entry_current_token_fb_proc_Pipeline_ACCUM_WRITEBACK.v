// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module llama_layer_kernel_mhsa_1_Block_entry_current_token_fb_proc_Pipeline_ACCUM_WRITEBACK (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        xb_15_address1,
        xb_15_ce1,
        xb_15_we1,
        xb_15_d1,
        xb_14_address1,
        xb_14_ce1,
        xb_14_we1,
        xb_14_d1,
        xb_13_address1,
        xb_13_ce1,
        xb_13_we1,
        xb_13_d1,
        xb_12_address1,
        xb_12_ce1,
        xb_12_we1,
        xb_12_d1,
        xb_11_address1,
        xb_11_ce1,
        xb_11_we1,
        xb_11_d1,
        xb_10_address1,
        xb_10_ce1,
        xb_10_we1,
        xb_10_d1,
        xb_9_address1,
        xb_9_ce1,
        xb_9_we1,
        xb_9_d1,
        xb_8_address1,
        xb_8_ce1,
        xb_8_we1,
        xb_8_d1,
        xb_7_address1,
        xb_7_ce1,
        xb_7_we1,
        xb_7_d1,
        xb_6_address1,
        xb_6_ce1,
        xb_6_we1,
        xb_6_d1,
        xb_5_address1,
        xb_5_ce1,
        xb_5_we1,
        xb_5_d1,
        xb_4_address1,
        xb_4_ce1,
        xb_4_we1,
        xb_4_d1,
        xb_3_address1,
        xb_3_ce1,
        xb_3_we1,
        xb_3_d1,
        xb_2_address1,
        xb_2_ce1,
        xb_2_we1,
        xb_2_d1,
        xb_1_address1,
        xb_1_ce1,
        xb_1_we1,
        xb_1_d1,
        xb_0_address1,
        xb_0_ce1,
        xb_0_we1,
        xb_0_d1,
        mux_case_0119786_i_i_i_i,
        mux_case_4121788_i_i_i_i,
        mux_case_8123790_i_i_i_i,
        mux_case_12125792_i_i_i_i,
        mux_case_16794_i_i_i_i,
        mux_case_20796_i_i_i_i,
        mux_case_24798_i_i_i_i,
        mux_case_28800_i_i_i_i,
        mux_case_32802_i_i_i_i,
        mux_case_36804_i_i_i_i,
        mux_case_40806_i_i_i_i,
        mux_case_44808_i_i_i_i,
        mux_case_48810_i_i_i_i,
        mux_case_52812_i_i_i_i,
        mux_case_56137814_i_i_i_i,
        mux_case_60816_i_i_i_i,
        h_3,
        mux_case_1140818_i_i_i_i,
        mux_case_5142820_i_i_i_i,
        mux_case_9144822_i_i_i_i,
        mux_case_13146824_i_i_i_i,
        mux_case_17826_i_i_i_i,
        mux_case_21828_i_i_i_i,
        mux_case_25830_i_i_i_i,
        mux_case_29832_i_i_i_i,
        mux_case_33834_i_i_i_i,
        mux_case_37836_i_i_i_i,
        mux_case_41838_i_i_i_i,
        mux_case_45155840_i_i_i_i,
        mux_case_49842_i_i_i_i,
        mux_case_53844_i_i_i_i,
        mux_case_57846_i_i_i_i,
        mux_case_61848_i_i_i_i,
        mux_case_2161850_i_i_i_i,
        mux_case_6163852_i_i_i_i,
        mux_case_10165854_i_i_i_i,
        mux_case_14167856_i_i_i_i,
        mux_case_18858_i_i_i_i,
        mux_case_22860_i_i_i_i,
        mux_case_26862_i_i_i_i,
        mux_case_30864_i_i_i_i,
        mux_case_34173866_i_i_i_i,
        mux_case_38868_i_i_i_i,
        mux_case_42870_i_i_i_i,
        mux_case_46872_i_i_i_i,
        mux_case_50874_i_i_i_i,
        mux_case_54876_i_i_i_i,
        mux_case_58878_i_i_i_i,
        mux_case_62880_i_i_i_i,
        mux_case_3182882_i_i_i_i,
        mux_case_7184884_i_i_i_i,
        mux_case_11186886_i_i_i_i,
        mux_case_15188888_i_i_i_i,
        mux_case_19890_i_i_i_i,
        mux_case_23191892_i_i_i_i,
        mux_case_27894_i_i_i_i,
        mux_case_31896_i_i_i_i,
        mux_case_35898_i_i_i_i,
        mux_case_39900_i_i_i_i,
        mux_case_43902_i_i_i_i,
        mux_case_47904_i_i_i_i,
        mux_case_51906_i_i_i_i,
        mux_case_55908_i_i_i_i,
        mux_case_59910_i_i_i_i,
        mux_case_63912_i_i_i_i
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] xb_15_address1;
output   xb_15_ce1;
output   xb_15_we1;
output  [31:0] xb_15_d1;
output  [5:0] xb_14_address1;
output   xb_14_ce1;
output   xb_14_we1;
output  [31:0] xb_14_d1;
output  [5:0] xb_13_address1;
output   xb_13_ce1;
output   xb_13_we1;
output  [31:0] xb_13_d1;
output  [5:0] xb_12_address1;
output   xb_12_ce1;
output   xb_12_we1;
output  [31:0] xb_12_d1;
output  [5:0] xb_11_address1;
output   xb_11_ce1;
output   xb_11_we1;
output  [31:0] xb_11_d1;
output  [5:0] xb_10_address1;
output   xb_10_ce1;
output   xb_10_we1;
output  [31:0] xb_10_d1;
output  [5:0] xb_9_address1;
output   xb_9_ce1;
output   xb_9_we1;
output  [31:0] xb_9_d1;
output  [5:0] xb_8_address1;
output   xb_8_ce1;
output   xb_8_we1;
output  [31:0] xb_8_d1;
output  [5:0] xb_7_address1;
output   xb_7_ce1;
output   xb_7_we1;
output  [31:0] xb_7_d1;
output  [5:0] xb_6_address1;
output   xb_6_ce1;
output   xb_6_we1;
output  [31:0] xb_6_d1;
output  [5:0] xb_5_address1;
output   xb_5_ce1;
output   xb_5_we1;
output  [31:0] xb_5_d1;
output  [5:0] xb_4_address1;
output   xb_4_ce1;
output   xb_4_we1;
output  [31:0] xb_4_d1;
output  [5:0] xb_3_address1;
output   xb_3_ce1;
output   xb_3_we1;
output  [31:0] xb_3_d1;
output  [5:0] xb_2_address1;
output   xb_2_ce1;
output   xb_2_we1;
output  [31:0] xb_2_d1;
output  [5:0] xb_1_address1;
output   xb_1_ce1;
output   xb_1_we1;
output  [31:0] xb_1_d1;
output  [5:0] xb_0_address1;
output   xb_0_ce1;
output   xb_0_we1;
output  [31:0] xb_0_d1;
input  [31:0] mux_case_0119786_i_i_i_i;
input  [31:0] mux_case_4121788_i_i_i_i;
input  [31:0] mux_case_8123790_i_i_i_i;
input  [31:0] mux_case_12125792_i_i_i_i;
input  [31:0] mux_case_16794_i_i_i_i;
input  [31:0] mux_case_20796_i_i_i_i;
input  [31:0] mux_case_24798_i_i_i_i;
input  [31:0] mux_case_28800_i_i_i_i;
input  [31:0] mux_case_32802_i_i_i_i;
input  [31:0] mux_case_36804_i_i_i_i;
input  [31:0] mux_case_40806_i_i_i_i;
input  [31:0] mux_case_44808_i_i_i_i;
input  [31:0] mux_case_48810_i_i_i_i;
input  [31:0] mux_case_52812_i_i_i_i;
input  [31:0] mux_case_56137814_i_i_i_i;
input  [31:0] mux_case_60816_i_i_i_i;
input  [3:0] h_3;
input  [31:0] mux_case_1140818_i_i_i_i;
input  [31:0] mux_case_5142820_i_i_i_i;
input  [31:0] mux_case_9144822_i_i_i_i;
input  [31:0] mux_case_13146824_i_i_i_i;
input  [31:0] mux_case_17826_i_i_i_i;
input  [31:0] mux_case_21828_i_i_i_i;
input  [31:0] mux_case_25830_i_i_i_i;
input  [31:0] mux_case_29832_i_i_i_i;
input  [31:0] mux_case_33834_i_i_i_i;
input  [31:0] mux_case_37836_i_i_i_i;
input  [31:0] mux_case_41838_i_i_i_i;
input  [31:0] mux_case_45155840_i_i_i_i;
input  [31:0] mux_case_49842_i_i_i_i;
input  [31:0] mux_case_53844_i_i_i_i;
input  [31:0] mux_case_57846_i_i_i_i;
input  [31:0] mux_case_61848_i_i_i_i;
input  [31:0] mux_case_2161850_i_i_i_i;
input  [31:0] mux_case_6163852_i_i_i_i;
input  [31:0] mux_case_10165854_i_i_i_i;
input  [31:0] mux_case_14167856_i_i_i_i;
input  [31:0] mux_case_18858_i_i_i_i;
input  [31:0] mux_case_22860_i_i_i_i;
input  [31:0] mux_case_26862_i_i_i_i;
input  [31:0] mux_case_30864_i_i_i_i;
input  [31:0] mux_case_34173866_i_i_i_i;
input  [31:0] mux_case_38868_i_i_i_i;
input  [31:0] mux_case_42870_i_i_i_i;
input  [31:0] mux_case_46872_i_i_i_i;
input  [31:0] mux_case_50874_i_i_i_i;
input  [31:0] mux_case_54876_i_i_i_i;
input  [31:0] mux_case_58878_i_i_i_i;
input  [31:0] mux_case_62880_i_i_i_i;
input  [31:0] mux_case_3182882_i_i_i_i;
input  [31:0] mux_case_7184884_i_i_i_i;
input  [31:0] mux_case_11186886_i_i_i_i;
input  [31:0] mux_case_15188888_i_i_i_i;
input  [31:0] mux_case_19890_i_i_i_i;
input  [31:0] mux_case_23191892_i_i_i_i;
input  [31:0] mux_case_27894_i_i_i_i;
input  [31:0] mux_case_31896_i_i_i_i;
input  [31:0] mux_case_35898_i_i_i_i;
input  [31:0] mux_case_39900_i_i_i_i;
input  [31:0] mux_case_43902_i_i_i_i;
input  [31:0] mux_case_47904_i_i_i_i;
input  [31:0] mux_case_51906_i_i_i_i;
input  [31:0] mux_case_55908_i_i_i_i;
input  [31:0] mux_case_59910_i_i_i_i;
input  [31:0] mux_case_63912_i_i_i_i;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] tmp_fu_936_p3;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [63:0] zext_ln156_fu_1047_p1;
reg   [6:0] i_fu_250;
wire   [6:0] add_ln153_fu_1372_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_i_17;
reg    xb_8_we1_local;
wire   [3:0] trunc_ln153_1_fu_948_p1;
wire   [31:0] tmp_7_fu_952_p35;
reg    xb_8_ce1_local;
reg    xb_9_we1_local;
wire   [31:0] tmp_8_fu_1067_p35;
reg    xb_9_ce1_local;
reg    xb_10_we1_local;
wire   [31:0] tmp_9_fu_1144_p35;
reg    xb_10_ce1_local;
reg    xb_11_we1_local;
wire   [31:0] tmp_1_fu_1221_p35;
reg    xb_11_ce1_local;
reg    xb_4_we1_local;
reg    xb_4_ce1_local;
reg    xb_5_we1_local;
reg    xb_5_ce1_local;
reg    xb_6_we1_local;
reg    xb_6_ce1_local;
reg    xb_7_we1_local;
reg    xb_7_ce1_local;
reg    xb_0_we1_local;
reg    xb_0_ce1_local;
reg    xb_1_we1_local;
reg    xb_1_ce1_local;
reg    xb_2_we1_local;
reg    xb_2_ce1_local;
reg    xb_3_we1_local;
reg    xb_3_ce1_local;
reg    xb_12_we1_local;
reg    xb_12_ce1_local;
reg    xb_13_we1_local;
reg    xb_13_ce1_local;
reg    xb_14_we1_local;
reg    xb_14_ce1_local;
reg    xb_15_we1_local;
reg    xb_15_ce1_local;
wire   [31:0] tmp_7_fu_952_p33;
wire   [5:0] trunc_ln153_fu_944_p1;
wire   [1:0] lshr_ln_fu_1029_p4;
wire   [5:0] or_ln4_fu_1039_p3;
wire   [31:0] tmp_8_fu_1067_p33;
wire   [31:0] tmp_9_fu_1144_p33;
wire   [31:0] tmp_1_fu_1221_p33;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [5:0] tmp_7_fu_952_p1;
wire   [5:0] tmp_7_fu_952_p3;
wire   [5:0] tmp_7_fu_952_p5;
wire   [5:0] tmp_7_fu_952_p7;
wire   [5:0] tmp_7_fu_952_p9;
wire   [5:0] tmp_7_fu_952_p11;
wire   [5:0] tmp_7_fu_952_p13;
wire   [5:0] tmp_7_fu_952_p15;
wire  signed [5:0] tmp_7_fu_952_p17;
wire  signed [5:0] tmp_7_fu_952_p19;
wire  signed [5:0] tmp_7_fu_952_p21;
wire  signed [5:0] tmp_7_fu_952_p23;
wire  signed [5:0] tmp_7_fu_952_p25;
wire  signed [5:0] tmp_7_fu_952_p27;
wire  signed [5:0] tmp_7_fu_952_p29;
wire  signed [5:0] tmp_7_fu_952_p31;
wire   [5:0] tmp_8_fu_1067_p1;
wire   [5:0] tmp_8_fu_1067_p3;
wire   [5:0] tmp_8_fu_1067_p5;
wire   [5:0] tmp_8_fu_1067_p7;
wire   [5:0] tmp_8_fu_1067_p9;
wire   [5:0] tmp_8_fu_1067_p11;
wire   [5:0] tmp_8_fu_1067_p13;
wire   [5:0] tmp_8_fu_1067_p15;
wire  signed [5:0] tmp_8_fu_1067_p17;
wire  signed [5:0] tmp_8_fu_1067_p19;
wire  signed [5:0] tmp_8_fu_1067_p21;
wire  signed [5:0] tmp_8_fu_1067_p23;
wire  signed [5:0] tmp_8_fu_1067_p25;
wire  signed [5:0] tmp_8_fu_1067_p27;
wire  signed [5:0] tmp_8_fu_1067_p29;
wire  signed [5:0] tmp_8_fu_1067_p31;
wire   [5:0] tmp_9_fu_1144_p1;
wire   [5:0] tmp_9_fu_1144_p3;
wire   [5:0] tmp_9_fu_1144_p5;
wire   [5:0] tmp_9_fu_1144_p7;
wire   [5:0] tmp_9_fu_1144_p9;
wire   [5:0] tmp_9_fu_1144_p11;
wire   [5:0] tmp_9_fu_1144_p13;
wire   [5:0] tmp_9_fu_1144_p15;
wire  signed [5:0] tmp_9_fu_1144_p17;
wire  signed [5:0] tmp_9_fu_1144_p19;
wire  signed [5:0] tmp_9_fu_1144_p21;
wire  signed [5:0] tmp_9_fu_1144_p23;
wire  signed [5:0] tmp_9_fu_1144_p25;
wire  signed [5:0] tmp_9_fu_1144_p27;
wire  signed [5:0] tmp_9_fu_1144_p29;
wire  signed [5:0] tmp_9_fu_1144_p31;
wire   [5:0] tmp_1_fu_1221_p1;
wire   [5:0] tmp_1_fu_1221_p3;
wire   [5:0] tmp_1_fu_1221_p5;
wire   [5:0] tmp_1_fu_1221_p7;
wire   [5:0] tmp_1_fu_1221_p9;
wire   [5:0] tmp_1_fu_1221_p11;
wire   [5:0] tmp_1_fu_1221_p13;
wire   [5:0] tmp_1_fu_1221_p15;
wire  signed [5:0] tmp_1_fu_1221_p17;
wire  signed [5:0] tmp_1_fu_1221_p19;
wire  signed [5:0] tmp_1_fu_1221_p21;
wire  signed [5:0] tmp_1_fu_1221_p23;
wire  signed [5:0] tmp_1_fu_1221_p25;
wire  signed [5:0] tmp_1_fu_1221_p27;
wire  signed [5:0] tmp_1_fu_1221_p29;
wire  signed [5:0] tmp_1_fu_1221_p31;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 i_fu_250 = 7'd0;
#0 ap_done_reg = 1'b0;
end

(* dissolve_hierarchy = "yes" *) llama_layer_sparsemux_33_6_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 6'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 6'h4 ),
    .din1_WIDTH( 32 ),
    .CASE2( 6'h8 ),
    .din2_WIDTH( 32 ),
    .CASE3( 6'hC ),
    .din3_WIDTH( 32 ),
    .CASE4( 6'h10 ),
    .din4_WIDTH( 32 ),
    .CASE5( 6'h14 ),
    .din5_WIDTH( 32 ),
    .CASE6( 6'h18 ),
    .din6_WIDTH( 32 ),
    .CASE7( 6'h1C ),
    .din7_WIDTH( 32 ),
    .CASE8( 6'h20 ),
    .din8_WIDTH( 32 ),
    .CASE9( 6'h24 ),
    .din9_WIDTH( 32 ),
    .CASE10( 6'h28 ),
    .din10_WIDTH( 32 ),
    .CASE11( 6'h2C ),
    .din11_WIDTH( 32 ),
    .CASE12( 6'h30 ),
    .din12_WIDTH( 32 ),
    .CASE13( 6'h34 ),
    .din13_WIDTH( 32 ),
    .CASE14( 6'h38 ),
    .din14_WIDTH( 32 ),
    .CASE15( 6'h3C ),
    .din15_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
sparsemux_33_6_32_1_1_U1034(
    .din0(mux_case_0119786_i_i_i_i),
    .din1(mux_case_4121788_i_i_i_i),
    .din2(mux_case_8123790_i_i_i_i),
    .din3(mux_case_12125792_i_i_i_i),
    .din4(mux_case_16794_i_i_i_i),
    .din5(mux_case_20796_i_i_i_i),
    .din6(mux_case_24798_i_i_i_i),
    .din7(mux_case_28800_i_i_i_i),
    .din8(mux_case_32802_i_i_i_i),
    .din9(mux_case_36804_i_i_i_i),
    .din10(mux_case_40806_i_i_i_i),
    .din11(mux_case_44808_i_i_i_i),
    .din12(mux_case_48810_i_i_i_i),
    .din13(mux_case_52812_i_i_i_i),
    .din14(mux_case_56137814_i_i_i_i),
    .din15(mux_case_60816_i_i_i_i),
    .def(tmp_7_fu_952_p33),
    .sel(trunc_ln153_fu_944_p1),
    .dout(tmp_7_fu_952_p35)
);

(* dissolve_hierarchy = "yes" *) llama_layer_sparsemux_33_6_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 6'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 6'h4 ),
    .din1_WIDTH( 32 ),
    .CASE2( 6'h8 ),
    .din2_WIDTH( 32 ),
    .CASE3( 6'hC ),
    .din3_WIDTH( 32 ),
    .CASE4( 6'h10 ),
    .din4_WIDTH( 32 ),
    .CASE5( 6'h14 ),
    .din5_WIDTH( 32 ),
    .CASE6( 6'h18 ),
    .din6_WIDTH( 32 ),
    .CASE7( 6'h1C ),
    .din7_WIDTH( 32 ),
    .CASE8( 6'h20 ),
    .din8_WIDTH( 32 ),
    .CASE9( 6'h24 ),
    .din9_WIDTH( 32 ),
    .CASE10( 6'h28 ),
    .din10_WIDTH( 32 ),
    .CASE11( 6'h2C ),
    .din11_WIDTH( 32 ),
    .CASE12( 6'h30 ),
    .din12_WIDTH( 32 ),
    .CASE13( 6'h34 ),
    .din13_WIDTH( 32 ),
    .CASE14( 6'h38 ),
    .din14_WIDTH( 32 ),
    .CASE15( 6'h3C ),
    .din15_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
sparsemux_33_6_32_1_1_U1035(
    .din0(mux_case_1140818_i_i_i_i),
    .din1(mux_case_5142820_i_i_i_i),
    .din2(mux_case_9144822_i_i_i_i),
    .din3(mux_case_13146824_i_i_i_i),
    .din4(mux_case_17826_i_i_i_i),
    .din5(mux_case_21828_i_i_i_i),
    .din6(mux_case_25830_i_i_i_i),
    .din7(mux_case_29832_i_i_i_i),
    .din8(mux_case_33834_i_i_i_i),
    .din9(mux_case_37836_i_i_i_i),
    .din10(mux_case_41838_i_i_i_i),
    .din11(mux_case_45155840_i_i_i_i),
    .din12(mux_case_49842_i_i_i_i),
    .din13(mux_case_53844_i_i_i_i),
    .din14(mux_case_57846_i_i_i_i),
    .din15(mux_case_61848_i_i_i_i),
    .def(tmp_8_fu_1067_p33),
    .sel(trunc_ln153_fu_944_p1),
    .dout(tmp_8_fu_1067_p35)
);

(* dissolve_hierarchy = "yes" *) llama_layer_sparsemux_33_6_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 6'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 6'h4 ),
    .din1_WIDTH( 32 ),
    .CASE2( 6'h8 ),
    .din2_WIDTH( 32 ),
    .CASE3( 6'hC ),
    .din3_WIDTH( 32 ),
    .CASE4( 6'h10 ),
    .din4_WIDTH( 32 ),
    .CASE5( 6'h14 ),
    .din5_WIDTH( 32 ),
    .CASE6( 6'h18 ),
    .din6_WIDTH( 32 ),
    .CASE7( 6'h1C ),
    .din7_WIDTH( 32 ),
    .CASE8( 6'h20 ),
    .din8_WIDTH( 32 ),
    .CASE9( 6'h24 ),
    .din9_WIDTH( 32 ),
    .CASE10( 6'h28 ),
    .din10_WIDTH( 32 ),
    .CASE11( 6'h2C ),
    .din11_WIDTH( 32 ),
    .CASE12( 6'h30 ),
    .din12_WIDTH( 32 ),
    .CASE13( 6'h34 ),
    .din13_WIDTH( 32 ),
    .CASE14( 6'h38 ),
    .din14_WIDTH( 32 ),
    .CASE15( 6'h3C ),
    .din15_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
sparsemux_33_6_32_1_1_U1036(
    .din0(mux_case_2161850_i_i_i_i),
    .din1(mux_case_6163852_i_i_i_i),
    .din2(mux_case_10165854_i_i_i_i),
    .din3(mux_case_14167856_i_i_i_i),
    .din4(mux_case_18858_i_i_i_i),
    .din5(mux_case_22860_i_i_i_i),
    .din6(mux_case_26862_i_i_i_i),
    .din7(mux_case_30864_i_i_i_i),
    .din8(mux_case_34173866_i_i_i_i),
    .din9(mux_case_38868_i_i_i_i),
    .din10(mux_case_42870_i_i_i_i),
    .din11(mux_case_46872_i_i_i_i),
    .din12(mux_case_50874_i_i_i_i),
    .din13(mux_case_54876_i_i_i_i),
    .din14(mux_case_58878_i_i_i_i),
    .din15(mux_case_62880_i_i_i_i),
    .def(tmp_9_fu_1144_p33),
    .sel(trunc_ln153_fu_944_p1),
    .dout(tmp_9_fu_1144_p35)
);

(* dissolve_hierarchy = "yes" *) llama_layer_sparsemux_33_6_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 6'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 6'h4 ),
    .din1_WIDTH( 32 ),
    .CASE2( 6'h8 ),
    .din2_WIDTH( 32 ),
    .CASE3( 6'hC ),
    .din3_WIDTH( 32 ),
    .CASE4( 6'h10 ),
    .din4_WIDTH( 32 ),
    .CASE5( 6'h14 ),
    .din5_WIDTH( 32 ),
    .CASE6( 6'h18 ),
    .din6_WIDTH( 32 ),
    .CASE7( 6'h1C ),
    .din7_WIDTH( 32 ),
    .CASE8( 6'h20 ),
    .din8_WIDTH( 32 ),
    .CASE9( 6'h24 ),
    .din9_WIDTH( 32 ),
    .CASE10( 6'h28 ),
    .din10_WIDTH( 32 ),
    .CASE11( 6'h2C ),
    .din11_WIDTH( 32 ),
    .CASE12( 6'h30 ),
    .din12_WIDTH( 32 ),
    .CASE13( 6'h34 ),
    .din13_WIDTH( 32 ),
    .CASE14( 6'h38 ),
    .din14_WIDTH( 32 ),
    .CASE15( 6'h3C ),
    .din15_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
sparsemux_33_6_32_1_1_U1037(
    .din0(mux_case_3182882_i_i_i_i),
    .din1(mux_case_7184884_i_i_i_i),
    .din2(mux_case_11186886_i_i_i_i),
    .din3(mux_case_15188888_i_i_i_i),
    .din4(mux_case_19890_i_i_i_i),
    .din5(mux_case_23191892_i_i_i_i),
    .din6(mux_case_27894_i_i_i_i),
    .din7(mux_case_31896_i_i_i_i),
    .din8(mux_case_35898_i_i_i_i),
    .din9(mux_case_39900_i_i_i_i),
    .din10(mux_case_43902_i_i_i_i),
    .din11(mux_case_47904_i_i_i_i),
    .din12(mux_case_51906_i_i_i_i),
    .din13(mux_case_55908_i_i_i_i),
    .din14(mux_case_59910_i_i_i_i),
    .din15(mux_case_63912_i_i_i_i),
    .def(tmp_1_fu_1221_p33),
    .sel(trunc_ln153_fu_944_p1),
    .dout(tmp_1_fu_1221_p35)
);

llama_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((tmp_fu_936_p3 == 1'd0)) begin
            i_fu_250 <= add_ln153_fu_1372_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_250 <= 7'd0;
        end
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1_pp0_stage0_iter0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_936_p3 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_i_17 = 7'd0;
    end else begin
        ap_sig_allocacmp_i_17 = i_fu_250;
    end
end

always @ (*) begin
    if (((trunc_ln153_1_fu_948_p1 == 4'd0) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_0_ce1_local = 1'b1;
    end else begin
        xb_0_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln153_1_fu_948_p1 == 4'd0) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_0_we1_local = 1'b1;
    end else begin
        xb_0_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln153_1_fu_948_p1 == 4'd8) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_10_ce1_local = 1'b1;
    end else begin
        xb_10_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln153_1_fu_948_p1 == 4'd8) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_10_we1_local = 1'b1;
    end else begin
        xb_10_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln153_1_fu_948_p1 == 4'd8) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_11_ce1_local = 1'b1;
    end else begin
        xb_11_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln153_1_fu_948_p1 == 4'd8) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_11_we1_local = 1'b1;
    end else begin
        xb_11_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln153_1_fu_948_p1 == 4'd0) & ~(trunc_ln153_1_fu_948_p1 == 4'd4) & ~(trunc_ln153_1_fu_948_p1 == 4'd8) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_12_ce1_local = 1'b1;
    end else begin
        xb_12_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln153_1_fu_948_p1 == 4'd0) & ~(trunc_ln153_1_fu_948_p1 == 4'd4) & ~(trunc_ln153_1_fu_948_p1 == 4'd8) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_12_we1_local = 1'b1;
    end else begin
        xb_12_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln153_1_fu_948_p1 == 4'd0) & ~(trunc_ln153_1_fu_948_p1 == 4'd4) & ~(trunc_ln153_1_fu_948_p1 == 4'd8) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_13_ce1_local = 1'b1;
    end else begin
        xb_13_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln153_1_fu_948_p1 == 4'd0) & ~(trunc_ln153_1_fu_948_p1 == 4'd4) & ~(trunc_ln153_1_fu_948_p1 == 4'd8) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_13_we1_local = 1'b1;
    end else begin
        xb_13_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln153_1_fu_948_p1 == 4'd0) & ~(trunc_ln153_1_fu_948_p1 == 4'd4) & ~(trunc_ln153_1_fu_948_p1 == 4'd8) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_14_ce1_local = 1'b1;
    end else begin
        xb_14_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln153_1_fu_948_p1 == 4'd0) & ~(trunc_ln153_1_fu_948_p1 == 4'd4) & ~(trunc_ln153_1_fu_948_p1 == 4'd8) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_14_we1_local = 1'b1;
    end else begin
        xb_14_we1_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln153_1_fu_948_p1 == 4'd0) & ~(trunc_ln153_1_fu_948_p1 == 4'd4) & ~(trunc_ln153_1_fu_948_p1 == 4'd8) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_15_ce1_local = 1'b1;
    end else begin
        xb_15_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln153_1_fu_948_p1 == 4'd0) & ~(trunc_ln153_1_fu_948_p1 == 4'd4) & ~(trunc_ln153_1_fu_948_p1 == 4'd8) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_15_we1_local = 1'b1;
    end else begin
        xb_15_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln153_1_fu_948_p1 == 4'd0) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_1_ce1_local = 1'b1;
    end else begin
        xb_1_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln153_1_fu_948_p1 == 4'd0) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_1_we1_local = 1'b1;
    end else begin
        xb_1_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln153_1_fu_948_p1 == 4'd0) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_2_ce1_local = 1'b1;
    end else begin
        xb_2_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln153_1_fu_948_p1 == 4'd0) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_2_we1_local = 1'b1;
    end else begin
        xb_2_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln153_1_fu_948_p1 == 4'd0) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_3_ce1_local = 1'b1;
    end else begin
        xb_3_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln153_1_fu_948_p1 == 4'd0) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_3_we1_local = 1'b1;
    end else begin
        xb_3_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln153_1_fu_948_p1 == 4'd4) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_4_ce1_local = 1'b1;
    end else begin
        xb_4_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln153_1_fu_948_p1 == 4'd4) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_4_we1_local = 1'b1;
    end else begin
        xb_4_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln153_1_fu_948_p1 == 4'd4) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_5_ce1_local = 1'b1;
    end else begin
        xb_5_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln153_1_fu_948_p1 == 4'd4) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_5_we1_local = 1'b1;
    end else begin
        xb_5_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln153_1_fu_948_p1 == 4'd4) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_6_ce1_local = 1'b1;
    end else begin
        xb_6_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln153_1_fu_948_p1 == 4'd4) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_6_we1_local = 1'b1;
    end else begin
        xb_6_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln153_1_fu_948_p1 == 4'd4) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_7_ce1_local = 1'b1;
    end else begin
        xb_7_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln153_1_fu_948_p1 == 4'd4) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_7_we1_local = 1'b1;
    end else begin
        xb_7_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln153_1_fu_948_p1 == 4'd8) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_8_ce1_local = 1'b1;
    end else begin
        xb_8_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln153_1_fu_948_p1 == 4'd8) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_8_we1_local = 1'b1;
    end else begin
        xb_8_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln153_1_fu_948_p1 == 4'd8) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_9_ce1_local = 1'b1;
    end else begin
        xb_9_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln153_1_fu_948_p1 == 4'd8) & (tmp_fu_936_p3 == 1'd0) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        xb_9_we1_local = 1'b1;
    end else begin
        xb_9_we1_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln153_fu_1372_p2 = (ap_sig_allocacmp_i_17 + 7'd4);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_done = ap_done_sig;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign lshr_ln_fu_1029_p4 = {{ap_sig_allocacmp_i_17[5:4]}};

assign or_ln4_fu_1039_p3 = {{h_3}, {lshr_ln_fu_1029_p4}};

assign tmp_1_fu_1221_p33 = 'bx;

assign tmp_7_fu_952_p33 = 'bx;

assign tmp_8_fu_1067_p33 = 'bx;

assign tmp_9_fu_1144_p33 = 'bx;

assign tmp_fu_936_p3 = ap_sig_allocacmp_i_17[32'd6];

assign trunc_ln153_1_fu_948_p1 = ap_sig_allocacmp_i_17[3:0];

assign trunc_ln153_fu_944_p1 = ap_sig_allocacmp_i_17[5:0];

assign xb_0_address1 = zext_ln156_fu_1047_p1;

assign xb_0_ce1 = xb_0_ce1_local;

assign xb_0_d1 = tmp_7_fu_952_p35;

assign xb_0_we1 = xb_0_we1_local;

assign xb_10_address1 = zext_ln156_fu_1047_p1;

assign xb_10_ce1 = xb_10_ce1_local;

assign xb_10_d1 = tmp_9_fu_1144_p35;

assign xb_10_we1 = xb_10_we1_local;

assign xb_11_address1 = zext_ln156_fu_1047_p1;

assign xb_11_ce1 = xb_11_ce1_local;

assign xb_11_d1 = tmp_1_fu_1221_p35;

assign xb_11_we1 = xb_11_we1_local;

assign xb_12_address1 = zext_ln156_fu_1047_p1;

assign xb_12_ce1 = xb_12_ce1_local;

assign xb_12_d1 = tmp_7_fu_952_p35;

assign xb_12_we1 = xb_12_we1_local;

assign xb_13_address1 = zext_ln156_fu_1047_p1;

assign xb_13_ce1 = xb_13_ce1_local;

assign xb_13_d1 = tmp_8_fu_1067_p35;

assign xb_13_we1 = xb_13_we1_local;

assign xb_14_address1 = zext_ln156_fu_1047_p1;

assign xb_14_ce1 = xb_14_ce1_local;

assign xb_14_d1 = tmp_9_fu_1144_p35;

assign xb_14_we1 = xb_14_we1_local;

assign xb_15_address1 = zext_ln156_fu_1047_p1;

assign xb_15_ce1 = xb_15_ce1_local;

assign xb_15_d1 = tmp_1_fu_1221_p35;

assign xb_15_we1 = xb_15_we1_local;

assign xb_1_address1 = zext_ln156_fu_1047_p1;

assign xb_1_ce1 = xb_1_ce1_local;

assign xb_1_d1 = tmp_8_fu_1067_p35;

assign xb_1_we1 = xb_1_we1_local;

assign xb_2_address1 = zext_ln156_fu_1047_p1;

assign xb_2_ce1 = xb_2_ce1_local;

assign xb_2_d1 = tmp_9_fu_1144_p35;

assign xb_2_we1 = xb_2_we1_local;

assign xb_3_address1 = zext_ln156_fu_1047_p1;

assign xb_3_ce1 = xb_3_ce1_local;

assign xb_3_d1 = tmp_1_fu_1221_p35;

assign xb_3_we1 = xb_3_we1_local;

assign xb_4_address1 = zext_ln156_fu_1047_p1;

assign xb_4_ce1 = xb_4_ce1_local;

assign xb_4_d1 = tmp_7_fu_952_p35;

assign xb_4_we1 = xb_4_we1_local;

assign xb_5_address1 = zext_ln156_fu_1047_p1;

assign xb_5_ce1 = xb_5_ce1_local;

assign xb_5_d1 = tmp_8_fu_1067_p35;

assign xb_5_we1 = xb_5_we1_local;

assign xb_6_address1 = zext_ln156_fu_1047_p1;

assign xb_6_ce1 = xb_6_ce1_local;

assign xb_6_d1 = tmp_9_fu_1144_p35;

assign xb_6_we1 = xb_6_we1_local;

assign xb_7_address1 = zext_ln156_fu_1047_p1;

assign xb_7_ce1 = xb_7_ce1_local;

assign xb_7_d1 = tmp_1_fu_1221_p35;

assign xb_7_we1 = xb_7_we1_local;

assign xb_8_address1 = zext_ln156_fu_1047_p1;

assign xb_8_ce1 = xb_8_ce1_local;

assign xb_8_d1 = tmp_7_fu_952_p35;

assign xb_8_we1 = xb_8_we1_local;

assign xb_9_address1 = zext_ln156_fu_1047_p1;

assign xb_9_ce1 = xb_9_ce1_local;

assign xb_9_d1 = tmp_8_fu_1067_p35;

assign xb_9_we1 = xb_9_we1_local;

assign zext_ln156_fu_1047_p1 = or_ln4_fu_1039_p3;

endmodule //llama_layer_kernel_mhsa_1_Block_entry_current_token_fb_proc_Pipeline_ACCUM_WRITEBACK
