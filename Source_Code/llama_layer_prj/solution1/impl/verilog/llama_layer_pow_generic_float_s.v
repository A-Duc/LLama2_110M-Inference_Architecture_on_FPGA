// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module llama_layer_pow_generic_float_s (
        ap_clk,
        ap_rst,
        exp,
        ap_return
);


input   ap_clk;
input   ap_rst;
input  [31:0] exp;
output  [31:0] ap_return;

wire   [8:0] pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_address0;
wire   [26:0] pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_q0;
wire   [4:0] pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_address0;
wire   [7:0] pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_q0;
wire   [0:0] es_sign_fu_216_p3;
reg   [0:0] es_sign_reg_973;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] es_sign_reg_973_pp0_iter1_reg;
reg   [0:0] es_sign_reg_973_pp0_iter2_reg;
reg   [0:0] es_sign_reg_973_pp0_iter3_reg;
reg   [0:0] es_sign_reg_973_pp0_iter4_reg;
reg   [0:0] es_sign_reg_973_pp0_iter5_reg;
reg   [0:0] es_sign_reg_973_pp0_iter6_reg;
reg   [0:0] es_sign_reg_973_pp0_iter7_reg;
reg   [0:0] es_sign_reg_973_pp0_iter8_reg;
reg   [0:0] es_sign_reg_973_pp0_iter9_reg;
reg   [0:0] es_sign_reg_973_pp0_iter10_reg;
reg   [7:0] es_exp_reg_980;
wire   [0:0] icmp_ln18_1_fu_236_p2;
reg   [0:0] icmp_ln18_1_reg_988;
wire   [0:0] icmp_ln18_2_fu_242_p2;
reg   [0:0] icmp_ln18_2_reg_993;
wire   [24:0] e_frac_2_fu_266_p3;
reg  signed [24:0] e_frac_2_reg_998;
wire   [8:0] m_exp_fu_277_p2;
reg   [8:0] m_exp_reg_1003;
wire   [7:0] trunc_ln306_fu_283_p1;
reg   [7:0] trunc_ln306_reg_1009;
wire   [0:0] y_is_0_fu_287_p2;
reg   [0:0] y_is_0_reg_1015;
reg   [0:0] y_is_0_reg_1015_pp0_iter2_reg;
reg   [0:0] y_is_0_reg_1015_pp0_iter3_reg;
reg   [0:0] y_is_0_reg_1015_pp0_iter4_reg;
reg   [0:0] y_is_0_reg_1015_pp0_iter5_reg;
reg   [0:0] y_is_0_reg_1015_pp0_iter6_reg;
reg   [0:0] y_is_0_reg_1015_pp0_iter7_reg;
reg   [0:0] y_is_0_reg_1015_pp0_iter8_reg;
reg   [0:0] y_is_0_reg_1015_pp0_iter9_reg;
reg   [0:0] y_is_0_reg_1015_pp0_iter10_reg;
wire   [0:0] y_is_inf_fu_297_p2;
reg   [0:0] y_is_inf_reg_1020;
reg   [0:0] y_is_inf_reg_1020_pp0_iter2_reg;
reg   [0:0] y_is_inf_reg_1020_pp0_iter3_reg;
reg   [0:0] y_is_inf_reg_1020_pp0_iter4_reg;
reg   [0:0] y_is_inf_reg_1020_pp0_iter5_reg;
reg   [0:0] y_is_inf_reg_1020_pp0_iter6_reg;
reg   [0:0] y_is_inf_reg_1020_pp0_iter7_reg;
reg   [0:0] y_is_inf_reg_1020_pp0_iter8_reg;
reg   [0:0] y_is_inf_reg_1020_pp0_iter9_reg;
reg   [0:0] y_is_inf_reg_1020_pp0_iter10_reg;
wire   [0:0] or_ln378_fu_307_p2;
reg   [0:0] or_ln378_reg_1027;
reg   [0:0] or_ln378_reg_1027_pp0_iter2_reg;
reg   [0:0] or_ln378_reg_1027_pp0_iter3_reg;
reg   [0:0] or_ln378_reg_1027_pp0_iter4_reg;
reg   [0:0] or_ln378_reg_1027_pp0_iter5_reg;
reg   [0:0] or_ln378_reg_1027_pp0_iter6_reg;
reg   [0:0] or_ln378_reg_1027_pp0_iter7_reg;
reg   [0:0] or_ln378_reg_1027_pp0_iter8_reg;
reg   [0:0] or_ln378_reg_1027_pp0_iter9_reg;
reg   [0:0] or_ln378_reg_1027_pp0_iter10_reg;
wire  signed [62:0] m_frac_l_fu_207_p2;
reg  signed [62:0] m_frac_l_reg_1033;
reg  signed [62:0] m_frac_l_reg_1033_pp0_iter2_reg;
reg   [0:0] tmp_reg_1039;
reg   [0:0] tmp_reg_1039_pp0_iter2_reg;
wire  signed [7:0] sub_ln545_fu_333_p2;
reg  signed [7:0] sub_ln545_reg_1047;
reg   [0:0] tmp_1_reg_1053;
reg   [0:0] tmp_8_reg_1059;
reg   [0:0] tmp_8_reg_1059_pp0_iter2_reg;
reg   [0:0] tmp_8_reg_1059_pp0_iter3_reg;
reg   [0:0] tmp_8_reg_1059_pp0_iter4_reg;
reg   [0:0] tmp_8_reg_1059_pp0_iter5_reg;
reg   [0:0] tmp_8_reg_1059_pp0_iter6_reg;
reg   [0:0] tmp_8_reg_1059_pp0_iter7_reg;
reg   [0:0] tmp_8_reg_1059_pp0_iter8_reg;
reg   [0:0] tmp_8_reg_1059_pp0_iter9_reg;
reg   [0:0] tmp_8_reg_1059_pp0_iter10_reg;
wire  signed [31:0] sext_ln545_1_fu_366_p1;
reg  signed [31:0] sext_ln545_1_reg_1064;
wire   [65:0] m_fix_l_fu_394_p3;
reg   [65:0] m_fix_l_reg_1069;
reg   [26:0] m_fix_reg_1075;
reg   [26:0] m_fix_reg_1075_pp0_iter3_reg;
reg   [26:0] m_fix_reg_1075_pp0_iter4_reg;
reg   [26:0] m_fix_reg_1075_pp0_iter5_reg;
reg   [26:0] m_fix_reg_1075_pp0_iter6_reg;
reg   [0:0] tmp_2_reg_1080;
reg   [0:0] tmp_2_reg_1080_pp0_iter3_reg;
wire   [0:0] icmp_ln628_fu_497_p2;
reg   [0:0] icmp_ln628_reg_1090;
reg   [0:0] icmp_ln628_reg_1090_pp0_iter3_reg;
reg   [0:0] icmp_ln628_reg_1090_pp0_iter4_reg;
reg   [0:0] icmp_ln628_reg_1090_pp0_iter5_reg;
reg   [0:0] icmp_ln628_reg_1090_pp0_iter6_reg;
reg   [0:0] icmp_ln628_reg_1090_pp0_iter7_reg;
reg   [0:0] icmp_ln628_reg_1090_pp0_iter8_reg;
reg   [0:0] icmp_ln628_reg_1090_pp0_iter9_reg;
reg   [0:0] icmp_ln628_reg_1090_pp0_iter10_reg;
wire   [0:0] icmp_ln628_1_fu_525_p2;
reg   [0:0] icmp_ln628_1_reg_1095;
reg   [0:0] icmp_ln628_1_reg_1095_pp0_iter4_reg;
reg   [0:0] icmp_ln628_1_reg_1095_pp0_iter5_reg;
reg   [0:0] icmp_ln628_1_reg_1095_pp0_iter6_reg;
reg   [0:0] icmp_ln628_1_reg_1095_pp0_iter7_reg;
reg   [0:0] icmp_ln628_1_reg_1095_pp0_iter8_reg;
reg   [0:0] icmp_ln628_1_reg_1095_pp0_iter9_reg;
reg   [0:0] icmp_ln628_1_reg_1095_pp0_iter10_reg;
wire  signed [9:0] r_exp_fu_581_p3;
reg  signed [9:0] r_exp_reg_1105;
reg  signed [9:0] r_exp_reg_1105_pp0_iter6_reg;
reg  signed [9:0] r_exp_reg_1105_pp0_iter7_reg;
reg  signed [9:0] r_exp_reg_1105_pp0_iter8_reg;
reg  signed [9:0] r_exp_reg_1105_pp0_iter9_reg;
reg  signed [9:0] r_exp_reg_1105_pp0_iter10_reg;
reg   [26:0] m_fix_a_reg_1112;
wire   [17:0] m_diff_lo_fu_625_p1;
reg   [17:0] m_diff_lo_reg_1117;
reg   [26:0] exp_Z1_reg_1132;
reg   [26:0] exp_Z1_reg_1132_pp0_iter9_reg;
wire   [9:0] r_exp_1_fu_719_p2;
reg   [9:0] r_exp_1_reg_1152;
wire   [63:0] zext_ln611_fu_629_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln159_fu_648_p1;
reg    pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_ce0_local;
reg    pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_ce0_local;
wire   [38:0] m_frac_l_fu_207_p1;
wire   [31:0] data_fu_212_p1;
wire   [22:0] es_sig_fu_232_p1;
wire   [23:0] e_frac_fu_248_p3;
wire   [24:0] zext_ln532_fu_256_p1;
wire   [24:0] e_frac_1_fu_260_p2;
wire   [8:0] zext_ln317_fu_274_p1;
wire   [0:0] icmp_ln18_fu_292_p2;
wire   [0:0] y_is_NaN_fu_302_p2;
wire  signed [8:0] sext_ln545_fu_357_p1;
wire   [8:0] select_ln545_fu_360_p3;
wire  signed [66:0] sext_ln539_1_fu_354_p1;
wire   [66:0] zext_ln545_fu_370_p1;
wire   [66:0] ashr_ln545_fu_374_p2;
wire   [66:0] shl_ln545_fu_380_p2;
wire   [65:0] trunc_ln545_fu_386_p1;
wire   [65:0] trunc_ln545_1_fu_390_p1;
wire   [66:0] zext_ln552_fu_401_p1;
wire   [7:0] select_ln553_fu_410_p3;
wire  signed [31:0] sext_ln553_fu_415_p1;
wire   [66:0] zext_ln553_fu_419_p1;
wire   [66:0] shl_ln553_fu_423_p2;
wire   [66:0] ashr_ln553_fu_429_p2;
wire   [66:0] select_ln553_1_fu_435_p3;
wire   [66:0] shl_ln552_fu_404_p2;
wire   [66:0] select_ln553_2_fu_442_p3;
wire   [65:0] trunc_ln553_fu_449_p1;
wire   [66:0] zext_ln549_fu_453_p1;
wire  signed [12:0] m_fix_hi_fu_467_p4;
wire   [65:0] zext_ln546_fu_505_p1;
wire   [65:0] shl_ln546_fu_508_p2;
wire   [65:0] ashr_ln546_fu_513_p2;
wire  signed [65:0] sext_ln539_2_fu_502_p1;
wire   [65:0] m_fix_back_fu_518_p3;
wire  signed [15:0] shl_ln_fu_531_p3;
wire  signed [24:0] grp_fu_951_p3;
wire   [14:0] trunc_ln563_fu_558_p1;
wire   [9:0] trunc_ln_fu_542_p4;
wire   [0:0] icmp_ln563_fu_561_p2;
wire   [9:0] add_ln563_1_fu_567_p2;
wire   [0:0] tmp_5_fu_551_p3;
wire   [9:0] select_ln563_fu_573_p3;
wire   [35:0] mul_ln568_fu_202_p2;
wire   [26:0] sub_ln574_fu_611_p2;
wire   [8:0] m_diff_hi_fu_615_p4;
wire   [4:0] Z2_ind_fu_638_p4;
wire   [18:0] zext_ln160_fu_657_p1;
wire   [18:0] zext_ln160_1_fu_660_p1;
wire   [18:0] add_ln160_fu_664_p2;
wire   [17:0] exp_Z1_hi_fu_680_p4;
wire   [17:0] exp_Z1P_m_1_fu_670_p4;
wire   [26:0] add_ln616_fu_706_p2;
wire   [43:0] grp_fu_962_p3;
wire   [0:0] tmp_6_fu_740_p3;
wire   [9:0] r_exp_2_fu_747_p3;
wire   [2:0] tmp_7_fu_757_p4;
wire   [0:0] and_ln628_fu_753_p2;
wire   [0:0] icmp_ln628_2_fu_767_p2;
wire   [22:0] tmp_3_fu_786_p4;
wire   [22:0] tmp_4_fu_795_p4;
wire   [7:0] trunc_ln657_fu_812_p1;
wire   [7:0] out_exp_fu_816_p2;
wire   [22:0] out_sig_fu_804_p3;
wire   [30:0] t_fu_822_p3;
wire   [31:0] zext_ln313_fu_830_p1;
wire   [0:0] xor_ln413_fu_731_p2;
wire   [0:0] xor_ln378_fu_838_p2;
wire   [0:0] and_ln431_fu_843_p2;
wire   [0:0] xor_ln431_fu_854_p2;
wire   [0:0] and_ln438_fu_736_p2;
wire   [0:0] xor_ln438_fu_864_p2;
wire   [0:0] and_ln438_1_fu_870_p2;
wire   [0:0] or_ln431_fu_859_p2;
wire   [0:0] and_ln438_2_fu_876_p2;
wire   [0:0] or_ln628_fu_773_p2;
wire   [0:0] icmp_ln645_fu_894_p2;
wire   [0:0] xor_ln628_fu_888_p2;
wire   [0:0] and_ln645_fu_900_p2;
wire   [0:0] and_ln431_1_fu_849_p2;
wire   [0:0] and_ln628_1_fu_882_p2;
wire   [0:0] and_ln645_1_fu_906_p2;
wire   [31:0] UnifiedRetVal_fu_923_p2;
wire   [31:0] UnifiedRetVal_fu_923_p6;
wire   [31:0] UnifiedRetVal_fu_923_p8;
wire   [31:0] UnifiedRetVal_fu_923_p11;
wire   [3:0] UnifiedRetVal_fu_923_p12;
wire   [11:0] grp_fu_951_p1;
wire   [17:0] grp_fu_962_p0;
wire   [17:0] grp_fu_962_p1;
wire   [43:0] grp_fu_962_p2;
wire   [31:0] UnifiedRetVal_fu_923_p13;
reg   [31:0] exp_int_reg;
wire   [35:0] grp_fu_962_p00;
wire   [35:0] grp_fu_962_p10;
wire  signed [3:0] UnifiedRetVal_fu_923_p1;
wire   [3:0] UnifiedRetVal_fu_923_p3;
wire   [3:0] UnifiedRetVal_fu_923_p5;
wire   [3:0] UnifiedRetVal_fu_923_p7;
wire   [3:0] UnifiedRetVal_fu_923_p9;
wire    ap_ce_reg;

llama_layer_pow_generic_float_s_pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_arrbkb #(
    .DataWidth( 27 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_address0),
    .ce0(pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_ce0_local),
    .q0(pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_q0)
);

llama_layer_pow_generic_float_s_pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_arraycud #(
    .DataWidth( 8 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_address0),
    .ce0(pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_ce0_local),
    .q0(pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_q0)
);

llama_layer_mul_10s_36s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 36 ))
mul_10s_36s_36_1_1_U470(
    .din0(r_exp_reg_1105),
    .din1(36'd47632711549),
    .dout(mul_ln568_fu_202_p2)
);

llama_layer_mul_25s_39ns_63_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 39 ),
    .dout_WIDTH( 63 ))
mul_25s_39ns_63_1_1_U471(
    .din0(e_frac_2_reg_998),
    .din1(m_frac_l_fu_207_p1),
    .dout(m_frac_l_fu_207_p2)
);

(* dissolve_hierarchy = "yes" *) llama_layer_sparsemux_11_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h8 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h4 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h1 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h0 ),
    .din4_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_11_4_32_1_1_U472(
    .din0(UnifiedRetVal_fu_923_p2),
    .din1(32'd2139095040),
    .din2(UnifiedRetVal_fu_923_p6),
    .din3(UnifiedRetVal_fu_923_p8),
    .din4(32'd0),
    .def(UnifiedRetVal_fu_923_p11),
    .sel(UnifiedRetVal_fu_923_p12),
    .dout(UnifiedRetVal_fu_923_p13)
);

llama_layer_mac_muladd_13s_12ns_16s_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 25 ))
mac_muladd_13s_12ns_16s_25_4_1_U473(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(m_fix_hi_fu_467_p4),
    .din1(grp_fu_951_p1),
    .din2(shl_ln_fu_531_p3),
    .ce(1'b1),
    .dout(grp_fu_951_p3)
);

llama_layer_mac_muladd_18ns_18ns_44ns_44_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 44 ),
    .dout_WIDTH( 44 ))
mac_muladd_18ns_18ns_44ns_44_4_1_U474(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_962_p0),
    .din1(grp_fu_962_p1),
    .din2(grp_fu_962_p2),
    .ce(1'b1),
    .dout(grp_fu_962_p3)
);

always @ (posedge ap_clk) begin
    exp_int_reg <= exp;
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        e_frac_2_reg_998 <= e_frac_2_fu_266_p3;
        es_exp_reg_980 <= {{data_fu_212_p1[30:23]}};
        es_sign_reg_973 <= data_fu_212_p1[32'd31];
        es_sign_reg_973_pp0_iter10_reg <= es_sign_reg_973_pp0_iter9_reg;
        es_sign_reg_973_pp0_iter1_reg <= es_sign_reg_973;
        es_sign_reg_973_pp0_iter2_reg <= es_sign_reg_973_pp0_iter1_reg;
        es_sign_reg_973_pp0_iter3_reg <= es_sign_reg_973_pp0_iter2_reg;
        es_sign_reg_973_pp0_iter4_reg <= es_sign_reg_973_pp0_iter3_reg;
        es_sign_reg_973_pp0_iter5_reg <= es_sign_reg_973_pp0_iter4_reg;
        es_sign_reg_973_pp0_iter6_reg <= es_sign_reg_973_pp0_iter5_reg;
        es_sign_reg_973_pp0_iter7_reg <= es_sign_reg_973_pp0_iter6_reg;
        es_sign_reg_973_pp0_iter8_reg <= es_sign_reg_973_pp0_iter7_reg;
        es_sign_reg_973_pp0_iter9_reg <= es_sign_reg_973_pp0_iter8_reg;
        exp_Z1_reg_1132 <= pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_q0;
        exp_Z1_reg_1132_pp0_iter9_reg <= exp_Z1_reg_1132;
        icmp_ln18_1_reg_988 <= icmp_ln18_1_fu_236_p2;
        icmp_ln18_2_reg_993 <= icmp_ln18_2_fu_242_p2;
        icmp_ln628_1_reg_1095 <= icmp_ln628_1_fu_525_p2;
        icmp_ln628_1_reg_1095_pp0_iter10_reg <= icmp_ln628_1_reg_1095_pp0_iter9_reg;
        icmp_ln628_1_reg_1095_pp0_iter4_reg <= icmp_ln628_1_reg_1095;
        icmp_ln628_1_reg_1095_pp0_iter5_reg <= icmp_ln628_1_reg_1095_pp0_iter4_reg;
        icmp_ln628_1_reg_1095_pp0_iter6_reg <= icmp_ln628_1_reg_1095_pp0_iter5_reg;
        icmp_ln628_1_reg_1095_pp0_iter7_reg <= icmp_ln628_1_reg_1095_pp0_iter6_reg;
        icmp_ln628_1_reg_1095_pp0_iter8_reg <= icmp_ln628_1_reg_1095_pp0_iter7_reg;
        icmp_ln628_1_reg_1095_pp0_iter9_reg <= icmp_ln628_1_reg_1095_pp0_iter8_reg;
        icmp_ln628_reg_1090 <= icmp_ln628_fu_497_p2;
        icmp_ln628_reg_1090_pp0_iter10_reg <= icmp_ln628_reg_1090_pp0_iter9_reg;
        icmp_ln628_reg_1090_pp0_iter3_reg <= icmp_ln628_reg_1090;
        icmp_ln628_reg_1090_pp0_iter4_reg <= icmp_ln628_reg_1090_pp0_iter3_reg;
        icmp_ln628_reg_1090_pp0_iter5_reg <= icmp_ln628_reg_1090_pp0_iter4_reg;
        icmp_ln628_reg_1090_pp0_iter6_reg <= icmp_ln628_reg_1090_pp0_iter5_reg;
        icmp_ln628_reg_1090_pp0_iter7_reg <= icmp_ln628_reg_1090_pp0_iter6_reg;
        icmp_ln628_reg_1090_pp0_iter8_reg <= icmp_ln628_reg_1090_pp0_iter7_reg;
        icmp_ln628_reg_1090_pp0_iter9_reg <= icmp_ln628_reg_1090_pp0_iter8_reg;
        m_diff_lo_reg_1117 <= m_diff_lo_fu_625_p1;
        m_exp_reg_1003 <= m_exp_fu_277_p2;
        m_fix_a_reg_1112 <= {{mul_ln568_fu_202_p2[35:9]}};
        m_fix_l_reg_1069 <= m_fix_l_fu_394_p3;
        m_fix_reg_1075 <= {{select_ln553_2_fu_442_p3[56:30]}};
        m_fix_reg_1075_pp0_iter3_reg <= m_fix_reg_1075;
        m_fix_reg_1075_pp0_iter4_reg <= m_fix_reg_1075_pp0_iter3_reg;
        m_fix_reg_1075_pp0_iter5_reg <= m_fix_reg_1075_pp0_iter4_reg;
        m_fix_reg_1075_pp0_iter6_reg <= m_fix_reg_1075_pp0_iter5_reg;
        m_frac_l_reg_1033 <= m_frac_l_fu_207_p2;
        m_frac_l_reg_1033_pp0_iter2_reg <= m_frac_l_reg_1033;
        or_ln378_reg_1027 <= or_ln378_fu_307_p2;
        or_ln378_reg_1027_pp0_iter10_reg <= or_ln378_reg_1027_pp0_iter9_reg;
        or_ln378_reg_1027_pp0_iter2_reg <= or_ln378_reg_1027;
        or_ln378_reg_1027_pp0_iter3_reg <= or_ln378_reg_1027_pp0_iter2_reg;
        or_ln378_reg_1027_pp0_iter4_reg <= or_ln378_reg_1027_pp0_iter3_reg;
        or_ln378_reg_1027_pp0_iter5_reg <= or_ln378_reg_1027_pp0_iter4_reg;
        or_ln378_reg_1027_pp0_iter6_reg <= or_ln378_reg_1027_pp0_iter5_reg;
        or_ln378_reg_1027_pp0_iter7_reg <= or_ln378_reg_1027_pp0_iter6_reg;
        or_ln378_reg_1027_pp0_iter8_reg <= or_ln378_reg_1027_pp0_iter7_reg;
        or_ln378_reg_1027_pp0_iter9_reg <= or_ln378_reg_1027_pp0_iter8_reg;
        r_exp_1_reg_1152 <= r_exp_1_fu_719_p2;
        r_exp_reg_1105 <= r_exp_fu_581_p3;
        r_exp_reg_1105_pp0_iter10_reg <= r_exp_reg_1105_pp0_iter9_reg;
        r_exp_reg_1105_pp0_iter6_reg <= r_exp_reg_1105;
        r_exp_reg_1105_pp0_iter7_reg <= r_exp_reg_1105_pp0_iter6_reg;
        r_exp_reg_1105_pp0_iter8_reg <= r_exp_reg_1105_pp0_iter7_reg;
        r_exp_reg_1105_pp0_iter9_reg <= r_exp_reg_1105_pp0_iter8_reg;
        sext_ln545_1_reg_1064 <= sext_ln545_1_fu_366_p1;
        sub_ln545_reg_1047 <= sub_ln545_fu_333_p2;
        tmp_1_reg_1053 <= sub_ln545_fu_333_p2[32'd7];
        tmp_2_reg_1080 <= zext_ln549_fu_453_p1[32'd65];
        tmp_2_reg_1080_pp0_iter3_reg <= tmp_2_reg_1080;
        tmp_8_reg_1059 <= m_frac_l_fu_207_p2[32'd62];
        tmp_8_reg_1059_pp0_iter10_reg <= tmp_8_reg_1059_pp0_iter9_reg;
        tmp_8_reg_1059_pp0_iter2_reg <= tmp_8_reg_1059;
        tmp_8_reg_1059_pp0_iter3_reg <= tmp_8_reg_1059_pp0_iter2_reg;
        tmp_8_reg_1059_pp0_iter4_reg <= tmp_8_reg_1059_pp0_iter3_reg;
        tmp_8_reg_1059_pp0_iter5_reg <= tmp_8_reg_1059_pp0_iter4_reg;
        tmp_8_reg_1059_pp0_iter6_reg <= tmp_8_reg_1059_pp0_iter5_reg;
        tmp_8_reg_1059_pp0_iter7_reg <= tmp_8_reg_1059_pp0_iter6_reg;
        tmp_8_reg_1059_pp0_iter8_reg <= tmp_8_reg_1059_pp0_iter7_reg;
        tmp_8_reg_1059_pp0_iter9_reg <= tmp_8_reg_1059_pp0_iter8_reg;
        tmp_reg_1039 <= m_exp_fu_277_p2[32'd8];
        tmp_reg_1039_pp0_iter2_reg <= tmp_reg_1039;
        trunc_ln306_reg_1009 <= trunc_ln306_fu_283_p1;
        y_is_0_reg_1015 <= y_is_0_fu_287_p2;
        y_is_0_reg_1015_pp0_iter10_reg <= y_is_0_reg_1015_pp0_iter9_reg;
        y_is_0_reg_1015_pp0_iter2_reg <= y_is_0_reg_1015;
        y_is_0_reg_1015_pp0_iter3_reg <= y_is_0_reg_1015_pp0_iter2_reg;
        y_is_0_reg_1015_pp0_iter4_reg <= y_is_0_reg_1015_pp0_iter3_reg;
        y_is_0_reg_1015_pp0_iter5_reg <= y_is_0_reg_1015_pp0_iter4_reg;
        y_is_0_reg_1015_pp0_iter6_reg <= y_is_0_reg_1015_pp0_iter5_reg;
        y_is_0_reg_1015_pp0_iter7_reg <= y_is_0_reg_1015_pp0_iter6_reg;
        y_is_0_reg_1015_pp0_iter8_reg <= y_is_0_reg_1015_pp0_iter7_reg;
        y_is_0_reg_1015_pp0_iter9_reg <= y_is_0_reg_1015_pp0_iter8_reg;
        y_is_inf_reg_1020 <= y_is_inf_fu_297_p2;
        y_is_inf_reg_1020_pp0_iter10_reg <= y_is_inf_reg_1020_pp0_iter9_reg;
        y_is_inf_reg_1020_pp0_iter2_reg <= y_is_inf_reg_1020;
        y_is_inf_reg_1020_pp0_iter3_reg <= y_is_inf_reg_1020_pp0_iter2_reg;
        y_is_inf_reg_1020_pp0_iter4_reg <= y_is_inf_reg_1020_pp0_iter3_reg;
        y_is_inf_reg_1020_pp0_iter5_reg <= y_is_inf_reg_1020_pp0_iter4_reg;
        y_is_inf_reg_1020_pp0_iter6_reg <= y_is_inf_reg_1020_pp0_iter5_reg;
        y_is_inf_reg_1020_pp0_iter7_reg <= y_is_inf_reg_1020_pp0_iter6_reg;
        y_is_inf_reg_1020_pp0_iter8_reg <= y_is_inf_reg_1020_pp0_iter7_reg;
        y_is_inf_reg_1020_pp0_iter9_reg <= y_is_inf_reg_1020_pp0_iter8_reg;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_ce0_local = 1'b1;
    end else begin
        pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_ce0_local = 1'b1;
    end else begin
        pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_ce0_local = 1'b0;
    end
end

assign UnifiedRetVal_fu_923_p11 = 'bx;

assign UnifiedRetVal_fu_923_p12 = {{{{or_ln378_reg_1027_pp0_iter10_reg}, {and_ln431_1_fu_849_p2}}, {and_ln628_1_fu_882_p2}}, {and_ln645_1_fu_906_p2}};

assign UnifiedRetVal_fu_923_p2 = ((y_is_0_reg_1015_pp0_iter10_reg[0:0] == 1'b1) ? 32'd1065353216 : 32'd2147483647);

assign UnifiedRetVal_fu_923_p6 = ((tmp_8_reg_1059_pp0_iter10_reg[0:0] == 1'b1) ? 32'd0 : 32'd2139095040);

assign UnifiedRetVal_fu_923_p8 = zext_ln313_fu_830_p1;

assign Z2_ind_fu_638_p4 = {{sub_ln574_fu_611_p2[17:13]}};

assign add_ln160_fu_664_p2 = (zext_ln160_fu_657_p1 + zext_ln160_1_fu_660_p1);

assign add_ln563_1_fu_567_p2 = (trunc_ln_fu_542_p4 + 10'd1);

assign add_ln616_fu_706_p2 = (exp_Z1_reg_1132_pp0_iter9_reg + 27'd4);

assign and_ln431_1_fu_849_p2 = (y_is_inf_reg_1020_pp0_iter10_reg & and_ln431_fu_843_p2);

assign and_ln431_fu_843_p2 = (xor_ln413_fu_731_p2 & xor_ln378_fu_838_p2);

assign and_ln438_1_fu_870_p2 = (xor_ln438_fu_864_p2 & xor_ln378_fu_838_p2);

assign and_ln438_2_fu_876_p2 = (or_ln431_fu_859_p2 & and_ln438_1_fu_870_p2);

assign and_ln438_fu_736_p2 = (y_is_inf_reg_1020_pp0_iter10_reg & es_sign_reg_973_pp0_iter10_reg);

assign and_ln628_1_fu_882_p2 = (or_ln628_fu_773_p2 & and_ln438_2_fu_876_p2);

assign and_ln628_fu_753_p2 = (icmp_ln628_reg_1090_pp0_iter10_reg & icmp_ln628_1_reg_1095_pp0_iter10_reg);

assign and_ln645_1_fu_906_p2 = (and_ln645_fu_900_p2 & and_ln438_2_fu_876_p2);

assign and_ln645_fu_900_p2 = (xor_ln628_fu_888_p2 & icmp_ln645_fu_894_p2);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_return = UnifiedRetVal_fu_923_p13;

assign ashr_ln545_fu_374_p2 = $signed(sext_ln539_1_fu_354_p1) >>> zext_ln545_fu_370_p1;

assign ashr_ln546_fu_513_p2 = $signed(m_fix_l_reg_1069) >>> zext_ln546_fu_505_p1;

assign ashr_ln553_fu_429_p2 = $signed(sext_ln539_1_fu_354_p1) >>> zext_ln553_fu_419_p1;

assign data_fu_212_p1 = exp_int_reg;

assign e_frac_1_fu_260_p2 = (25'd0 - zext_ln532_fu_256_p1);

assign e_frac_2_fu_266_p3 = ((es_sign_fu_216_p3[0:0] == 1'b1) ? e_frac_1_fu_260_p2 : zext_ln532_fu_256_p1);

assign e_frac_fu_248_p3 = {{1'd1}, {es_sig_fu_232_p1}};

assign es_sig_fu_232_p1 = data_fu_212_p1[22:0];

assign es_sign_fu_216_p3 = data_fu_212_p1[32'd31];

assign exp_Z1P_m_1_fu_670_p4 = {{add_ln160_fu_664_p2[18:1]}};

assign exp_Z1_hi_fu_680_p4 = {{pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_q0[26:9]}};

assign grp_fu_951_p1 = 25'd2954;

assign grp_fu_962_p0 = grp_fu_962_p00;

assign grp_fu_962_p00 = exp_Z1_hi_fu_680_p4;

assign grp_fu_962_p1 = grp_fu_962_p10;

assign grp_fu_962_p10 = exp_Z1P_m_1_fu_670_p4;

assign grp_fu_962_p2 = {{add_ln616_fu_706_p2}, {17'd0}};

assign icmp_ln18_1_fu_236_p2 = ((es_sig_fu_232_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_2_fu_242_p2 = ((es_sig_fu_232_p1 != 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_292_p2 = ((es_exp_reg_980 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln563_fu_561_p2 = ((trunc_ln563_fu_558_p1 != 15'd0) ? 1'b1 : 1'b0);

assign icmp_ln628_1_fu_525_p2 = ((sext_ln539_2_fu_502_p1 != m_fix_back_fu_518_p3) ? 1'b1 : 1'b0);

assign icmp_ln628_2_fu_767_p2 = (($signed(tmp_7_fu_757_p4) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign icmp_ln628_fu_497_p2 = (($signed(m_exp_reg_1003) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln645_fu_894_p2 = (($signed(r_exp_2_fu_747_p3) > $signed(10'd897)) ? 1'b1 : 1'b0);

assign m_diff_hi_fu_615_p4 = {{sub_ln574_fu_611_p2[26:18]}};

assign m_diff_lo_fu_625_p1 = sub_ln574_fu_611_p2[17:0];

assign m_exp_fu_277_p2 = ($signed(zext_ln317_fu_274_p1) + $signed(9'd385));

assign m_fix_back_fu_518_p3 = ((tmp_reg_1039_pp0_iter2_reg[0:0] == 1'b1) ? shl_ln546_fu_508_p2 : ashr_ln546_fu_513_p2);

assign m_fix_hi_fu_467_p4 = {{select_ln553_2_fu_442_p3[65:53]}};

assign m_fix_l_fu_394_p3 = ((tmp_reg_1039[0:0] == 1'b1) ? trunc_ln545_fu_386_p1 : trunc_ln545_1_fu_390_p1);

assign m_frac_l_fu_207_p1 = 63'd158232442730;

assign or_ln378_fu_307_p2 = (y_is_NaN_fu_302_p2 | y_is_0_fu_287_p2);

assign or_ln431_fu_859_p2 = (xor_ln431_fu_854_p2 | es_sign_reg_973_pp0_iter10_reg);

assign or_ln628_fu_773_p2 = (icmp_ln628_2_fu_767_p2 | and_ln628_fu_753_p2);

assign out_exp_fu_816_p2 = (trunc_ln657_fu_812_p1 + 8'd127);

assign out_sig_fu_804_p3 = ((tmp_6_fu_740_p3[0:0] == 1'b1) ? tmp_3_fu_786_p4 : tmp_4_fu_795_p4);

assign pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_array_address0 = zext_ln611_fu_629_p1;

assign pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_address0 = zext_ln159_fu_648_p1;

assign r_exp_1_fu_719_p2 = ($signed(r_exp_reg_1105_pp0_iter9_reg) + $signed(10'd1023));

assign r_exp_2_fu_747_p3 = ((tmp_6_fu_740_p3[0:0] == 1'b1) ? r_exp_reg_1105_pp0_iter10_reg : r_exp_1_reg_1152);

assign r_exp_fu_581_p3 = ((tmp_5_fu_551_p3[0:0] == 1'b1) ? select_ln563_fu_573_p3 : trunc_ln_fu_542_p4);

assign select_ln545_fu_360_p3 = ((tmp_reg_1039[0:0] == 1'b1) ? sext_ln545_fu_357_p1 : m_exp_reg_1003);

assign select_ln553_1_fu_435_p3 = ((tmp_1_reg_1053[0:0] == 1'b1) ? shl_ln553_fu_423_p2 : ashr_ln553_fu_429_p2);

assign select_ln553_2_fu_442_p3 = ((tmp_reg_1039[0:0] == 1'b1) ? select_ln553_1_fu_435_p3 : shl_ln552_fu_404_p2);

assign select_ln553_fu_410_p3 = ((tmp_1_reg_1053[0:0] == 1'b1) ? trunc_ln306_reg_1009 : sub_ln545_reg_1047);

assign select_ln563_fu_573_p3 = ((icmp_ln563_fu_561_p2[0:0] == 1'b1) ? add_ln563_1_fu_567_p2 : trunc_ln_fu_542_p4);

assign sext_ln539_1_fu_354_p1 = m_frac_l_reg_1033;

assign sext_ln539_2_fu_502_p1 = m_frac_l_reg_1033_pp0_iter2_reg;

assign sext_ln545_1_fu_366_p1 = $signed(select_ln545_fu_360_p3);

assign sext_ln545_fu_357_p1 = sub_ln545_reg_1047;

assign sext_ln553_fu_415_p1 = $signed(select_ln553_fu_410_p3);

assign shl_ln545_fu_380_p2 = sext_ln539_1_fu_354_p1 << zext_ln545_fu_370_p1;

assign shl_ln546_fu_508_p2 = m_fix_l_reg_1069 << zext_ln546_fu_505_p1;

assign shl_ln552_fu_404_p2 = sext_ln539_1_fu_354_p1 << zext_ln552_fu_401_p1;

assign shl_ln553_fu_423_p2 = sext_ln539_1_fu_354_p1 << zext_ln553_fu_419_p1;

assign shl_ln_fu_531_p3 = {{tmp_2_reg_1080_pp0_iter3_reg}, {15'd16384}};

assign sub_ln545_fu_333_p2 = (8'd127 - es_exp_reg_980);

assign sub_ln574_fu_611_p2 = (m_fix_reg_1075_pp0_iter6_reg - m_fix_a_reg_1112);

assign t_fu_822_p3 = {{out_exp_fu_816_p2}, {out_sig_fu_804_p3}};

assign tmp_3_fu_786_p4 = {{grp_fu_962_p3[42:20]}};

assign tmp_4_fu_795_p4 = {{grp_fu_962_p3[41:19]}};

assign tmp_5_fu_551_p3 = grp_fu_951_p3[32'd24];

assign tmp_6_fu_740_p3 = grp_fu_962_p3[32'd43];

assign tmp_7_fu_757_p4 = {{r_exp_2_fu_747_p3[9:7]}};

assign trunc_ln306_fu_283_p1 = m_exp_fu_277_p2[7:0];

assign trunc_ln545_1_fu_390_p1 = shl_ln545_fu_380_p2[65:0];

assign trunc_ln545_fu_386_p1 = ashr_ln545_fu_374_p2[65:0];

assign trunc_ln553_fu_449_p1 = select_ln553_2_fu_442_p3[65:0];

assign trunc_ln563_fu_558_p1 = grp_fu_951_p3[14:0];

assign trunc_ln657_fu_812_p1 = r_exp_2_fu_747_p3[7:0];

assign trunc_ln_fu_542_p4 = {{grp_fu_951_p3[24:15]}};

assign xor_ln378_fu_838_p2 = (or_ln378_reg_1027_pp0_iter10_reg ^ 1'd1);

assign xor_ln413_fu_731_p2 = (es_sign_reg_973_pp0_iter10_reg ^ 1'd1);

assign xor_ln431_fu_854_p2 = (y_is_inf_reg_1020_pp0_iter10_reg ^ 1'd1);

assign xor_ln438_fu_864_p2 = (1'd1 ^ and_ln438_fu_736_p2);

assign xor_ln628_fu_888_p2 = (or_ln628_fu_773_p2 ^ 1'd1);

assign y_is_0_fu_287_p2 = ((es_exp_reg_980 == 8'd0) ? 1'b1 : 1'b0);

assign y_is_NaN_fu_302_p2 = (icmp_ln18_fu_292_p2 & icmp_ln18_2_reg_993);

assign y_is_inf_fu_297_p2 = (icmp_ln18_fu_292_p2 & icmp_ln18_1_reg_988);

assign zext_ln159_fu_648_p1 = Z2_ind_fu_638_p4;

assign zext_ln160_1_fu_660_p1 = pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_array_q0;

assign zext_ln160_fu_657_p1 = m_diff_lo_reg_1117;

assign zext_ln313_fu_830_p1 = t_fu_822_p3;

assign zext_ln317_fu_274_p1 = es_exp_reg_980;

assign zext_ln532_fu_256_p1 = e_frac_fu_248_p3;

assign zext_ln545_fu_370_p1 = $unsigned(sext_ln545_1_fu_366_p1);

assign zext_ln546_fu_505_p1 = $unsigned(sext_ln545_1_reg_1064);

assign zext_ln549_fu_453_p1 = trunc_ln553_fu_449_p1;

assign zext_ln552_fu_401_p1 = trunc_ln306_reg_1009;

assign zext_ln553_fu_419_p1 = $unsigned(sext_ln553_fu_415_p1);

assign zext_ln611_fu_629_p1 = m_diff_hi_fu_615_p4;

endmodule //llama_layer_pow_generic_float_s
