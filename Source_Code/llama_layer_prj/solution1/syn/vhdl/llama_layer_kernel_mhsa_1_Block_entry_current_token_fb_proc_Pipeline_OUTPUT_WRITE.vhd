-- ==============================================================
-- Generated by Vitis HLS v2025.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity llama_layer_kernel_mhsa_1_Block_entry_current_token_fb_proc_Pipeline_OUTPUT_WRITE is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    xb2_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb2_0_ce0 : OUT STD_LOGIC;
    xb2_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    xb2_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb2_1_ce0 : OUT STD_LOGIC;
    xb2_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    xb2_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb2_2_ce0 : OUT STD_LOGIC;
    xb2_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    xb2_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb2_3_ce0 : OUT STD_LOGIC;
    xb2_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    xb2_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb2_4_ce0 : OUT STD_LOGIC;
    xb2_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    xb2_5_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb2_5_ce0 : OUT STD_LOGIC;
    xb2_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    xb2_6_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb2_6_ce0 : OUT STD_LOGIC;
    xb2_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    xb2_7_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb2_7_ce0 : OUT STD_LOGIC;
    xb2_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    xb2_8_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb2_8_ce0 : OUT STD_LOGIC;
    xb2_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    xb2_9_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb2_9_ce0 : OUT STD_LOGIC;
    xb2_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    xb2_10_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb2_10_ce0 : OUT STD_LOGIC;
    xb2_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    xb2_11_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb2_11_ce0 : OUT STD_LOGIC;
    xb2_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    xb2_12_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb2_12_ce0 : OUT STD_LOGIC;
    xb2_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    xb2_13_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb2_13_ce0 : OUT STD_LOGIC;
    xb2_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    xb2_14_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb2_14_ce0 : OUT STD_LOGIC;
    xb2_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    xb2_15_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb2_15_ce0 : OUT STD_LOGIC;
    xb2_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ11llama_layerE13current_token_14_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    p_ZZ11llama_layerE13current_token_14_ce1 : OUT STD_LOGIC;
    p_ZZ11llama_layerE13current_token_14_we1 : OUT STD_LOGIC;
    p_ZZ11llama_layerE13current_token_14_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ11llama_layerE13current_token_13_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    p_ZZ11llama_layerE13current_token_13_ce1 : OUT STD_LOGIC;
    p_ZZ11llama_layerE13current_token_13_we1 : OUT STD_LOGIC;
    p_ZZ11llama_layerE13current_token_13_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ11llama_layerE13current_token_12_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    p_ZZ11llama_layerE13current_token_12_ce1 : OUT STD_LOGIC;
    p_ZZ11llama_layerE13current_token_12_we1 : OUT STD_LOGIC;
    p_ZZ11llama_layerE13current_token_12_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ11llama_layerE13current_token_11_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    p_ZZ11llama_layerE13current_token_11_ce1 : OUT STD_LOGIC;
    p_ZZ11llama_layerE13current_token_11_we1 : OUT STD_LOGIC;
    p_ZZ11llama_layerE13current_token_11_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ11llama_layerE13current_token_10_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    p_ZZ11llama_layerE13current_token_10_ce1 : OUT STD_LOGIC;
    p_ZZ11llama_layerE13current_token_10_we1 : OUT STD_LOGIC;
    p_ZZ11llama_layerE13current_token_10_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    current_token_27_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    current_token_27_ce1 : OUT STD_LOGIC;
    current_token_27_we1 : OUT STD_LOGIC;
    current_token_27_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    current_token_26_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    current_token_26_ce1 : OUT STD_LOGIC;
    current_token_26_we1 : OUT STD_LOGIC;
    current_token_26_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    current_token_25_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    current_token_25_ce1 : OUT STD_LOGIC;
    current_token_25_we1 : OUT STD_LOGIC;
    current_token_25_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    current_token_24_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    current_token_24_ce1 : OUT STD_LOGIC;
    current_token_24_we1 : OUT STD_LOGIC;
    current_token_24_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    current_token_23_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    current_token_23_ce1 : OUT STD_LOGIC;
    current_token_23_we1 : OUT STD_LOGIC;
    current_token_23_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    current_token_22_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    current_token_22_ce1 : OUT STD_LOGIC;
    current_token_22_we1 : OUT STD_LOGIC;
    current_token_22_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    current_token_21_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    current_token_21_ce1 : OUT STD_LOGIC;
    current_token_21_we1 : OUT STD_LOGIC;
    current_token_21_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    current_token_20_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    current_token_20_ce1 : OUT STD_LOGIC;
    current_token_20_we1 : OUT STD_LOGIC;
    current_token_20_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    current_token_19_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    current_token_19_ce1 : OUT STD_LOGIC;
    current_token_19_we1 : OUT STD_LOGIC;
    current_token_19_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    current_token_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    current_token_ce1 : OUT STD_LOGIC;
    current_token_we1 : OUT STD_LOGIC;
    current_token_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ11llama_layerE13current_token_15_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    p_ZZ11llama_layerE13current_token_15_ce1 : OUT STD_LOGIC;
    p_ZZ11llama_layerE13current_token_15_we1 : OUT STD_LOGIC;
    p_ZZ11llama_layerE13current_token_15_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of llama_layer_kernel_mhsa_1_Block_entry_current_token_fb_proc_Pipeline_OUTPUT_WRITE is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_300 : STD_LOGIC_VECTOR (9 downto 0) := "1100000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln165_fu_639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln165_fu_645_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln165_reg_928 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln165_reg_928_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln165_fu_659_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln165_reg_933 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln165_reg_933_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_782_p35 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_1033 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal i_fu_138 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal add_ln165_fu_633_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_15 : STD_LOGIC_VECTOR (9 downto 0);
    signal xb2_0_ce0_local : STD_LOGIC;
    signal xb2_1_ce0_local : STD_LOGIC;
    signal xb2_2_ce0_local : STD_LOGIC;
    signal xb2_3_ce0_local : STD_LOGIC;
    signal xb2_4_ce0_local : STD_LOGIC;
    signal xb2_5_ce0_local : STD_LOGIC;
    signal xb2_6_ce0_local : STD_LOGIC;
    signal xb2_7_ce0_local : STD_LOGIC;
    signal xb2_8_ce0_local : STD_LOGIC;
    signal xb2_9_ce0_local : STD_LOGIC;
    signal xb2_10_ce0_local : STD_LOGIC;
    signal xb2_11_ce0_local : STD_LOGIC;
    signal xb2_12_ce0_local : STD_LOGIC;
    signal xb2_13_ce0_local : STD_LOGIC;
    signal xb2_14_ce0_local : STD_LOGIC;
    signal xb2_15_ce0_local : STD_LOGIC;
    signal p_ZZ11llama_layerE13current_token_14_we1_local : STD_LOGIC;
    signal p_ZZ11llama_layerE13current_token_14_ce1_local : STD_LOGIC;
    signal p_ZZ11llama_layerE13current_token_13_we1_local : STD_LOGIC;
    signal p_ZZ11llama_layerE13current_token_13_ce1_local : STD_LOGIC;
    signal p_ZZ11llama_layerE13current_token_12_we1_local : STD_LOGIC;
    signal p_ZZ11llama_layerE13current_token_12_ce1_local : STD_LOGIC;
    signal p_ZZ11llama_layerE13current_token_11_we1_local : STD_LOGIC;
    signal p_ZZ11llama_layerE13current_token_11_ce1_local : STD_LOGIC;
    signal p_ZZ11llama_layerE13current_token_10_we1_local : STD_LOGIC;
    signal p_ZZ11llama_layerE13current_token_10_ce1_local : STD_LOGIC;
    signal current_token_27_we1_local : STD_LOGIC;
    signal current_token_27_ce1_local : STD_LOGIC;
    signal current_token_26_we1_local : STD_LOGIC;
    signal current_token_26_ce1_local : STD_LOGIC;
    signal current_token_25_we1_local : STD_LOGIC;
    signal current_token_25_ce1_local : STD_LOGIC;
    signal current_token_24_we1_local : STD_LOGIC;
    signal current_token_24_ce1_local : STD_LOGIC;
    signal current_token_23_we1_local : STD_LOGIC;
    signal current_token_23_ce1_local : STD_LOGIC;
    signal current_token_22_we1_local : STD_LOGIC;
    signal current_token_22_ce1_local : STD_LOGIC;
    signal current_token_21_we1_local : STD_LOGIC;
    signal current_token_21_ce1_local : STD_LOGIC;
    signal current_token_20_we1_local : STD_LOGIC;
    signal current_token_20_ce1_local : STD_LOGIC;
    signal current_token_19_we1_local : STD_LOGIC;
    signal current_token_19_ce1_local : STD_LOGIC;
    signal current_token_we1_local : STD_LOGIC;
    signal current_token_ce1_local : STD_LOGIC;
    signal p_ZZ11llama_layerE13current_token_15_we1_local : STD_LOGIC;
    signal p_ZZ11llama_layerE13current_token_15_ce1_local : STD_LOGIC;
    signal lshr_ln_fu_649_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_fu_782_p33 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal tmp_2_fu_782_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_782_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_782_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_782_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_782_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_782_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_782_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_782_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_782_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_782_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_782_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_782_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_782_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_782_p27 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_782_p29 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_782_p31 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component llama_layer_sparsemux_33_4_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (3 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (3 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (3 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (3 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (3 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (3 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (3 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (3 downto 0);
        din7_WIDTH : INTEGER;
        CASE8 : STD_LOGIC_VECTOR (3 downto 0);
        din8_WIDTH : INTEGER;
        CASE9 : STD_LOGIC_VECTOR (3 downto 0);
        din9_WIDTH : INTEGER;
        CASE10 : STD_LOGIC_VECTOR (3 downto 0);
        din10_WIDTH : INTEGER;
        CASE11 : STD_LOGIC_VECTOR (3 downto 0);
        din11_WIDTH : INTEGER;
        CASE12 : STD_LOGIC_VECTOR (3 downto 0);
        din12_WIDTH : INTEGER;
        CASE13 : STD_LOGIC_VECTOR (3 downto 0);
        din13_WIDTH : INTEGER;
        CASE14 : STD_LOGIC_VECTOR (3 downto 0);
        din14_WIDTH : INTEGER;
        CASE15 : STD_LOGIC_VECTOR (3 downto 0);
        din15_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        def : IN STD_LOGIC_VECTOR (31 downto 0);
        sel : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component llama_layer_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    sparsemux_33_4_32_1_1_U1236 : component llama_layer_sparsemux_33_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        CASE13 => "1101",
        din13_WIDTH => 32,
        CASE14 => "1110",
        din14_WIDTH => 32,
        CASE15 => "1111",
        din15_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => xb2_0_q0,
        din1 => xb2_1_q0,
        din2 => xb2_2_q0,
        din3 => xb2_3_q0,
        din4 => xb2_4_q0,
        din5 => xb2_5_q0,
        din6 => xb2_6_q0,
        din7 => xb2_7_q0,
        din8 => xb2_8_q0,
        din9 => xb2_9_q0,
        din10 => xb2_10_q0,
        din11 => xb2_11_q0,
        din12 => xb2_12_q0,
        din13 => xb2_13_q0,
        din14 => xb2_14_q0,
        din15 => xb2_15_q0,
        def => tmp_2_fu_782_p33,
        sel => trunc_ln165_reg_928,
        dout => tmp_2_fu_782_p35);

    flow_control_loop_pipe_sequential_init_U : component llama_layer_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    i_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln165_fu_639_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_fu_138 <= add_ln165_fu_633_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_138 <= ap_const_lv10_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                tmp_2_reg_1033 <= tmp_2_fu_782_p35;
                trunc_ln165_reg_928 <= trunc_ln165_fu_645_p1;
                trunc_ln165_reg_928_pp0_iter1_reg <= trunc_ln165_reg_928;
                    zext_ln165_reg_933(5 downto 0) <= zext_ln165_fu_659_p1(5 downto 0);
                    zext_ln165_reg_933_pp0_iter1_reg(5 downto 0) <= zext_ln165_reg_933(5 downto 0);
            end if;
        end if;
    end process;
    zext_ln165_reg_933(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln165_reg_933_pp0_iter1_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln165_fu_633_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_15) + unsigned(ap_const_lv10_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln165_fu_639_p2)
    begin
        if (((icmp_ln165_fu_639_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_15_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_fu_138, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_15 <= ap_const_lv10_0;
        else 
            ap_sig_allocacmp_i_15 <= i_fu_138;
        end if; 
    end process;

    current_token_19_address1 <= zext_ln165_reg_933_pp0_iter1_reg(6 - 1 downto 0);
    current_token_19_ce1 <= current_token_19_ce1_local;

    current_token_19_ce1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            current_token_19_ce1_local <= ap_const_logic_1;
        else 
            current_token_19_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    current_token_19_d1 <= tmp_2_reg_1033;
    current_token_19_we1 <= current_token_19_we1_local;

    current_token_19_we1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            current_token_19_we1_local <= ap_const_logic_1;
        else 
            current_token_19_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    current_token_20_address1 <= zext_ln165_reg_933_pp0_iter1_reg(6 - 1 downto 0);
    current_token_20_ce1 <= current_token_20_ce1_local;

    current_token_20_ce1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            current_token_20_ce1_local <= ap_const_logic_1;
        else 
            current_token_20_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    current_token_20_d1 <= tmp_2_reg_1033;
    current_token_20_we1 <= current_token_20_we1_local;

    current_token_20_we1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            current_token_20_we1_local <= ap_const_logic_1;
        else 
            current_token_20_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    current_token_21_address1 <= zext_ln165_reg_933_pp0_iter1_reg(6 - 1 downto 0);
    current_token_21_ce1 <= current_token_21_ce1_local;

    current_token_21_ce1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            current_token_21_ce1_local <= ap_const_logic_1;
        else 
            current_token_21_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    current_token_21_d1 <= tmp_2_reg_1033;
    current_token_21_we1 <= current_token_21_we1_local;

    current_token_21_we1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            current_token_21_we1_local <= ap_const_logic_1;
        else 
            current_token_21_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    current_token_22_address1 <= zext_ln165_reg_933_pp0_iter1_reg(6 - 1 downto 0);
    current_token_22_ce1 <= current_token_22_ce1_local;

    current_token_22_ce1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            current_token_22_ce1_local <= ap_const_logic_1;
        else 
            current_token_22_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    current_token_22_d1 <= tmp_2_reg_1033;
    current_token_22_we1 <= current_token_22_we1_local;

    current_token_22_we1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            current_token_22_we1_local <= ap_const_logic_1;
        else 
            current_token_22_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    current_token_23_address1 <= zext_ln165_reg_933_pp0_iter1_reg(6 - 1 downto 0);
    current_token_23_ce1 <= current_token_23_ce1_local;

    current_token_23_ce1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_5) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            current_token_23_ce1_local <= ap_const_logic_1;
        else 
            current_token_23_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    current_token_23_d1 <= tmp_2_reg_1033;
    current_token_23_we1 <= current_token_23_we1_local;

    current_token_23_we1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_5) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            current_token_23_we1_local <= ap_const_logic_1;
        else 
            current_token_23_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    current_token_24_address1 <= zext_ln165_reg_933_pp0_iter1_reg(6 - 1 downto 0);
    current_token_24_ce1 <= current_token_24_ce1_local;

    current_token_24_ce1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            current_token_24_ce1_local <= ap_const_logic_1;
        else 
            current_token_24_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    current_token_24_d1 <= tmp_2_reg_1033;
    current_token_24_we1 <= current_token_24_we1_local;

    current_token_24_we1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            current_token_24_we1_local <= ap_const_logic_1;
        else 
            current_token_24_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    current_token_25_address1 <= zext_ln165_reg_933_pp0_iter1_reg(6 - 1 downto 0);
    current_token_25_ce1 <= current_token_25_ce1_local;

    current_token_25_ce1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_7) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            current_token_25_ce1_local <= ap_const_logic_1;
        else 
            current_token_25_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    current_token_25_d1 <= tmp_2_reg_1033;
    current_token_25_we1 <= current_token_25_we1_local;

    current_token_25_we1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_7) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            current_token_25_we1_local <= ap_const_logic_1;
        else 
            current_token_25_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    current_token_26_address1 <= zext_ln165_reg_933_pp0_iter1_reg(6 - 1 downto 0);
    current_token_26_ce1 <= current_token_26_ce1_local;

    current_token_26_ce1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_8) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            current_token_26_ce1_local <= ap_const_logic_1;
        else 
            current_token_26_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    current_token_26_d1 <= tmp_2_reg_1033;
    current_token_26_we1 <= current_token_26_we1_local;

    current_token_26_we1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_8) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            current_token_26_we1_local <= ap_const_logic_1;
        else 
            current_token_26_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    current_token_27_address1 <= zext_ln165_reg_933_pp0_iter1_reg(6 - 1 downto 0);
    current_token_27_ce1 <= current_token_27_ce1_local;

    current_token_27_ce1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_9) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            current_token_27_ce1_local <= ap_const_logic_1;
        else 
            current_token_27_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    current_token_27_d1 <= tmp_2_reg_1033;
    current_token_27_we1 <= current_token_27_we1_local;

    current_token_27_we1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_9) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            current_token_27_we1_local <= ap_const_logic_1;
        else 
            current_token_27_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    current_token_address1 <= zext_ln165_reg_933_pp0_iter1_reg(6 - 1 downto 0);
    current_token_ce1 <= current_token_ce1_local;

    current_token_ce1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            current_token_ce1_local <= ap_const_logic_1;
        else 
            current_token_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    current_token_d1 <= tmp_2_reg_1033;
    current_token_we1 <= current_token_we1_local;

    current_token_we1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            current_token_we1_local <= ap_const_logic_1;
        else 
            current_token_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln165_fu_639_p2 <= "1" when (ap_sig_allocacmp_i_15 = ap_const_lv10_300) else "0";
    lshr_ln_fu_649_p4 <= ap_sig_allocacmp_i_15(9 downto 4);
    p_ZZ11llama_layerE13current_token_10_address1 <= zext_ln165_reg_933_pp0_iter1_reg(6 - 1 downto 0);
    p_ZZ11llama_layerE13current_token_10_ce1 <= p_ZZ11llama_layerE13current_token_10_ce1_local;

    p_ZZ11llama_layerE13current_token_10_ce1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_A) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11llama_layerE13current_token_10_ce1_local <= ap_const_logic_1;
        else 
            p_ZZ11llama_layerE13current_token_10_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11llama_layerE13current_token_10_d1 <= tmp_2_reg_1033;
    p_ZZ11llama_layerE13current_token_10_we1 <= p_ZZ11llama_layerE13current_token_10_we1_local;

    p_ZZ11llama_layerE13current_token_10_we1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_A) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11llama_layerE13current_token_10_we1_local <= ap_const_logic_1;
        else 
            p_ZZ11llama_layerE13current_token_10_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11llama_layerE13current_token_11_address1 <= zext_ln165_reg_933_pp0_iter1_reg(6 - 1 downto 0);
    p_ZZ11llama_layerE13current_token_11_ce1 <= p_ZZ11llama_layerE13current_token_11_ce1_local;

    p_ZZ11llama_layerE13current_token_11_ce1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_B) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11llama_layerE13current_token_11_ce1_local <= ap_const_logic_1;
        else 
            p_ZZ11llama_layerE13current_token_11_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11llama_layerE13current_token_11_d1 <= tmp_2_reg_1033;
    p_ZZ11llama_layerE13current_token_11_we1 <= p_ZZ11llama_layerE13current_token_11_we1_local;

    p_ZZ11llama_layerE13current_token_11_we1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_B) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11llama_layerE13current_token_11_we1_local <= ap_const_logic_1;
        else 
            p_ZZ11llama_layerE13current_token_11_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11llama_layerE13current_token_12_address1 <= zext_ln165_reg_933_pp0_iter1_reg(6 - 1 downto 0);
    p_ZZ11llama_layerE13current_token_12_ce1 <= p_ZZ11llama_layerE13current_token_12_ce1_local;

    p_ZZ11llama_layerE13current_token_12_ce1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_C) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11llama_layerE13current_token_12_ce1_local <= ap_const_logic_1;
        else 
            p_ZZ11llama_layerE13current_token_12_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11llama_layerE13current_token_12_d1 <= tmp_2_reg_1033;
    p_ZZ11llama_layerE13current_token_12_we1 <= p_ZZ11llama_layerE13current_token_12_we1_local;

    p_ZZ11llama_layerE13current_token_12_we1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_C) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11llama_layerE13current_token_12_we1_local <= ap_const_logic_1;
        else 
            p_ZZ11llama_layerE13current_token_12_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11llama_layerE13current_token_13_address1 <= zext_ln165_reg_933_pp0_iter1_reg(6 - 1 downto 0);
    p_ZZ11llama_layerE13current_token_13_ce1 <= p_ZZ11llama_layerE13current_token_13_ce1_local;

    p_ZZ11llama_layerE13current_token_13_ce1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_D) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11llama_layerE13current_token_13_ce1_local <= ap_const_logic_1;
        else 
            p_ZZ11llama_layerE13current_token_13_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11llama_layerE13current_token_13_d1 <= tmp_2_reg_1033;
    p_ZZ11llama_layerE13current_token_13_we1 <= p_ZZ11llama_layerE13current_token_13_we1_local;

    p_ZZ11llama_layerE13current_token_13_we1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_D) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11llama_layerE13current_token_13_we1_local <= ap_const_logic_1;
        else 
            p_ZZ11llama_layerE13current_token_13_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11llama_layerE13current_token_14_address1 <= zext_ln165_reg_933_pp0_iter1_reg(6 - 1 downto 0);
    p_ZZ11llama_layerE13current_token_14_ce1 <= p_ZZ11llama_layerE13current_token_14_ce1_local;

    p_ZZ11llama_layerE13current_token_14_ce1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_E) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11llama_layerE13current_token_14_ce1_local <= ap_const_logic_1;
        else 
            p_ZZ11llama_layerE13current_token_14_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11llama_layerE13current_token_14_d1 <= tmp_2_reg_1033;
    p_ZZ11llama_layerE13current_token_14_we1 <= p_ZZ11llama_layerE13current_token_14_we1_local;

    p_ZZ11llama_layerE13current_token_14_we1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_E) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11llama_layerE13current_token_14_we1_local <= ap_const_logic_1;
        else 
            p_ZZ11llama_layerE13current_token_14_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11llama_layerE13current_token_15_address1 <= zext_ln165_reg_933_pp0_iter1_reg(6 - 1 downto 0);
    p_ZZ11llama_layerE13current_token_15_ce1 <= p_ZZ11llama_layerE13current_token_15_ce1_local;

    p_ZZ11llama_layerE13current_token_15_ce1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_F) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11llama_layerE13current_token_15_ce1_local <= ap_const_logic_1;
        else 
            p_ZZ11llama_layerE13current_token_15_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11llama_layerE13current_token_15_d1 <= tmp_2_reg_1033;
    p_ZZ11llama_layerE13current_token_15_we1 <= p_ZZ11llama_layerE13current_token_15_we1_local;

    p_ZZ11llama_layerE13current_token_15_we1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln165_reg_928_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln165_reg_928_pp0_iter1_reg = ap_const_lv4_F) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ11llama_layerE13current_token_15_we1_local <= ap_const_logic_1;
        else 
            p_ZZ11llama_layerE13current_token_15_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    tmp_2_fu_782_p33 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    trunc_ln165_fu_645_p1 <= ap_sig_allocacmp_i_15(4 - 1 downto 0);
    xb2_0_address0 <= zext_ln165_fu_659_p1(6 - 1 downto 0);
    xb2_0_ce0 <= xb2_0_ce0_local;

    xb2_0_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln165_fu_639_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln165_fu_639_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            xb2_0_ce0_local <= ap_const_logic_1;
        else 
            xb2_0_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    xb2_10_address0 <= zext_ln165_fu_659_p1(6 - 1 downto 0);
    xb2_10_ce0 <= xb2_10_ce0_local;

    xb2_10_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln165_fu_639_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln165_fu_639_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            xb2_10_ce0_local <= ap_const_logic_1;
        else 
            xb2_10_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    xb2_11_address0 <= zext_ln165_fu_659_p1(6 - 1 downto 0);
    xb2_11_ce0 <= xb2_11_ce0_local;

    xb2_11_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln165_fu_639_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln165_fu_639_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            xb2_11_ce0_local <= ap_const_logic_1;
        else 
            xb2_11_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    xb2_12_address0 <= zext_ln165_fu_659_p1(6 - 1 downto 0);
    xb2_12_ce0 <= xb2_12_ce0_local;

    xb2_12_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln165_fu_639_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln165_fu_639_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            xb2_12_ce0_local <= ap_const_logic_1;
        else 
            xb2_12_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    xb2_13_address0 <= zext_ln165_fu_659_p1(6 - 1 downto 0);
    xb2_13_ce0 <= xb2_13_ce0_local;

    xb2_13_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln165_fu_639_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln165_fu_639_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            xb2_13_ce0_local <= ap_const_logic_1;
        else 
            xb2_13_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    xb2_14_address0 <= zext_ln165_fu_659_p1(6 - 1 downto 0);
    xb2_14_ce0 <= xb2_14_ce0_local;

    xb2_14_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln165_fu_639_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln165_fu_639_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            xb2_14_ce0_local <= ap_const_logic_1;
        else 
            xb2_14_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    xb2_15_address0 <= zext_ln165_fu_659_p1(6 - 1 downto 0);
    xb2_15_ce0 <= xb2_15_ce0_local;

    xb2_15_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln165_fu_639_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln165_fu_639_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            xb2_15_ce0_local <= ap_const_logic_1;
        else 
            xb2_15_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    xb2_1_address0 <= zext_ln165_fu_659_p1(6 - 1 downto 0);
    xb2_1_ce0 <= xb2_1_ce0_local;

    xb2_1_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln165_fu_639_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln165_fu_639_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            xb2_1_ce0_local <= ap_const_logic_1;
        else 
            xb2_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    xb2_2_address0 <= zext_ln165_fu_659_p1(6 - 1 downto 0);
    xb2_2_ce0 <= xb2_2_ce0_local;

    xb2_2_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln165_fu_639_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln165_fu_639_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            xb2_2_ce0_local <= ap_const_logic_1;
        else 
            xb2_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    xb2_3_address0 <= zext_ln165_fu_659_p1(6 - 1 downto 0);
    xb2_3_ce0 <= xb2_3_ce0_local;

    xb2_3_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln165_fu_639_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln165_fu_639_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            xb2_3_ce0_local <= ap_const_logic_1;
        else 
            xb2_3_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    xb2_4_address0 <= zext_ln165_fu_659_p1(6 - 1 downto 0);
    xb2_4_ce0 <= xb2_4_ce0_local;

    xb2_4_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln165_fu_639_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln165_fu_639_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            xb2_4_ce0_local <= ap_const_logic_1;
        else 
            xb2_4_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    xb2_5_address0 <= zext_ln165_fu_659_p1(6 - 1 downto 0);
    xb2_5_ce0 <= xb2_5_ce0_local;

    xb2_5_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln165_fu_639_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln165_fu_639_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            xb2_5_ce0_local <= ap_const_logic_1;
        else 
            xb2_5_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    xb2_6_address0 <= zext_ln165_fu_659_p1(6 - 1 downto 0);
    xb2_6_ce0 <= xb2_6_ce0_local;

    xb2_6_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln165_fu_639_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln165_fu_639_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            xb2_6_ce0_local <= ap_const_logic_1;
        else 
            xb2_6_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    xb2_7_address0 <= zext_ln165_fu_659_p1(6 - 1 downto 0);
    xb2_7_ce0 <= xb2_7_ce0_local;

    xb2_7_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln165_fu_639_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln165_fu_639_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            xb2_7_ce0_local <= ap_const_logic_1;
        else 
            xb2_7_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    xb2_8_address0 <= zext_ln165_fu_659_p1(6 - 1 downto 0);
    xb2_8_ce0 <= xb2_8_ce0_local;

    xb2_8_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln165_fu_639_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln165_fu_639_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            xb2_8_ce0_local <= ap_const_logic_1;
        else 
            xb2_8_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    xb2_9_address0 <= zext_ln165_fu_659_p1(6 - 1 downto 0);
    xb2_9_ce0 <= xb2_9_ce0_local;

    xb2_9_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln165_fu_639_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln165_fu_639_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            xb2_9_ce0_local <= ap_const_logic_1;
        else 
            xb2_9_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln165_fu_659_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_649_p4),64));
end behav;
