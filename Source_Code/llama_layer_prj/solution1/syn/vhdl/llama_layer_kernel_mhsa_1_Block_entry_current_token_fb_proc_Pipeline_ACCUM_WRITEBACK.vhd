-- ==============================================================
-- Generated by Vitis HLS v2025.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity llama_layer_kernel_mhsa_1_Block_entry_current_token_fb_proc_Pipeline_ACCUM_WRITEBACK is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    xb_15_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb_15_ce1 : OUT STD_LOGIC;
    xb_15_we1 : OUT STD_LOGIC;
    xb_15_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    xb_14_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb_14_ce1 : OUT STD_LOGIC;
    xb_14_we1 : OUT STD_LOGIC;
    xb_14_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    xb_13_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb_13_ce1 : OUT STD_LOGIC;
    xb_13_we1 : OUT STD_LOGIC;
    xb_13_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    xb_12_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb_12_ce1 : OUT STD_LOGIC;
    xb_12_we1 : OUT STD_LOGIC;
    xb_12_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    xb_11_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb_11_ce1 : OUT STD_LOGIC;
    xb_11_we1 : OUT STD_LOGIC;
    xb_11_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    xb_10_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb_10_ce1 : OUT STD_LOGIC;
    xb_10_we1 : OUT STD_LOGIC;
    xb_10_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    xb_9_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb_9_ce1 : OUT STD_LOGIC;
    xb_9_we1 : OUT STD_LOGIC;
    xb_9_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    xb_8_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb_8_ce1 : OUT STD_LOGIC;
    xb_8_we1 : OUT STD_LOGIC;
    xb_8_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    xb_7_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb_7_ce1 : OUT STD_LOGIC;
    xb_7_we1 : OUT STD_LOGIC;
    xb_7_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    xb_6_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb_6_ce1 : OUT STD_LOGIC;
    xb_6_we1 : OUT STD_LOGIC;
    xb_6_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    xb_5_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb_5_ce1 : OUT STD_LOGIC;
    xb_5_we1 : OUT STD_LOGIC;
    xb_5_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    xb_4_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb_4_ce1 : OUT STD_LOGIC;
    xb_4_we1 : OUT STD_LOGIC;
    xb_4_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    xb_3_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb_3_ce1 : OUT STD_LOGIC;
    xb_3_we1 : OUT STD_LOGIC;
    xb_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    xb_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb_2_ce1 : OUT STD_LOGIC;
    xb_2_we1 : OUT STD_LOGIC;
    xb_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    xb_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb_1_ce1 : OUT STD_LOGIC;
    xb_1_we1 : OUT STD_LOGIC;
    xb_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    xb_0_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    xb_0_ce1 : OUT STD_LOGIC;
    xb_0_we1 : OUT STD_LOGIC;
    xb_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    mux_case_0119786_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_4121788_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_8123790_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_12125792_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_16794_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_20796_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_24798_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_28800_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_32802_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_36804_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_40806_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_44808_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_48810_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_52812_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_56137814_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_60816_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    h_3 : IN STD_LOGIC_VECTOR (3 downto 0);
    mux_case_1140818_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_5142820_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_9144822_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_13146824_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_17826_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_21828_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_25830_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_29832_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_33834_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_37836_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_41838_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_45155840_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_49842_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_53844_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_57846_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_61848_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_2161850_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_6163852_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_10165854_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_14167856_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_18858_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_22860_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_26862_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_30864_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_34173866_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_38868_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_42870_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_46872_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_50874_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_54876_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_58878_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_62880_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_3182882_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_7184884_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_11186886_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_15188888_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_19890_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_23191892_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_27894_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_31896_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_35898_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_39900_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_43902_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_47904_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_51906_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_55908_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_59910_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0);
    mux_case_63912_i_i_i_i : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of llama_layer_kernel_mhsa_1_Block_entry_current_token_fb_proc_Pipeline_ACCUM_WRITEBACK is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal tmp_fu_936_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal zext_ln156_fu_1047_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_250 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal add_ln153_fu_1372_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_17 : STD_LOGIC_VECTOR (6 downto 0);
    signal xb_8_we1_local : STD_LOGIC;
    signal trunc_ln153_1_fu_948_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_7_fu_952_p35 : STD_LOGIC_VECTOR (31 downto 0);
    signal xb_8_ce1_local : STD_LOGIC;
    signal xb_9_we1_local : STD_LOGIC;
    signal tmp_8_fu_1067_p35 : STD_LOGIC_VECTOR (31 downto 0);
    signal xb_9_ce1_local : STD_LOGIC;
    signal xb_10_we1_local : STD_LOGIC;
    signal tmp_9_fu_1144_p35 : STD_LOGIC_VECTOR (31 downto 0);
    signal xb_10_ce1_local : STD_LOGIC;
    signal xb_11_we1_local : STD_LOGIC;
    signal tmp_1_fu_1221_p35 : STD_LOGIC_VECTOR (31 downto 0);
    signal xb_11_ce1_local : STD_LOGIC;
    signal xb_4_we1_local : STD_LOGIC;
    signal xb_4_ce1_local : STD_LOGIC;
    signal xb_5_we1_local : STD_LOGIC;
    signal xb_5_ce1_local : STD_LOGIC;
    signal xb_6_we1_local : STD_LOGIC;
    signal xb_6_ce1_local : STD_LOGIC;
    signal xb_7_we1_local : STD_LOGIC;
    signal xb_7_ce1_local : STD_LOGIC;
    signal xb_0_we1_local : STD_LOGIC;
    signal xb_0_ce1_local : STD_LOGIC;
    signal xb_1_we1_local : STD_LOGIC;
    signal xb_1_ce1_local : STD_LOGIC;
    signal xb_2_we1_local : STD_LOGIC;
    signal xb_2_ce1_local : STD_LOGIC;
    signal xb_3_we1_local : STD_LOGIC;
    signal xb_3_ce1_local : STD_LOGIC;
    signal xb_12_we1_local : STD_LOGIC;
    signal xb_12_ce1_local : STD_LOGIC;
    signal xb_13_we1_local : STD_LOGIC;
    signal xb_13_ce1_local : STD_LOGIC;
    signal xb_14_we1_local : STD_LOGIC;
    signal xb_14_ce1_local : STD_LOGIC;
    signal xb_15_we1_local : STD_LOGIC;
    signal xb_15_ce1_local : STD_LOGIC;
    signal tmp_7_fu_952_p33 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln153_fu_944_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln_fu_1029_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln4_fu_1039_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_1067_p33 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1144_p33 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_1221_p33 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal tmp_7_fu_952_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_952_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_952_p5 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_952_p7 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_952_p9 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_952_p11 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_952_p13 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_952_p15 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_952_p17 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_952_p19 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_952_p21 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_952_p23 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_952_p25 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_952_p27 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_952_p29 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_952_p31 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_1067_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_1067_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_1067_p5 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_1067_p7 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_1067_p9 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_1067_p11 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_1067_p13 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_1067_p15 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_1067_p17 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_1067_p19 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_1067_p21 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_1067_p23 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_1067_p25 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_1067_p27 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_1067_p29 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_1067_p31 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_fu_1144_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_fu_1144_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_fu_1144_p5 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_fu_1144_p7 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_fu_1144_p9 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_fu_1144_p11 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_fu_1144_p13 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_fu_1144_p15 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_fu_1144_p17 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_fu_1144_p19 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_fu_1144_p21 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_fu_1144_p23 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_fu_1144_p25 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_fu_1144_p27 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_fu_1144_p29 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_fu_1144_p31 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_1221_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_1221_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_1221_p5 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_1221_p7 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_1221_p9 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_1221_p11 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_1221_p13 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_1221_p15 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_1221_p17 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_1221_p19 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_1221_p21 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_1221_p23 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_1221_p25 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_1221_p27 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_1221_p29 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_1221_p31 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component llama_layer_sparsemux_33_6_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (5 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (5 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (5 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (5 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (5 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (5 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (5 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (5 downto 0);
        din7_WIDTH : INTEGER;
        CASE8 : STD_LOGIC_VECTOR (5 downto 0);
        din8_WIDTH : INTEGER;
        CASE9 : STD_LOGIC_VECTOR (5 downto 0);
        din9_WIDTH : INTEGER;
        CASE10 : STD_LOGIC_VECTOR (5 downto 0);
        din10_WIDTH : INTEGER;
        CASE11 : STD_LOGIC_VECTOR (5 downto 0);
        din11_WIDTH : INTEGER;
        CASE12 : STD_LOGIC_VECTOR (5 downto 0);
        din12_WIDTH : INTEGER;
        CASE13 : STD_LOGIC_VECTOR (5 downto 0);
        din13_WIDTH : INTEGER;
        CASE14 : STD_LOGIC_VECTOR (5 downto 0);
        din14_WIDTH : INTEGER;
        CASE15 : STD_LOGIC_VECTOR (5 downto 0);
        din15_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        def : IN STD_LOGIC_VECTOR (31 downto 0);
        sel : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component llama_layer_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    sparsemux_33_6_32_1_1_U1034 : component llama_layer_sparsemux_33_6_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "000000",
        din0_WIDTH => 32,
        CASE1 => "000100",
        din1_WIDTH => 32,
        CASE2 => "001000",
        din2_WIDTH => 32,
        CASE3 => "001100",
        din3_WIDTH => 32,
        CASE4 => "010000",
        din4_WIDTH => 32,
        CASE5 => "010100",
        din5_WIDTH => 32,
        CASE6 => "011000",
        din6_WIDTH => 32,
        CASE7 => "011100",
        din7_WIDTH => 32,
        CASE8 => "100000",
        din8_WIDTH => 32,
        CASE9 => "100100",
        din9_WIDTH => 32,
        CASE10 => "101000",
        din10_WIDTH => 32,
        CASE11 => "101100",
        din11_WIDTH => 32,
        CASE12 => "110000",
        din12_WIDTH => 32,
        CASE13 => "110100",
        din13_WIDTH => 32,
        CASE14 => "111000",
        din14_WIDTH => 32,
        CASE15 => "111100",
        din15_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => mux_case_0119786_i_i_i_i,
        din1 => mux_case_4121788_i_i_i_i,
        din2 => mux_case_8123790_i_i_i_i,
        din3 => mux_case_12125792_i_i_i_i,
        din4 => mux_case_16794_i_i_i_i,
        din5 => mux_case_20796_i_i_i_i,
        din6 => mux_case_24798_i_i_i_i,
        din7 => mux_case_28800_i_i_i_i,
        din8 => mux_case_32802_i_i_i_i,
        din9 => mux_case_36804_i_i_i_i,
        din10 => mux_case_40806_i_i_i_i,
        din11 => mux_case_44808_i_i_i_i,
        din12 => mux_case_48810_i_i_i_i,
        din13 => mux_case_52812_i_i_i_i,
        din14 => mux_case_56137814_i_i_i_i,
        din15 => mux_case_60816_i_i_i_i,
        def => tmp_7_fu_952_p33,
        sel => trunc_ln153_fu_944_p1,
        dout => tmp_7_fu_952_p35);

    sparsemux_33_6_32_1_1_U1035 : component llama_layer_sparsemux_33_6_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "000000",
        din0_WIDTH => 32,
        CASE1 => "000100",
        din1_WIDTH => 32,
        CASE2 => "001000",
        din2_WIDTH => 32,
        CASE3 => "001100",
        din3_WIDTH => 32,
        CASE4 => "010000",
        din4_WIDTH => 32,
        CASE5 => "010100",
        din5_WIDTH => 32,
        CASE6 => "011000",
        din6_WIDTH => 32,
        CASE7 => "011100",
        din7_WIDTH => 32,
        CASE8 => "100000",
        din8_WIDTH => 32,
        CASE9 => "100100",
        din9_WIDTH => 32,
        CASE10 => "101000",
        din10_WIDTH => 32,
        CASE11 => "101100",
        din11_WIDTH => 32,
        CASE12 => "110000",
        din12_WIDTH => 32,
        CASE13 => "110100",
        din13_WIDTH => 32,
        CASE14 => "111000",
        din14_WIDTH => 32,
        CASE15 => "111100",
        din15_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => mux_case_1140818_i_i_i_i,
        din1 => mux_case_5142820_i_i_i_i,
        din2 => mux_case_9144822_i_i_i_i,
        din3 => mux_case_13146824_i_i_i_i,
        din4 => mux_case_17826_i_i_i_i,
        din5 => mux_case_21828_i_i_i_i,
        din6 => mux_case_25830_i_i_i_i,
        din7 => mux_case_29832_i_i_i_i,
        din8 => mux_case_33834_i_i_i_i,
        din9 => mux_case_37836_i_i_i_i,
        din10 => mux_case_41838_i_i_i_i,
        din11 => mux_case_45155840_i_i_i_i,
        din12 => mux_case_49842_i_i_i_i,
        din13 => mux_case_53844_i_i_i_i,
        din14 => mux_case_57846_i_i_i_i,
        din15 => mux_case_61848_i_i_i_i,
        def => tmp_8_fu_1067_p33,
        sel => trunc_ln153_fu_944_p1,
        dout => tmp_8_fu_1067_p35);

    sparsemux_33_6_32_1_1_U1036 : component llama_layer_sparsemux_33_6_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "000000",
        din0_WIDTH => 32,
        CASE1 => "000100",
        din1_WIDTH => 32,
        CASE2 => "001000",
        din2_WIDTH => 32,
        CASE3 => "001100",
        din3_WIDTH => 32,
        CASE4 => "010000",
        din4_WIDTH => 32,
        CASE5 => "010100",
        din5_WIDTH => 32,
        CASE6 => "011000",
        din6_WIDTH => 32,
        CASE7 => "011100",
        din7_WIDTH => 32,
        CASE8 => "100000",
        din8_WIDTH => 32,
        CASE9 => "100100",
        din9_WIDTH => 32,
        CASE10 => "101000",
        din10_WIDTH => 32,
        CASE11 => "101100",
        din11_WIDTH => 32,
        CASE12 => "110000",
        din12_WIDTH => 32,
        CASE13 => "110100",
        din13_WIDTH => 32,
        CASE14 => "111000",
        din14_WIDTH => 32,
        CASE15 => "111100",
        din15_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => mux_case_2161850_i_i_i_i,
        din1 => mux_case_6163852_i_i_i_i,
        din2 => mux_case_10165854_i_i_i_i,
        din3 => mux_case_14167856_i_i_i_i,
        din4 => mux_case_18858_i_i_i_i,
        din5 => mux_case_22860_i_i_i_i,
        din6 => mux_case_26862_i_i_i_i,
        din7 => mux_case_30864_i_i_i_i,
        din8 => mux_case_34173866_i_i_i_i,
        din9 => mux_case_38868_i_i_i_i,
        din10 => mux_case_42870_i_i_i_i,
        din11 => mux_case_46872_i_i_i_i,
        din12 => mux_case_50874_i_i_i_i,
        din13 => mux_case_54876_i_i_i_i,
        din14 => mux_case_58878_i_i_i_i,
        din15 => mux_case_62880_i_i_i_i,
        def => tmp_9_fu_1144_p33,
        sel => trunc_ln153_fu_944_p1,
        dout => tmp_9_fu_1144_p35);

    sparsemux_33_6_32_1_1_U1037 : component llama_layer_sparsemux_33_6_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "000000",
        din0_WIDTH => 32,
        CASE1 => "000100",
        din1_WIDTH => 32,
        CASE2 => "001000",
        din2_WIDTH => 32,
        CASE3 => "001100",
        din3_WIDTH => 32,
        CASE4 => "010000",
        din4_WIDTH => 32,
        CASE5 => "010100",
        din5_WIDTH => 32,
        CASE6 => "011000",
        din6_WIDTH => 32,
        CASE7 => "011100",
        din7_WIDTH => 32,
        CASE8 => "100000",
        din8_WIDTH => 32,
        CASE9 => "100100",
        din9_WIDTH => 32,
        CASE10 => "101000",
        din10_WIDTH => 32,
        CASE11 => "101100",
        din11_WIDTH => 32,
        CASE12 => "110000",
        din12_WIDTH => 32,
        CASE13 => "110100",
        din13_WIDTH => 32,
        CASE14 => "111000",
        din14_WIDTH => 32,
        CASE15 => "111100",
        din15_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => mux_case_3182882_i_i_i_i,
        din1 => mux_case_7184884_i_i_i_i,
        din2 => mux_case_11186886_i_i_i_i,
        din3 => mux_case_15188888_i_i_i_i,
        din4 => mux_case_19890_i_i_i_i,
        din5 => mux_case_23191892_i_i_i_i,
        din6 => mux_case_27894_i_i_i_i,
        din7 => mux_case_31896_i_i_i_i,
        din8 => mux_case_35898_i_i_i_i,
        din9 => mux_case_39900_i_i_i_i,
        din10 => mux_case_43902_i_i_i_i,
        din11 => mux_case_47904_i_i_i_i,
        din12 => mux_case_51906_i_i_i_i,
        din13 => mux_case_55908_i_i_i_i,
        din14 => mux_case_59910_i_i_i_i,
        din15 => mux_case_63912_i_i_i_i,
        def => tmp_1_fu_1221_p33,
        sel => trunc_ln153_fu_944_p1,
        dout => tmp_1_fu_1221_p35);

    flow_control_loop_pipe_sequential_init_U : component llama_layer_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    i_fu_250_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if ((tmp_fu_936_p3 = ap_const_lv1_0)) then 
                    i_fu_250 <= add_ln153_fu_1372_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_250 <= ap_const_lv7_0;
                end if;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln153_fu_1372_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_17) + unsigned(ap_const_lv7_4));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1_pp0_stage0_iter0)
    begin
        if ((ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start_int)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start_int = ap_const_logic_0);
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3)
    begin
        if (((tmp_fu_936_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_17_assign_proc : process(ap_CS_fsm_state1, i_fu_250, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_i_17 <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_i_17 <= i_fu_250;
        end if; 
    end process;

    lshr_ln_fu_1029_p4 <= ap_sig_allocacmp_i_17(5 downto 4);
    or_ln4_fu_1039_p3 <= (h_3 & lshr_ln_fu_1029_p4);
    tmp_1_fu_1221_p33 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_7_fu_952_p33 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_8_fu_1067_p33 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_9_fu_1144_p33 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_fu_936_p3 <= ap_sig_allocacmp_i_17(6 downto 6);
    trunc_ln153_1_fu_948_p1 <= ap_sig_allocacmp_i_17(4 - 1 downto 0);
    trunc_ln153_fu_944_p1 <= ap_sig_allocacmp_i_17(6 - 1 downto 0);
    xb_0_address1 <= zext_ln156_fu_1047_p1(6 - 1 downto 0);
    xb_0_ce1 <= xb_0_ce1_local;

    xb_0_ce1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if (((trunc_ln153_1_fu_948_p1 = ap_const_lv4_0) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_0_ce1_local <= ap_const_logic_1;
        else 
            xb_0_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_0_d1 <= tmp_7_fu_952_p35;
    xb_0_we1 <= xb_0_we1_local;

    xb_0_we1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if (((trunc_ln153_1_fu_948_p1 = ap_const_lv4_0) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_0_we1_local <= ap_const_logic_1;
        else 
            xb_0_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_10_address1 <= zext_ln156_fu_1047_p1(6 - 1 downto 0);
    xb_10_ce1 <= xb_10_ce1_local;

    xb_10_ce1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if (((trunc_ln153_1_fu_948_p1 = ap_const_lv4_8) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_10_ce1_local <= ap_const_logic_1;
        else 
            xb_10_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_10_d1 <= tmp_9_fu_1144_p35;
    xb_10_we1 <= xb_10_we1_local;

    xb_10_we1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if (((trunc_ln153_1_fu_948_p1 = ap_const_lv4_8) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_10_we1_local <= ap_const_logic_1;
        else 
            xb_10_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_11_address1 <= zext_ln156_fu_1047_p1(6 - 1 downto 0);
    xb_11_ce1 <= xb_11_ce1_local;

    xb_11_ce1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if (((trunc_ln153_1_fu_948_p1 = ap_const_lv4_8) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_11_ce1_local <= ap_const_logic_1;
        else 
            xb_11_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_11_d1 <= tmp_1_fu_1221_p35;
    xb_11_we1 <= xb_11_we1_local;

    xb_11_we1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if (((trunc_ln153_1_fu_948_p1 = ap_const_lv4_8) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_11_we1_local <= ap_const_logic_1;
        else 
            xb_11_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_12_address1 <= zext_ln156_fu_1047_p1(6 - 1 downto 0);
    xb_12_ce1 <= xb_12_ce1_local;

    xb_12_ce1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if ((not((trunc_ln153_1_fu_948_p1 = ap_const_lv4_0)) and not((trunc_ln153_1_fu_948_p1 = ap_const_lv4_4)) and not((trunc_ln153_1_fu_948_p1 = ap_const_lv4_8)) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_12_ce1_local <= ap_const_logic_1;
        else 
            xb_12_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_12_d1 <= tmp_7_fu_952_p35;
    xb_12_we1 <= xb_12_we1_local;

    xb_12_we1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if ((not((trunc_ln153_1_fu_948_p1 = ap_const_lv4_0)) and not((trunc_ln153_1_fu_948_p1 = ap_const_lv4_4)) and not((trunc_ln153_1_fu_948_p1 = ap_const_lv4_8)) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_12_we1_local <= ap_const_logic_1;
        else 
            xb_12_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_13_address1 <= zext_ln156_fu_1047_p1(6 - 1 downto 0);
    xb_13_ce1 <= xb_13_ce1_local;

    xb_13_ce1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if ((not((trunc_ln153_1_fu_948_p1 = ap_const_lv4_0)) and not((trunc_ln153_1_fu_948_p1 = ap_const_lv4_4)) and not((trunc_ln153_1_fu_948_p1 = ap_const_lv4_8)) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_13_ce1_local <= ap_const_logic_1;
        else 
            xb_13_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_13_d1 <= tmp_8_fu_1067_p35;
    xb_13_we1 <= xb_13_we1_local;

    xb_13_we1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if ((not((trunc_ln153_1_fu_948_p1 = ap_const_lv4_0)) and not((trunc_ln153_1_fu_948_p1 = ap_const_lv4_4)) and not((trunc_ln153_1_fu_948_p1 = ap_const_lv4_8)) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_13_we1_local <= ap_const_logic_1;
        else 
            xb_13_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_14_address1 <= zext_ln156_fu_1047_p1(6 - 1 downto 0);
    xb_14_ce1 <= xb_14_ce1_local;

    xb_14_ce1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if ((not((trunc_ln153_1_fu_948_p1 = ap_const_lv4_0)) and not((trunc_ln153_1_fu_948_p1 = ap_const_lv4_4)) and not((trunc_ln153_1_fu_948_p1 = ap_const_lv4_8)) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_14_ce1_local <= ap_const_logic_1;
        else 
            xb_14_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_14_d1 <= tmp_9_fu_1144_p35;
    xb_14_we1 <= xb_14_we1_local;

    xb_14_we1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if ((not((trunc_ln153_1_fu_948_p1 = ap_const_lv4_0)) and not((trunc_ln153_1_fu_948_p1 = ap_const_lv4_4)) and not((trunc_ln153_1_fu_948_p1 = ap_const_lv4_8)) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_14_we1_local <= ap_const_logic_1;
        else 
            xb_14_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_15_address1 <= zext_ln156_fu_1047_p1(6 - 1 downto 0);
    xb_15_ce1 <= xb_15_ce1_local;

    xb_15_ce1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if ((not((trunc_ln153_1_fu_948_p1 = ap_const_lv4_0)) and not((trunc_ln153_1_fu_948_p1 = ap_const_lv4_4)) and not((trunc_ln153_1_fu_948_p1 = ap_const_lv4_8)) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_15_ce1_local <= ap_const_logic_1;
        else 
            xb_15_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_15_d1 <= tmp_1_fu_1221_p35;
    xb_15_we1 <= xb_15_we1_local;

    xb_15_we1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if ((not((trunc_ln153_1_fu_948_p1 = ap_const_lv4_0)) and not((trunc_ln153_1_fu_948_p1 = ap_const_lv4_4)) and not((trunc_ln153_1_fu_948_p1 = ap_const_lv4_8)) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_15_we1_local <= ap_const_logic_1;
        else 
            xb_15_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_1_address1 <= zext_ln156_fu_1047_p1(6 - 1 downto 0);
    xb_1_ce1 <= xb_1_ce1_local;

    xb_1_ce1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if (((trunc_ln153_1_fu_948_p1 = ap_const_lv4_0) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_1_ce1_local <= ap_const_logic_1;
        else 
            xb_1_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_1_d1 <= tmp_8_fu_1067_p35;
    xb_1_we1 <= xb_1_we1_local;

    xb_1_we1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if (((trunc_ln153_1_fu_948_p1 = ap_const_lv4_0) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_1_we1_local <= ap_const_logic_1;
        else 
            xb_1_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_2_address1 <= zext_ln156_fu_1047_p1(6 - 1 downto 0);
    xb_2_ce1 <= xb_2_ce1_local;

    xb_2_ce1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if (((trunc_ln153_1_fu_948_p1 = ap_const_lv4_0) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_2_ce1_local <= ap_const_logic_1;
        else 
            xb_2_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_2_d1 <= tmp_9_fu_1144_p35;
    xb_2_we1 <= xb_2_we1_local;

    xb_2_we1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if (((trunc_ln153_1_fu_948_p1 = ap_const_lv4_0) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_2_we1_local <= ap_const_logic_1;
        else 
            xb_2_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_3_address1 <= zext_ln156_fu_1047_p1(6 - 1 downto 0);
    xb_3_ce1 <= xb_3_ce1_local;

    xb_3_ce1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if (((trunc_ln153_1_fu_948_p1 = ap_const_lv4_0) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_3_ce1_local <= ap_const_logic_1;
        else 
            xb_3_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_3_d1 <= tmp_1_fu_1221_p35;
    xb_3_we1 <= xb_3_we1_local;

    xb_3_we1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if (((trunc_ln153_1_fu_948_p1 = ap_const_lv4_0) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_3_we1_local <= ap_const_logic_1;
        else 
            xb_3_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_4_address1 <= zext_ln156_fu_1047_p1(6 - 1 downto 0);
    xb_4_ce1 <= xb_4_ce1_local;

    xb_4_ce1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if (((trunc_ln153_1_fu_948_p1 = ap_const_lv4_4) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_4_ce1_local <= ap_const_logic_1;
        else 
            xb_4_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_4_d1 <= tmp_7_fu_952_p35;
    xb_4_we1 <= xb_4_we1_local;

    xb_4_we1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if (((trunc_ln153_1_fu_948_p1 = ap_const_lv4_4) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_4_we1_local <= ap_const_logic_1;
        else 
            xb_4_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_5_address1 <= zext_ln156_fu_1047_p1(6 - 1 downto 0);
    xb_5_ce1 <= xb_5_ce1_local;

    xb_5_ce1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if (((trunc_ln153_1_fu_948_p1 = ap_const_lv4_4) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_5_ce1_local <= ap_const_logic_1;
        else 
            xb_5_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_5_d1 <= tmp_8_fu_1067_p35;
    xb_5_we1 <= xb_5_we1_local;

    xb_5_we1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if (((trunc_ln153_1_fu_948_p1 = ap_const_lv4_4) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_5_we1_local <= ap_const_logic_1;
        else 
            xb_5_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_6_address1 <= zext_ln156_fu_1047_p1(6 - 1 downto 0);
    xb_6_ce1 <= xb_6_ce1_local;

    xb_6_ce1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if (((trunc_ln153_1_fu_948_p1 = ap_const_lv4_4) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_6_ce1_local <= ap_const_logic_1;
        else 
            xb_6_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_6_d1 <= tmp_9_fu_1144_p35;
    xb_6_we1 <= xb_6_we1_local;

    xb_6_we1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if (((trunc_ln153_1_fu_948_p1 = ap_const_lv4_4) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_6_we1_local <= ap_const_logic_1;
        else 
            xb_6_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_7_address1 <= zext_ln156_fu_1047_p1(6 - 1 downto 0);
    xb_7_ce1 <= xb_7_ce1_local;

    xb_7_ce1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if (((trunc_ln153_1_fu_948_p1 = ap_const_lv4_4) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_7_ce1_local <= ap_const_logic_1;
        else 
            xb_7_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_7_d1 <= tmp_1_fu_1221_p35;
    xb_7_we1 <= xb_7_we1_local;

    xb_7_we1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if (((trunc_ln153_1_fu_948_p1 = ap_const_lv4_4) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_7_we1_local <= ap_const_logic_1;
        else 
            xb_7_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_8_address1 <= zext_ln156_fu_1047_p1(6 - 1 downto 0);
    xb_8_ce1 <= xb_8_ce1_local;

    xb_8_ce1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if (((trunc_ln153_1_fu_948_p1 = ap_const_lv4_8) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_8_ce1_local <= ap_const_logic_1;
        else 
            xb_8_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_8_d1 <= tmp_7_fu_952_p35;
    xb_8_we1 <= xb_8_we1_local;

    xb_8_we1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if (((trunc_ln153_1_fu_948_p1 = ap_const_lv4_8) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_8_we1_local <= ap_const_logic_1;
        else 
            xb_8_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_9_address1 <= zext_ln156_fu_1047_p1(6 - 1 downto 0);
    xb_9_ce1 <= xb_9_ce1_local;

    xb_9_ce1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if (((trunc_ln153_1_fu_948_p1 = ap_const_lv4_8) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_9_ce1_local <= ap_const_logic_1;
        else 
            xb_9_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    xb_9_d1 <= tmp_8_fu_1067_p35;
    xb_9_we1 <= xb_9_we1_local;

    xb_9_we1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, tmp_fu_936_p3, trunc_ln153_1_fu_948_p1)
    begin
        if (((trunc_ln153_1_fu_948_p1 = ap_const_lv4_8) and (tmp_fu_936_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            xb_9_we1_local <= ap_const_logic_1;
        else 
            xb_9_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln156_fu_1047_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln4_fu_1039_p3),64));
end behav;
