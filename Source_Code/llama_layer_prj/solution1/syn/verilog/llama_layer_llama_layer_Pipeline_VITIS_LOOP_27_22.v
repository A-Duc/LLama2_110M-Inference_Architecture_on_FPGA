// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module llama_layer_llama_layer_Pipeline_VITIS_LOOP_27_22 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem2_0_AWVALID,
        m_axi_gmem2_0_AWREADY,
        m_axi_gmem2_0_AWADDR,
        m_axi_gmem2_0_AWID,
        m_axi_gmem2_0_AWLEN,
        m_axi_gmem2_0_AWSIZE,
        m_axi_gmem2_0_AWBURST,
        m_axi_gmem2_0_AWLOCK,
        m_axi_gmem2_0_AWCACHE,
        m_axi_gmem2_0_AWPROT,
        m_axi_gmem2_0_AWQOS,
        m_axi_gmem2_0_AWREGION,
        m_axi_gmem2_0_AWUSER,
        m_axi_gmem2_0_WVALID,
        m_axi_gmem2_0_WREADY,
        m_axi_gmem2_0_WDATA,
        m_axi_gmem2_0_WSTRB,
        m_axi_gmem2_0_WLAST,
        m_axi_gmem2_0_WID,
        m_axi_gmem2_0_WUSER,
        m_axi_gmem2_0_ARVALID,
        m_axi_gmem2_0_ARREADY,
        m_axi_gmem2_0_ARADDR,
        m_axi_gmem2_0_ARID,
        m_axi_gmem2_0_ARLEN,
        m_axi_gmem2_0_ARSIZE,
        m_axi_gmem2_0_ARBURST,
        m_axi_gmem2_0_ARLOCK,
        m_axi_gmem2_0_ARCACHE,
        m_axi_gmem2_0_ARPROT,
        m_axi_gmem2_0_ARQOS,
        m_axi_gmem2_0_ARREGION,
        m_axi_gmem2_0_ARUSER,
        m_axi_gmem2_0_RVALID,
        m_axi_gmem2_0_RREADY,
        m_axi_gmem2_0_RDATA,
        m_axi_gmem2_0_RLAST,
        m_axi_gmem2_0_RID,
        m_axi_gmem2_0_RFIFONUM,
        m_axi_gmem2_0_RUSER,
        m_axi_gmem2_0_RRESP,
        m_axi_gmem2_0_BVALID,
        m_axi_gmem2_0_BREADY,
        m_axi_gmem2_0_BRESP,
        m_axi_gmem2_0_BID,
        m_axi_gmem2_0_BUSER,
        sext_ln27_2,
        norm_2,
        ffn_input_address0,
        ffn_input_ce0,
        ffn_input_we0,
        ffn_input_d0,
        layer_output_address0,
        layer_output_ce0,
        layer_output_q0,
        layer_output_28_address0,
        layer_output_28_ce0,
        layer_output_28_q0,
        layer_output_29_address0,
        layer_output_29_ce0,
        layer_output_29_q0,
        layer_output_30_address0,
        layer_output_30_ce0,
        layer_output_30_q0,
        layer_output_31_address0,
        layer_output_31_ce0,
        layer_output_31_q0,
        layer_output_32_address0,
        layer_output_32_ce0,
        layer_output_32_q0,
        layer_output_33_address0,
        layer_output_33_ce0,
        layer_output_33_q0,
        layer_output_34_address0,
        layer_output_34_ce0,
        layer_output_34_q0,
        ffn_input_44_address0,
        ffn_input_44_ce0,
        ffn_input_44_we0,
        ffn_input_44_d0,
        ffn_input_45_address0,
        ffn_input_45_ce0,
        ffn_input_45_we0,
        ffn_input_45_d0,
        ffn_input_46_address0,
        ffn_input_46_ce0,
        ffn_input_46_we0,
        ffn_input_46_d0,
        ffn_input_47_address0,
        ffn_input_47_ce0,
        ffn_input_47_we0,
        ffn_input_47_d0,
        ffn_input_48_address0,
        ffn_input_48_ce0,
        ffn_input_48_we0,
        ffn_input_48_d0,
        ffn_input_49_address0,
        ffn_input_49_ce0,
        ffn_input_49_we0,
        ffn_input_49_d0,
        ffn_input_50_address0,
        ffn_input_50_ce0,
        ffn_input_50_we0,
        ffn_input_50_d0,
        grp_fu_1690_p_din0,
        grp_fu_1690_p_din1,
        grp_fu_1690_p_dout0,
        grp_fu_1694_p_din0,
        grp_fu_1694_p_din1,
        grp_fu_1694_p_dout0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem2_0_AWVALID;
input   m_axi_gmem2_0_AWREADY;
output  [63:0] m_axi_gmem2_0_AWADDR;
output  [0:0] m_axi_gmem2_0_AWID;
output  [31:0] m_axi_gmem2_0_AWLEN;
output  [2:0] m_axi_gmem2_0_AWSIZE;
output  [1:0] m_axi_gmem2_0_AWBURST;
output  [1:0] m_axi_gmem2_0_AWLOCK;
output  [3:0] m_axi_gmem2_0_AWCACHE;
output  [2:0] m_axi_gmem2_0_AWPROT;
output  [3:0] m_axi_gmem2_0_AWQOS;
output  [3:0] m_axi_gmem2_0_AWREGION;
output  [0:0] m_axi_gmem2_0_AWUSER;
output   m_axi_gmem2_0_WVALID;
input   m_axi_gmem2_0_WREADY;
output  [31:0] m_axi_gmem2_0_WDATA;
output  [3:0] m_axi_gmem2_0_WSTRB;
output   m_axi_gmem2_0_WLAST;
output  [0:0] m_axi_gmem2_0_WID;
output  [0:0] m_axi_gmem2_0_WUSER;
output   m_axi_gmem2_0_ARVALID;
input   m_axi_gmem2_0_ARREADY;
output  [63:0] m_axi_gmem2_0_ARADDR;
output  [0:0] m_axi_gmem2_0_ARID;
output  [31:0] m_axi_gmem2_0_ARLEN;
output  [2:0] m_axi_gmem2_0_ARSIZE;
output  [1:0] m_axi_gmem2_0_ARBURST;
output  [1:0] m_axi_gmem2_0_ARLOCK;
output  [3:0] m_axi_gmem2_0_ARCACHE;
output  [2:0] m_axi_gmem2_0_ARPROT;
output  [3:0] m_axi_gmem2_0_ARQOS;
output  [3:0] m_axi_gmem2_0_ARREGION;
output  [0:0] m_axi_gmem2_0_ARUSER;
input   m_axi_gmem2_0_RVALID;
output   m_axi_gmem2_0_RREADY;
input  [31:0] m_axi_gmem2_0_RDATA;
input   m_axi_gmem2_0_RLAST;
input  [0:0] m_axi_gmem2_0_RID;
input  [12:0] m_axi_gmem2_0_RFIFONUM;
input  [0:0] m_axi_gmem2_0_RUSER;
input  [1:0] m_axi_gmem2_0_RRESP;
input   m_axi_gmem2_0_BVALID;
output   m_axi_gmem2_0_BREADY;
input  [1:0] m_axi_gmem2_0_BRESP;
input  [0:0] m_axi_gmem2_0_BID;
input  [0:0] m_axi_gmem2_0_BUSER;
input  [61:0] sext_ln27_2;
input  [31:0] norm_2;
output  [6:0] ffn_input_address0;
output   ffn_input_ce0;
output   ffn_input_we0;
output  [31:0] ffn_input_d0;
output  [6:0] layer_output_address0;
output   layer_output_ce0;
input  [31:0] layer_output_q0;
output  [6:0] layer_output_28_address0;
output   layer_output_28_ce0;
input  [31:0] layer_output_28_q0;
output  [6:0] layer_output_29_address0;
output   layer_output_29_ce0;
input  [31:0] layer_output_29_q0;
output  [6:0] layer_output_30_address0;
output   layer_output_30_ce0;
input  [31:0] layer_output_30_q0;
output  [6:0] layer_output_31_address0;
output   layer_output_31_ce0;
input  [31:0] layer_output_31_q0;
output  [6:0] layer_output_32_address0;
output   layer_output_32_ce0;
input  [31:0] layer_output_32_q0;
output  [6:0] layer_output_33_address0;
output   layer_output_33_ce0;
input  [31:0] layer_output_33_q0;
output  [6:0] layer_output_34_address0;
output   layer_output_34_ce0;
input  [31:0] layer_output_34_q0;
output  [6:0] ffn_input_44_address0;
output   ffn_input_44_ce0;
output   ffn_input_44_we0;
output  [31:0] ffn_input_44_d0;
output  [6:0] ffn_input_45_address0;
output   ffn_input_45_ce0;
output   ffn_input_45_we0;
output  [31:0] ffn_input_45_d0;
output  [6:0] ffn_input_46_address0;
output   ffn_input_46_ce0;
output   ffn_input_46_we0;
output  [31:0] ffn_input_46_d0;
output  [6:0] ffn_input_47_address0;
output   ffn_input_47_ce0;
output   ffn_input_47_we0;
output  [31:0] ffn_input_47_d0;
output  [6:0] ffn_input_48_address0;
output   ffn_input_48_ce0;
output   ffn_input_48_we0;
output  [31:0] ffn_input_48_d0;
output  [6:0] ffn_input_49_address0;
output   ffn_input_49_ce0;
output   ffn_input_49_we0;
output  [31:0] ffn_input_49_d0;
output  [6:0] ffn_input_50_address0;
output   ffn_input_50_ce0;
output   ffn_input_50_we0;
output  [31:0] ffn_input_50_d0;
output  [31:0] grp_fu_1690_p_din0;
output  [31:0] grp_fu_1690_p_din1;
input  [31:0] grp_fu_1690_p_dout0;
output  [31:0] grp_fu_1694_p_din0;
output  [31:0] grp_fu_1694_p_din1;
input  [31:0] grp_fu_1694_p_dout0;

reg ap_idle;
reg m_axi_gmem2_0_RREADY;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln27_fu_360_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem2_blk_n_R;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [2:0] trunc_ln27_fu_366_p1;
reg   [2:0] trunc_ln27_reg_566;
reg   [2:0] trunc_ln27_reg_566_pp0_iter1_reg;
reg   [2:0] trunc_ln27_reg_566_pp0_iter2_reg;
reg   [2:0] trunc_ln27_reg_566_pp0_iter3_reg;
reg   [2:0] trunc_ln27_reg_566_pp0_iter4_reg;
reg   [6:0] ffn_input_addr_reg_611;
reg   [6:0] ffn_input_addr_reg_611_pp0_iter1_reg;
reg   [6:0] ffn_input_addr_reg_611_pp0_iter2_reg;
reg   [6:0] ffn_input_addr_reg_611_pp0_iter3_reg;
reg   [6:0] ffn_input_addr_reg_611_pp0_iter4_reg;
reg   [6:0] ffn_input_44_addr_reg_617;
reg   [6:0] ffn_input_44_addr_reg_617_pp0_iter1_reg;
reg   [6:0] ffn_input_44_addr_reg_617_pp0_iter2_reg;
reg   [6:0] ffn_input_44_addr_reg_617_pp0_iter3_reg;
reg   [6:0] ffn_input_44_addr_reg_617_pp0_iter4_reg;
reg   [6:0] ffn_input_45_addr_reg_623;
reg   [6:0] ffn_input_45_addr_reg_623_pp0_iter1_reg;
reg   [6:0] ffn_input_45_addr_reg_623_pp0_iter2_reg;
reg   [6:0] ffn_input_45_addr_reg_623_pp0_iter3_reg;
reg   [6:0] ffn_input_45_addr_reg_623_pp0_iter4_reg;
reg   [6:0] ffn_input_46_addr_reg_629;
reg   [6:0] ffn_input_46_addr_reg_629_pp0_iter1_reg;
reg   [6:0] ffn_input_46_addr_reg_629_pp0_iter2_reg;
reg   [6:0] ffn_input_46_addr_reg_629_pp0_iter3_reg;
reg   [6:0] ffn_input_46_addr_reg_629_pp0_iter4_reg;
reg   [6:0] ffn_input_47_addr_reg_635;
reg   [6:0] ffn_input_47_addr_reg_635_pp0_iter1_reg;
reg   [6:0] ffn_input_47_addr_reg_635_pp0_iter2_reg;
reg   [6:0] ffn_input_47_addr_reg_635_pp0_iter3_reg;
reg   [6:0] ffn_input_47_addr_reg_635_pp0_iter4_reg;
reg   [6:0] ffn_input_48_addr_reg_641;
reg   [6:0] ffn_input_48_addr_reg_641_pp0_iter1_reg;
reg   [6:0] ffn_input_48_addr_reg_641_pp0_iter2_reg;
reg   [6:0] ffn_input_48_addr_reg_641_pp0_iter3_reg;
reg   [6:0] ffn_input_48_addr_reg_641_pp0_iter4_reg;
reg   [6:0] ffn_input_49_addr_reg_647;
reg   [6:0] ffn_input_49_addr_reg_647_pp0_iter1_reg;
reg   [6:0] ffn_input_49_addr_reg_647_pp0_iter2_reg;
reg   [6:0] ffn_input_49_addr_reg_647_pp0_iter3_reg;
reg   [6:0] ffn_input_49_addr_reg_647_pp0_iter4_reg;
reg   [6:0] ffn_input_50_addr_reg_653;
reg   [6:0] ffn_input_50_addr_reg_653_pp0_iter1_reg;
reg   [6:0] ffn_input_50_addr_reg_653_pp0_iter2_reg;
reg   [6:0] ffn_input_50_addr_reg_653_pp0_iter3_reg;
reg   [6:0] ffn_input_50_addr_reg_653_pp0_iter4_reg;
wire   [31:0] tmp_7_fu_455_p19;
reg   [31:0] mul10_i2_reg_664;
wire   [31:0] bitcast_ln28_fu_509_p1;
reg   [31:0] mul13_i2_reg_675;
wire   [63:0] zext_ln27_2_fu_380_p1;
reg   [9:0] i_8_fu_110;
wire   [9:0] add_ln27_fu_354_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_i;
reg    layer_output_ce0_local;
reg    layer_output_28_ce0_local;
reg    layer_output_29_ce0_local;
reg    layer_output_30_ce0_local;
reg    layer_output_31_ce0_local;
reg    layer_output_32_ce0_local;
reg    layer_output_33_ce0_local;
reg    layer_output_34_ce0_local;
reg    ffn_input_49_we0_local;
wire    ap_block_pp0_stage0_11001_grp0;
reg    ap_block_pp0_stage0_subdone_grp0_done_reg;
wire    ap_block_pp0_stage0_subdone_grp0;
wire    ap_block_pp0_stage0_grp0;
reg    ffn_input_49_ce0_local;
reg    ffn_input_48_we0_local;
reg    ffn_input_48_ce0_local;
reg    ffn_input_47_we0_local;
reg    ffn_input_47_ce0_local;
reg    ffn_input_46_we0_local;
reg    ffn_input_46_ce0_local;
reg    ffn_input_45_we0_local;
reg    ffn_input_45_ce0_local;
reg    ffn_input_44_we0_local;
reg    ffn_input_44_ce0_local;
reg    ffn_input_we0_local;
reg    ffn_input_ce0_local;
reg    ffn_input_50_we0_local;
reg    ffn_input_50_ce0_local;
reg   [31:0] grp_fu_331_p0;
reg   [31:0] grp_fu_331_p0_keep;
reg   [31:0] grp_fu_331_p1;
reg   [31:0] grp_fu_331_p1_keep;
reg   [31:0] grp_fu_335_p0;
reg   [31:0] grp_fu_335_p0_keep;
reg   [31:0] grp_fu_335_p1;
reg   [31:0] grp_fu_335_p1_keep;
wire   [6:0] lshr_ln27_2_fu_370_p4;
wire   [31:0] tmp_7_fu_455_p17;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [2:0] tmp_7_fu_455_p1;
wire   [2:0] tmp_7_fu_455_p3;
wire   [2:0] tmp_7_fu_455_p5;
wire   [2:0] tmp_7_fu_455_p7;
wire  signed [2:0] tmp_7_fu_455_p9;
wire  signed [2:0] tmp_7_fu_455_p11;
wire  signed [2:0] tmp_7_fu_455_p13;
wire  signed [2:0] tmp_7_fu_455_p15;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 i_8_fu_110 = 10'd0;
#0 ap_block_pp0_stage0_subdone_grp0_done_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

(* dissolve_hierarchy = "yes" *) llama_layer_sparsemux_17_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 3'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 3'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 3'h7 ),
    .din7_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
sparsemux_17_3_32_1_1_U1399(
    .din0(layer_output_q0),
    .din1(layer_output_28_q0),
    .din2(layer_output_29_q0),
    .din3(layer_output_30_q0),
    .din4(layer_output_31_q0),
    .din5(layer_output_32_q0),
    .din6(layer_output_33_q0),
    .din7(layer_output_34_q0),
    .def(tmp_7_fu_455_p17),
    .sel(trunc_ln27_reg_566),
    .dout(tmp_7_fu_455_p19)
);

llama_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp0)) begin
            ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter4_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln27_fu_360_p2 == 1'd0))) begin
            i_8_fu_110 <= add_ln27_fu_354_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_8_fu_110 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ffn_input_44_addr_reg_617 <= zext_ln27_2_fu_380_p1;
        ffn_input_44_addr_reg_617_pp0_iter1_reg <= ffn_input_44_addr_reg_617;
        ffn_input_45_addr_reg_623 <= zext_ln27_2_fu_380_p1;
        ffn_input_45_addr_reg_623_pp0_iter1_reg <= ffn_input_45_addr_reg_623;
        ffn_input_46_addr_reg_629 <= zext_ln27_2_fu_380_p1;
        ffn_input_46_addr_reg_629_pp0_iter1_reg <= ffn_input_46_addr_reg_629;
        ffn_input_47_addr_reg_635 <= zext_ln27_2_fu_380_p1;
        ffn_input_47_addr_reg_635_pp0_iter1_reg <= ffn_input_47_addr_reg_635;
        ffn_input_48_addr_reg_641 <= zext_ln27_2_fu_380_p1;
        ffn_input_48_addr_reg_641_pp0_iter1_reg <= ffn_input_48_addr_reg_641;
        ffn_input_49_addr_reg_647 <= zext_ln27_2_fu_380_p1;
        ffn_input_49_addr_reg_647_pp0_iter1_reg <= ffn_input_49_addr_reg_647;
        ffn_input_50_addr_reg_653 <= zext_ln27_2_fu_380_p1;
        ffn_input_50_addr_reg_653_pp0_iter1_reg <= ffn_input_50_addr_reg_653;
        ffn_input_addr_reg_611 <= zext_ln27_2_fu_380_p1;
        ffn_input_addr_reg_611_pp0_iter1_reg <= ffn_input_addr_reg_611;
        trunc_ln27_reg_566 <= trunc_ln27_fu_366_p1;
        trunc_ln27_reg_566_pp0_iter1_reg <= trunc_ln27_reg_566;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ffn_input_44_addr_reg_617_pp0_iter2_reg <= ffn_input_44_addr_reg_617_pp0_iter1_reg;
        ffn_input_44_addr_reg_617_pp0_iter3_reg <= ffn_input_44_addr_reg_617_pp0_iter2_reg;
        ffn_input_44_addr_reg_617_pp0_iter4_reg <= ffn_input_44_addr_reg_617_pp0_iter3_reg;
        ffn_input_45_addr_reg_623_pp0_iter2_reg <= ffn_input_45_addr_reg_623_pp0_iter1_reg;
        ffn_input_45_addr_reg_623_pp0_iter3_reg <= ffn_input_45_addr_reg_623_pp0_iter2_reg;
        ffn_input_45_addr_reg_623_pp0_iter4_reg <= ffn_input_45_addr_reg_623_pp0_iter3_reg;
        ffn_input_46_addr_reg_629_pp0_iter2_reg <= ffn_input_46_addr_reg_629_pp0_iter1_reg;
        ffn_input_46_addr_reg_629_pp0_iter3_reg <= ffn_input_46_addr_reg_629_pp0_iter2_reg;
        ffn_input_46_addr_reg_629_pp0_iter4_reg <= ffn_input_46_addr_reg_629_pp0_iter3_reg;
        ffn_input_47_addr_reg_635_pp0_iter2_reg <= ffn_input_47_addr_reg_635_pp0_iter1_reg;
        ffn_input_47_addr_reg_635_pp0_iter3_reg <= ffn_input_47_addr_reg_635_pp0_iter2_reg;
        ffn_input_47_addr_reg_635_pp0_iter4_reg <= ffn_input_47_addr_reg_635_pp0_iter3_reg;
        ffn_input_48_addr_reg_641_pp0_iter2_reg <= ffn_input_48_addr_reg_641_pp0_iter1_reg;
        ffn_input_48_addr_reg_641_pp0_iter3_reg <= ffn_input_48_addr_reg_641_pp0_iter2_reg;
        ffn_input_48_addr_reg_641_pp0_iter4_reg <= ffn_input_48_addr_reg_641_pp0_iter3_reg;
        ffn_input_49_addr_reg_647_pp0_iter2_reg <= ffn_input_49_addr_reg_647_pp0_iter1_reg;
        ffn_input_49_addr_reg_647_pp0_iter3_reg <= ffn_input_49_addr_reg_647_pp0_iter2_reg;
        ffn_input_49_addr_reg_647_pp0_iter4_reg <= ffn_input_49_addr_reg_647_pp0_iter3_reg;
        ffn_input_50_addr_reg_653_pp0_iter2_reg <= ffn_input_50_addr_reg_653_pp0_iter1_reg;
        ffn_input_50_addr_reg_653_pp0_iter3_reg <= ffn_input_50_addr_reg_653_pp0_iter2_reg;
        ffn_input_50_addr_reg_653_pp0_iter4_reg <= ffn_input_50_addr_reg_653_pp0_iter3_reg;
        ffn_input_addr_reg_611_pp0_iter2_reg <= ffn_input_addr_reg_611_pp0_iter1_reg;
        ffn_input_addr_reg_611_pp0_iter3_reg <= ffn_input_addr_reg_611_pp0_iter2_reg;
        ffn_input_addr_reg_611_pp0_iter4_reg <= ffn_input_addr_reg_611_pp0_iter3_reg;
        mul10_i2_reg_664 <= grp_fu_1690_p_dout0;
        mul13_i2_reg_675 <= grp_fu_1694_p_dout0;
        trunc_ln27_reg_566_pp0_iter2_reg <= trunc_ln27_reg_566_pp0_iter1_reg;
        trunc_ln27_reg_566_pp0_iter3_reg <= trunc_ln27_reg_566_pp0_iter2_reg;
        trunc_ln27_reg_566_pp0_iter4_reg <= trunc_ln27_reg_566_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_331_p0_keep <= tmp_7_fu_455_p19;
        grp_fu_331_p1_keep <= norm_2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_335_p0_keep <= mul10_i2_reg_664;
        grp_fu_335_p1_keep <= bitcast_ln28_fu_509_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln27_fu_360_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter4_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i = 10'd0;
    end else begin
        ap_sig_allocacmp_i = i_8_fu_110;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (trunc_ln27_reg_566_pp0_iter4_reg == 3'd1) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        ffn_input_44_ce0_local = 1'b1;
    end else begin
        ffn_input_44_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (trunc_ln27_reg_566_pp0_iter4_reg == 3'd1) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        ffn_input_44_we0_local = 1'b1;
    end else begin
        ffn_input_44_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (trunc_ln27_reg_566_pp0_iter4_reg == 3'd2) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        ffn_input_45_ce0_local = 1'b1;
    end else begin
        ffn_input_45_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (trunc_ln27_reg_566_pp0_iter4_reg == 3'd2) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        ffn_input_45_we0_local = 1'b1;
    end else begin
        ffn_input_45_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (trunc_ln27_reg_566_pp0_iter4_reg == 3'd3) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        ffn_input_46_ce0_local = 1'b1;
    end else begin
        ffn_input_46_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (trunc_ln27_reg_566_pp0_iter4_reg == 3'd3) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        ffn_input_46_we0_local = 1'b1;
    end else begin
        ffn_input_46_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (trunc_ln27_reg_566_pp0_iter4_reg == 3'd4) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        ffn_input_47_ce0_local = 1'b1;
    end else begin
        ffn_input_47_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (trunc_ln27_reg_566_pp0_iter4_reg == 3'd4) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        ffn_input_47_we0_local = 1'b1;
    end else begin
        ffn_input_47_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (trunc_ln27_reg_566_pp0_iter4_reg == 3'd5) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        ffn_input_48_ce0_local = 1'b1;
    end else begin
        ffn_input_48_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (trunc_ln27_reg_566_pp0_iter4_reg == 3'd5) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        ffn_input_48_we0_local = 1'b1;
    end else begin
        ffn_input_48_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (trunc_ln27_reg_566_pp0_iter4_reg == 3'd6) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        ffn_input_49_ce0_local = 1'b1;
    end else begin
        ffn_input_49_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (trunc_ln27_reg_566_pp0_iter4_reg == 3'd6) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        ffn_input_49_we0_local = 1'b1;
    end else begin
        ffn_input_49_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (trunc_ln27_reg_566_pp0_iter4_reg == 3'd7) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        ffn_input_50_ce0_local = 1'b1;
    end else begin
        ffn_input_50_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (trunc_ln27_reg_566_pp0_iter4_reg == 3'd7) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        ffn_input_50_we0_local = 1'b1;
    end else begin
        ffn_input_50_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (trunc_ln27_reg_566_pp0_iter4_reg == 3'd0) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        ffn_input_ce0_local = 1'b1;
    end else begin
        ffn_input_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (trunc_ln27_reg_566_pp0_iter4_reg == 3'd0) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        ffn_input_we0_local = 1'b1;
    end else begin
        ffn_input_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        gmem2_blk_n_R = m_axi_gmem2_0_RVALID;
    end else begin
        gmem2_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_331_p0 = tmp_7_fu_455_p19;
    end else begin
        grp_fu_331_p0 = grp_fu_331_p0_keep;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_331_p1 = norm_2;
    end else begin
        grp_fu_331_p1 = grp_fu_331_p1_keep;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_335_p0 = mul10_i2_reg_664;
    end else begin
        grp_fu_335_p0 = grp_fu_335_p0_keep;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_335_p1 = bitcast_ln28_fu_509_p1;
    end else begin
        grp_fu_335_p1 = grp_fu_335_p1_keep;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln27_fu_360_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer_output_28_ce0_local = 1'b1;
    end else begin
        layer_output_28_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln27_fu_360_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer_output_29_ce0_local = 1'b1;
    end else begin
        layer_output_29_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln27_fu_360_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer_output_30_ce0_local = 1'b1;
    end else begin
        layer_output_30_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln27_fu_360_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer_output_31_ce0_local = 1'b1;
    end else begin
        layer_output_31_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln27_fu_360_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer_output_32_ce0_local = 1'b1;
    end else begin
        layer_output_32_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln27_fu_360_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer_output_33_ce0_local = 1'b1;
    end else begin
        layer_output_33_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln27_fu_360_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer_output_34_ce0_local = 1'b1;
    end else begin
        layer_output_34_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln27_fu_360_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        layer_output_ce0_local = 1'b1;
    end else begin
        layer_output_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem2_0_RREADY = 1'b1;
    end else begin
        m_axi_gmem2_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln27_fu_354_p2 = (ap_sig_allocacmp_i + 10'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3));
end

assign ap_block_pp0_stage0_11001_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3));
end

assign ap_block_pp0_stage0_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = (m_axi_gmem2_0_RVALID == 1'b0);
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign bitcast_ln28_fu_509_p1 = m_axi_gmem2_0_RDATA;

assign ffn_input_44_address0 = ffn_input_44_addr_reg_617_pp0_iter4_reg;

assign ffn_input_44_ce0 = ffn_input_44_ce0_local;

assign ffn_input_44_d0 = mul13_i2_reg_675;

assign ffn_input_44_we0 = ffn_input_44_we0_local;

assign ffn_input_45_address0 = ffn_input_45_addr_reg_623_pp0_iter4_reg;

assign ffn_input_45_ce0 = ffn_input_45_ce0_local;

assign ffn_input_45_d0 = mul13_i2_reg_675;

assign ffn_input_45_we0 = ffn_input_45_we0_local;

assign ffn_input_46_address0 = ffn_input_46_addr_reg_629_pp0_iter4_reg;

assign ffn_input_46_ce0 = ffn_input_46_ce0_local;

assign ffn_input_46_d0 = mul13_i2_reg_675;

assign ffn_input_46_we0 = ffn_input_46_we0_local;

assign ffn_input_47_address0 = ffn_input_47_addr_reg_635_pp0_iter4_reg;

assign ffn_input_47_ce0 = ffn_input_47_ce0_local;

assign ffn_input_47_d0 = mul13_i2_reg_675;

assign ffn_input_47_we0 = ffn_input_47_we0_local;

assign ffn_input_48_address0 = ffn_input_48_addr_reg_641_pp0_iter4_reg;

assign ffn_input_48_ce0 = ffn_input_48_ce0_local;

assign ffn_input_48_d0 = mul13_i2_reg_675;

assign ffn_input_48_we0 = ffn_input_48_we0_local;

assign ffn_input_49_address0 = ffn_input_49_addr_reg_647_pp0_iter4_reg;

assign ffn_input_49_ce0 = ffn_input_49_ce0_local;

assign ffn_input_49_d0 = mul13_i2_reg_675;

assign ffn_input_49_we0 = ffn_input_49_we0_local;

assign ffn_input_50_address0 = ffn_input_50_addr_reg_653_pp0_iter4_reg;

assign ffn_input_50_ce0 = ffn_input_50_ce0_local;

assign ffn_input_50_d0 = mul13_i2_reg_675;

assign ffn_input_50_we0 = ffn_input_50_we0_local;

assign ffn_input_address0 = ffn_input_addr_reg_611_pp0_iter4_reg;

assign ffn_input_ce0 = ffn_input_ce0_local;

assign ffn_input_d0 = mul13_i2_reg_675;

assign ffn_input_we0 = ffn_input_we0_local;

assign grp_fu_1690_p_din0 = grp_fu_331_p0;

assign grp_fu_1690_p_din1 = grp_fu_331_p1;

assign grp_fu_1694_p_din0 = grp_fu_335_p0;

assign grp_fu_1694_p_din1 = grp_fu_335_p1;

assign icmp_ln27_fu_360_p2 = ((ap_sig_allocacmp_i == 10'd768) ? 1'b1 : 1'b0);

assign layer_output_28_address0 = zext_ln27_2_fu_380_p1;

assign layer_output_28_ce0 = layer_output_28_ce0_local;

assign layer_output_29_address0 = zext_ln27_2_fu_380_p1;

assign layer_output_29_ce0 = layer_output_29_ce0_local;

assign layer_output_30_address0 = zext_ln27_2_fu_380_p1;

assign layer_output_30_ce0 = layer_output_30_ce0_local;

assign layer_output_31_address0 = zext_ln27_2_fu_380_p1;

assign layer_output_31_ce0 = layer_output_31_ce0_local;

assign layer_output_32_address0 = zext_ln27_2_fu_380_p1;

assign layer_output_32_ce0 = layer_output_32_ce0_local;

assign layer_output_33_address0 = zext_ln27_2_fu_380_p1;

assign layer_output_33_ce0 = layer_output_33_ce0_local;

assign layer_output_34_address0 = zext_ln27_2_fu_380_p1;

assign layer_output_34_ce0 = layer_output_34_ce0_local;

assign layer_output_address0 = zext_ln27_2_fu_380_p1;

assign layer_output_ce0 = layer_output_ce0_local;

assign lshr_ln27_2_fu_370_p4 = {{ap_sig_allocacmp_i[9:3]}};

assign m_axi_gmem2_0_ARADDR = 64'd0;

assign m_axi_gmem2_0_ARBURST = 2'd0;

assign m_axi_gmem2_0_ARCACHE = 4'd0;

assign m_axi_gmem2_0_ARID = 1'd0;

assign m_axi_gmem2_0_ARLEN = 32'd0;

assign m_axi_gmem2_0_ARLOCK = 2'd0;

assign m_axi_gmem2_0_ARPROT = 3'd0;

assign m_axi_gmem2_0_ARQOS = 4'd0;

assign m_axi_gmem2_0_ARREGION = 4'd0;

assign m_axi_gmem2_0_ARSIZE = 3'd0;

assign m_axi_gmem2_0_ARUSER = 1'd0;

assign m_axi_gmem2_0_ARVALID = 1'b0;

assign m_axi_gmem2_0_AWADDR = 64'd0;

assign m_axi_gmem2_0_AWBURST = 2'd0;

assign m_axi_gmem2_0_AWCACHE = 4'd0;

assign m_axi_gmem2_0_AWID = 1'd0;

assign m_axi_gmem2_0_AWLEN = 32'd0;

assign m_axi_gmem2_0_AWLOCK = 2'd0;

assign m_axi_gmem2_0_AWPROT = 3'd0;

assign m_axi_gmem2_0_AWQOS = 4'd0;

assign m_axi_gmem2_0_AWREGION = 4'd0;

assign m_axi_gmem2_0_AWSIZE = 3'd0;

assign m_axi_gmem2_0_AWUSER = 1'd0;

assign m_axi_gmem2_0_AWVALID = 1'b0;

assign m_axi_gmem2_0_BREADY = 1'b0;

assign m_axi_gmem2_0_WDATA = 32'd0;

assign m_axi_gmem2_0_WID = 1'd0;

assign m_axi_gmem2_0_WLAST = 1'b0;

assign m_axi_gmem2_0_WSTRB = 4'd0;

assign m_axi_gmem2_0_WUSER = 1'd0;

assign m_axi_gmem2_0_WVALID = 1'b0;

assign tmp_7_fu_455_p17 = 'bx;

assign trunc_ln27_fu_366_p1 = ap_sig_allocacmp_i[2:0];

assign zext_ln27_2_fu_380_p1 = lshr_ln27_2_fu_370_p4;

endmodule //llama_layer_llama_layer_Pipeline_VITIS_LOOP_27_22
