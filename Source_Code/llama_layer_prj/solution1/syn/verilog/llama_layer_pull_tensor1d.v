// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module llama_layer_pull_tensor1d (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        res_strm_dout,
        res_strm_empty_n,
        res_strm_read,
        res_strm_num_data_valid,
        res_strm_fifo_cap,
        p_ZZ11llama_layerE11norm_output_10_address1,
        p_ZZ11llama_layerE11norm_output_10_ce1,
        p_ZZ11llama_layerE11norm_output_10_we1,
        p_ZZ11llama_layerE11norm_output_10_d1,
        p_ZZ11llama_layerE11norm_output_11_address1,
        p_ZZ11llama_layerE11norm_output_11_ce1,
        p_ZZ11llama_layerE11norm_output_11_we1,
        p_ZZ11llama_layerE11norm_output_11_d1,
        p_ZZ11llama_layerE11norm_output_12_address1,
        p_ZZ11llama_layerE11norm_output_12_ce1,
        p_ZZ11llama_layerE11norm_output_12_we1,
        p_ZZ11llama_layerE11norm_output_12_d1,
        p_ZZ11llama_layerE11norm_output_13_address1,
        p_ZZ11llama_layerE11norm_output_13_ce1,
        p_ZZ11llama_layerE11norm_output_13_we1,
        p_ZZ11llama_layerE11norm_output_13_d1,
        p_ZZ11llama_layerE11norm_output_14_address1,
        p_ZZ11llama_layerE11norm_output_14_ce1,
        p_ZZ11llama_layerE11norm_output_14_we1,
        p_ZZ11llama_layerE11norm_output_14_d1,
        p_ZZ11llama_layerE11norm_output_15_address1,
        p_ZZ11llama_layerE11norm_output_15_ce1,
        p_ZZ11llama_layerE11norm_output_15_we1,
        p_ZZ11llama_layerE11norm_output_15_d1,
        norm_output_address1,
        norm_output_ce1,
        norm_output_we1,
        norm_output_d1,
        norm_output_35_address1,
        norm_output_35_ce1,
        norm_output_35_we1,
        norm_output_35_d1,
        norm_output_36_address1,
        norm_output_36_ce1,
        norm_output_36_we1,
        norm_output_36_d1,
        norm_output_37_address1,
        norm_output_37_ce1,
        norm_output_37_we1,
        norm_output_37_d1,
        norm_output_38_address1,
        norm_output_38_ce1,
        norm_output_38_we1,
        norm_output_38_d1,
        norm_output_39_address1,
        norm_output_39_ce1,
        norm_output_39_we1,
        norm_output_39_d1,
        norm_output_40_address1,
        norm_output_40_ce1,
        norm_output_40_we1,
        norm_output_40_d1,
        norm_output_41_address1,
        norm_output_41_ce1,
        norm_output_41_we1,
        norm_output_41_d1,
        norm_output_42_address1,
        norm_output_42_ce1,
        norm_output_42_we1,
        norm_output_42_d1,
        norm_output_43_address1,
        norm_output_43_ce1,
        norm_output_43_we1,
        norm_output_43_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] res_strm_dout;
input   res_strm_empty_n;
output   res_strm_read;
input  [6:0] res_strm_num_data_valid;
input  [6:0] res_strm_fifo_cap;
output  [5:0] p_ZZ11llama_layerE11norm_output_10_address1;
output   p_ZZ11llama_layerE11norm_output_10_ce1;
output   p_ZZ11llama_layerE11norm_output_10_we1;
output  [31:0] p_ZZ11llama_layerE11norm_output_10_d1;
output  [5:0] p_ZZ11llama_layerE11norm_output_11_address1;
output   p_ZZ11llama_layerE11norm_output_11_ce1;
output   p_ZZ11llama_layerE11norm_output_11_we1;
output  [31:0] p_ZZ11llama_layerE11norm_output_11_d1;
output  [5:0] p_ZZ11llama_layerE11norm_output_12_address1;
output   p_ZZ11llama_layerE11norm_output_12_ce1;
output   p_ZZ11llama_layerE11norm_output_12_we1;
output  [31:0] p_ZZ11llama_layerE11norm_output_12_d1;
output  [5:0] p_ZZ11llama_layerE11norm_output_13_address1;
output   p_ZZ11llama_layerE11norm_output_13_ce1;
output   p_ZZ11llama_layerE11norm_output_13_we1;
output  [31:0] p_ZZ11llama_layerE11norm_output_13_d1;
output  [5:0] p_ZZ11llama_layerE11norm_output_14_address1;
output   p_ZZ11llama_layerE11norm_output_14_ce1;
output   p_ZZ11llama_layerE11norm_output_14_we1;
output  [31:0] p_ZZ11llama_layerE11norm_output_14_d1;
output  [5:0] p_ZZ11llama_layerE11norm_output_15_address1;
output   p_ZZ11llama_layerE11norm_output_15_ce1;
output   p_ZZ11llama_layerE11norm_output_15_we1;
output  [31:0] p_ZZ11llama_layerE11norm_output_15_d1;
output  [5:0] norm_output_address1;
output   norm_output_ce1;
output   norm_output_we1;
output  [31:0] norm_output_d1;
output  [5:0] norm_output_35_address1;
output   norm_output_35_ce1;
output   norm_output_35_we1;
output  [31:0] norm_output_35_d1;
output  [5:0] norm_output_36_address1;
output   norm_output_36_ce1;
output   norm_output_36_we1;
output  [31:0] norm_output_36_d1;
output  [5:0] norm_output_37_address1;
output   norm_output_37_ce1;
output   norm_output_37_we1;
output  [31:0] norm_output_37_d1;
output  [5:0] norm_output_38_address1;
output   norm_output_38_ce1;
output   norm_output_38_we1;
output  [31:0] norm_output_38_d1;
output  [5:0] norm_output_39_address1;
output   norm_output_39_ce1;
output   norm_output_39_we1;
output  [31:0] norm_output_39_d1;
output  [5:0] norm_output_40_address1;
output   norm_output_40_ce1;
output   norm_output_40_we1;
output  [31:0] norm_output_40_d1;
output  [5:0] norm_output_41_address1;
output   norm_output_41_ce1;
output   norm_output_41_we1;
output  [31:0] norm_output_41_d1;
output  [5:0] norm_output_42_address1;
output   norm_output_42_ce1;
output   norm_output_42_we1;
output  [31:0] norm_output_42_d1;
output  [5:0] norm_output_43_address1;
output   norm_output_43_ce1;
output   norm_output_43_we1;
output  [31:0] norm_output_43_d1;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln18_fu_441_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    res_strm_blk_n;
wire    ap_block_pp0_stage0_grp1;
wire   [3:0] trunc_ln18_fu_447_p1;
reg   [3:0] trunc_ln18_reg_616;
reg    ap_block_pp0_stage0_11001;
reg   [5:0] lshr_ln_reg_620;
wire   [63:0] zext_ln18_fu_500_p1;
reg   [9:0] i_fu_142;
wire   [9:0] add_ln18_fu_435_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_i_3;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001_grp1;
reg    res_strm_read_local;
reg    p_ZZ11llama_layerE11norm_output_14_we1_local;
wire   [31:0] bitcast_ln20_fu_521_p1;
reg    p_ZZ11llama_layerE11norm_output_14_ce1_local;
reg    p_ZZ11llama_layerE11norm_output_13_we1_local;
reg    p_ZZ11llama_layerE11norm_output_13_ce1_local;
reg    p_ZZ11llama_layerE11norm_output_12_we1_local;
reg    p_ZZ11llama_layerE11norm_output_12_ce1_local;
reg    p_ZZ11llama_layerE11norm_output_11_we1_local;
reg    p_ZZ11llama_layerE11norm_output_11_ce1_local;
reg    p_ZZ11llama_layerE11norm_output_10_we1_local;
reg    p_ZZ11llama_layerE11norm_output_10_ce1_local;
reg    norm_output_43_we1_local;
reg    norm_output_43_ce1_local;
reg    norm_output_42_we1_local;
reg    norm_output_42_ce1_local;
reg    norm_output_41_we1_local;
reg    norm_output_41_ce1_local;
reg    norm_output_40_we1_local;
reg    norm_output_40_ce1_local;
reg    norm_output_39_we1_local;
reg    norm_output_39_ce1_local;
reg    norm_output_38_we1_local;
reg    norm_output_38_ce1_local;
reg    norm_output_37_we1_local;
reg    norm_output_37_ce1_local;
reg    norm_output_36_we1_local;
reg    norm_output_36_ce1_local;
reg    norm_output_35_we1_local;
reg    norm_output_35_ce1_local;
reg    norm_output_we1_local;
reg    norm_output_ce1_local;
reg    p_ZZ11llama_layerE11norm_output_15_we1_local;
reg    p_ZZ11llama_layerE11norm_output_15_ce1_local;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
reg    ap_condition_212;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 i_fu_142 = 10'd0;
end

llama_layer_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_212)) begin
        if ((icmp_ln18_fu_441_p2 == 1'd0)) begin
            i_fu_142 <= add_ln18_fu_435_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_142 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lshr_ln_reg_620 <= {{ap_sig_allocacmp_i_3[9:4]}};
        trunc_ln18_reg_616 <= trunc_ln18_fu_447_p1;
    end
end

always @ (*) begin
    if (((icmp_ln18_fu_441_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_3 = 10'd0;
    end else begin
        ap_sig_allocacmp_i_3 = i_fu_142;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd1))) begin
        norm_output_35_ce1_local = 1'b1;
    end else begin
        norm_output_35_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd1))) begin
        norm_output_35_we1_local = 1'b1;
    end else begin
        norm_output_35_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd2))) begin
        norm_output_36_ce1_local = 1'b1;
    end else begin
        norm_output_36_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd2))) begin
        norm_output_36_we1_local = 1'b1;
    end else begin
        norm_output_36_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd3))) begin
        norm_output_37_ce1_local = 1'b1;
    end else begin
        norm_output_37_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd3))) begin
        norm_output_37_we1_local = 1'b1;
    end else begin
        norm_output_37_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd4))) begin
        norm_output_38_ce1_local = 1'b1;
    end else begin
        norm_output_38_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd4))) begin
        norm_output_38_we1_local = 1'b1;
    end else begin
        norm_output_38_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd5))) begin
        norm_output_39_ce1_local = 1'b1;
    end else begin
        norm_output_39_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd5))) begin
        norm_output_39_we1_local = 1'b1;
    end else begin
        norm_output_39_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd6))) begin
        norm_output_40_ce1_local = 1'b1;
    end else begin
        norm_output_40_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd6))) begin
        norm_output_40_we1_local = 1'b1;
    end else begin
        norm_output_40_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd7))) begin
        norm_output_41_ce1_local = 1'b1;
    end else begin
        norm_output_41_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd7))) begin
        norm_output_41_we1_local = 1'b1;
    end else begin
        norm_output_41_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd8))) begin
        norm_output_42_ce1_local = 1'b1;
    end else begin
        norm_output_42_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd8))) begin
        norm_output_42_we1_local = 1'b1;
    end else begin
        norm_output_42_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd9))) begin
        norm_output_43_ce1_local = 1'b1;
    end else begin
        norm_output_43_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd9))) begin
        norm_output_43_we1_local = 1'b1;
    end else begin
        norm_output_43_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd0))) begin
        norm_output_ce1_local = 1'b1;
    end else begin
        norm_output_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd0))) begin
        norm_output_we1_local = 1'b1;
    end else begin
        norm_output_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd10))) begin
        p_ZZ11llama_layerE11norm_output_10_ce1_local = 1'b1;
    end else begin
        p_ZZ11llama_layerE11norm_output_10_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd10))) begin
        p_ZZ11llama_layerE11norm_output_10_we1_local = 1'b1;
    end else begin
        p_ZZ11llama_layerE11norm_output_10_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd11))) begin
        p_ZZ11llama_layerE11norm_output_11_ce1_local = 1'b1;
    end else begin
        p_ZZ11llama_layerE11norm_output_11_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd11))) begin
        p_ZZ11llama_layerE11norm_output_11_we1_local = 1'b1;
    end else begin
        p_ZZ11llama_layerE11norm_output_11_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd12))) begin
        p_ZZ11llama_layerE11norm_output_12_ce1_local = 1'b1;
    end else begin
        p_ZZ11llama_layerE11norm_output_12_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd12))) begin
        p_ZZ11llama_layerE11norm_output_12_we1_local = 1'b1;
    end else begin
        p_ZZ11llama_layerE11norm_output_12_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd13))) begin
        p_ZZ11llama_layerE11norm_output_13_ce1_local = 1'b1;
    end else begin
        p_ZZ11llama_layerE11norm_output_13_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd13))) begin
        p_ZZ11llama_layerE11norm_output_13_we1_local = 1'b1;
    end else begin
        p_ZZ11llama_layerE11norm_output_13_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd14))) begin
        p_ZZ11llama_layerE11norm_output_14_ce1_local = 1'b1;
    end else begin
        p_ZZ11llama_layerE11norm_output_14_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd14))) begin
        p_ZZ11llama_layerE11norm_output_14_we1_local = 1'b1;
    end else begin
        p_ZZ11llama_layerE11norm_output_14_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd15))) begin
        p_ZZ11llama_layerE11norm_output_15_ce1_local = 1'b1;
    end else begin
        p_ZZ11llama_layerE11norm_output_15_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln18_reg_616 == 4'd15))) begin
        p_ZZ11llama_layerE11norm_output_15_we1_local = 1'b1;
    end else begin
        p_ZZ11llama_layerE11norm_output_15_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        res_strm_blk_n = res_strm_empty_n;
    end else begin
        res_strm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        res_strm_read_local = 1'b1;
    end else begin
        res_strm_read_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln18_fu_435_p2 = (ap_sig_allocacmp_i_3 + 10'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((res_strm_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp1 = ((ap_done_reg == 1'b1) | ((res_strm_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

assign ap_block_pp0_stage0_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((res_strm_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_condition_212 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign bitcast_ln20_fu_521_p1 = res_strm_dout;

assign icmp_ln18_fu_441_p2 = ((ap_sig_allocacmp_i_3 == 10'd768) ? 1'b1 : 1'b0);

assign norm_output_35_address1 = zext_ln18_fu_500_p1;

assign norm_output_35_ce1 = norm_output_35_ce1_local;

assign norm_output_35_d1 = bitcast_ln20_fu_521_p1;

assign norm_output_35_we1 = norm_output_35_we1_local;

assign norm_output_36_address1 = zext_ln18_fu_500_p1;

assign norm_output_36_ce1 = norm_output_36_ce1_local;

assign norm_output_36_d1 = bitcast_ln20_fu_521_p1;

assign norm_output_36_we1 = norm_output_36_we1_local;

assign norm_output_37_address1 = zext_ln18_fu_500_p1;

assign norm_output_37_ce1 = norm_output_37_ce1_local;

assign norm_output_37_d1 = bitcast_ln20_fu_521_p1;

assign norm_output_37_we1 = norm_output_37_we1_local;

assign norm_output_38_address1 = zext_ln18_fu_500_p1;

assign norm_output_38_ce1 = norm_output_38_ce1_local;

assign norm_output_38_d1 = bitcast_ln20_fu_521_p1;

assign norm_output_38_we1 = norm_output_38_we1_local;

assign norm_output_39_address1 = zext_ln18_fu_500_p1;

assign norm_output_39_ce1 = norm_output_39_ce1_local;

assign norm_output_39_d1 = bitcast_ln20_fu_521_p1;

assign norm_output_39_we1 = norm_output_39_we1_local;

assign norm_output_40_address1 = zext_ln18_fu_500_p1;

assign norm_output_40_ce1 = norm_output_40_ce1_local;

assign norm_output_40_d1 = bitcast_ln20_fu_521_p1;

assign norm_output_40_we1 = norm_output_40_we1_local;

assign norm_output_41_address1 = zext_ln18_fu_500_p1;

assign norm_output_41_ce1 = norm_output_41_ce1_local;

assign norm_output_41_d1 = bitcast_ln20_fu_521_p1;

assign norm_output_41_we1 = norm_output_41_we1_local;

assign norm_output_42_address1 = zext_ln18_fu_500_p1;

assign norm_output_42_ce1 = norm_output_42_ce1_local;

assign norm_output_42_d1 = bitcast_ln20_fu_521_p1;

assign norm_output_42_we1 = norm_output_42_we1_local;

assign norm_output_43_address1 = zext_ln18_fu_500_p1;

assign norm_output_43_ce1 = norm_output_43_ce1_local;

assign norm_output_43_d1 = bitcast_ln20_fu_521_p1;

assign norm_output_43_we1 = norm_output_43_we1_local;

assign norm_output_address1 = zext_ln18_fu_500_p1;

assign norm_output_ce1 = norm_output_ce1_local;

assign norm_output_d1 = bitcast_ln20_fu_521_p1;

assign norm_output_we1 = norm_output_we1_local;

assign p_ZZ11llama_layerE11norm_output_10_address1 = zext_ln18_fu_500_p1;

assign p_ZZ11llama_layerE11norm_output_10_ce1 = p_ZZ11llama_layerE11norm_output_10_ce1_local;

assign p_ZZ11llama_layerE11norm_output_10_d1 = bitcast_ln20_fu_521_p1;

assign p_ZZ11llama_layerE11norm_output_10_we1 = p_ZZ11llama_layerE11norm_output_10_we1_local;

assign p_ZZ11llama_layerE11norm_output_11_address1 = zext_ln18_fu_500_p1;

assign p_ZZ11llama_layerE11norm_output_11_ce1 = p_ZZ11llama_layerE11norm_output_11_ce1_local;

assign p_ZZ11llama_layerE11norm_output_11_d1 = bitcast_ln20_fu_521_p1;

assign p_ZZ11llama_layerE11norm_output_11_we1 = p_ZZ11llama_layerE11norm_output_11_we1_local;

assign p_ZZ11llama_layerE11norm_output_12_address1 = zext_ln18_fu_500_p1;

assign p_ZZ11llama_layerE11norm_output_12_ce1 = p_ZZ11llama_layerE11norm_output_12_ce1_local;

assign p_ZZ11llama_layerE11norm_output_12_d1 = bitcast_ln20_fu_521_p1;

assign p_ZZ11llama_layerE11norm_output_12_we1 = p_ZZ11llama_layerE11norm_output_12_we1_local;

assign p_ZZ11llama_layerE11norm_output_13_address1 = zext_ln18_fu_500_p1;

assign p_ZZ11llama_layerE11norm_output_13_ce1 = p_ZZ11llama_layerE11norm_output_13_ce1_local;

assign p_ZZ11llama_layerE11norm_output_13_d1 = bitcast_ln20_fu_521_p1;

assign p_ZZ11llama_layerE11norm_output_13_we1 = p_ZZ11llama_layerE11norm_output_13_we1_local;

assign p_ZZ11llama_layerE11norm_output_14_address1 = zext_ln18_fu_500_p1;

assign p_ZZ11llama_layerE11norm_output_14_ce1 = p_ZZ11llama_layerE11norm_output_14_ce1_local;

assign p_ZZ11llama_layerE11norm_output_14_d1 = bitcast_ln20_fu_521_p1;

assign p_ZZ11llama_layerE11norm_output_14_we1 = p_ZZ11llama_layerE11norm_output_14_we1_local;

assign p_ZZ11llama_layerE11norm_output_15_address1 = zext_ln18_fu_500_p1;

assign p_ZZ11llama_layerE11norm_output_15_ce1 = p_ZZ11llama_layerE11norm_output_15_ce1_local;

assign p_ZZ11llama_layerE11norm_output_15_d1 = bitcast_ln20_fu_521_p1;

assign p_ZZ11llama_layerE11norm_output_15_we1 = p_ZZ11llama_layerE11norm_output_15_we1_local;

assign res_strm_read = res_strm_read_local;

assign trunc_ln18_fu_447_p1 = ap_sig_allocacmp_i_3[3:0];

assign zext_ln18_fu_500_p1 = lshr_ln_reg_620;

endmodule //llama_layer_pull_tensor1d
