// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module llama_layer_kernel_mhsa_1_Block_entry_current_token_fb_proc_Pipeline_OUTPUT_WRITE (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        xb2_0_address0,
        xb2_0_ce0,
        xb2_0_q0,
        xb2_1_address0,
        xb2_1_ce0,
        xb2_1_q0,
        xb2_2_address0,
        xb2_2_ce0,
        xb2_2_q0,
        xb2_3_address0,
        xb2_3_ce0,
        xb2_3_q0,
        xb2_4_address0,
        xb2_4_ce0,
        xb2_4_q0,
        xb2_5_address0,
        xb2_5_ce0,
        xb2_5_q0,
        xb2_6_address0,
        xb2_6_ce0,
        xb2_6_q0,
        xb2_7_address0,
        xb2_7_ce0,
        xb2_7_q0,
        xb2_8_address0,
        xb2_8_ce0,
        xb2_8_q0,
        xb2_9_address0,
        xb2_9_ce0,
        xb2_9_q0,
        xb2_10_address0,
        xb2_10_ce0,
        xb2_10_q0,
        xb2_11_address0,
        xb2_11_ce0,
        xb2_11_q0,
        xb2_12_address0,
        xb2_12_ce0,
        xb2_12_q0,
        xb2_13_address0,
        xb2_13_ce0,
        xb2_13_q0,
        xb2_14_address0,
        xb2_14_ce0,
        xb2_14_q0,
        xb2_15_address0,
        xb2_15_ce0,
        xb2_15_q0,
        p_ZZ11llama_layerE13current_token_14_address1,
        p_ZZ11llama_layerE13current_token_14_ce1,
        p_ZZ11llama_layerE13current_token_14_we1,
        p_ZZ11llama_layerE13current_token_14_d1,
        p_ZZ11llama_layerE13current_token_13_address1,
        p_ZZ11llama_layerE13current_token_13_ce1,
        p_ZZ11llama_layerE13current_token_13_we1,
        p_ZZ11llama_layerE13current_token_13_d1,
        p_ZZ11llama_layerE13current_token_12_address1,
        p_ZZ11llama_layerE13current_token_12_ce1,
        p_ZZ11llama_layerE13current_token_12_we1,
        p_ZZ11llama_layerE13current_token_12_d1,
        p_ZZ11llama_layerE13current_token_11_address1,
        p_ZZ11llama_layerE13current_token_11_ce1,
        p_ZZ11llama_layerE13current_token_11_we1,
        p_ZZ11llama_layerE13current_token_11_d1,
        p_ZZ11llama_layerE13current_token_10_address1,
        p_ZZ11llama_layerE13current_token_10_ce1,
        p_ZZ11llama_layerE13current_token_10_we1,
        p_ZZ11llama_layerE13current_token_10_d1,
        current_token_27_address1,
        current_token_27_ce1,
        current_token_27_we1,
        current_token_27_d1,
        current_token_26_address1,
        current_token_26_ce1,
        current_token_26_we1,
        current_token_26_d1,
        current_token_25_address1,
        current_token_25_ce1,
        current_token_25_we1,
        current_token_25_d1,
        current_token_24_address1,
        current_token_24_ce1,
        current_token_24_we1,
        current_token_24_d1,
        current_token_23_address1,
        current_token_23_ce1,
        current_token_23_we1,
        current_token_23_d1,
        current_token_22_address1,
        current_token_22_ce1,
        current_token_22_we1,
        current_token_22_d1,
        current_token_21_address1,
        current_token_21_ce1,
        current_token_21_we1,
        current_token_21_d1,
        current_token_20_address1,
        current_token_20_ce1,
        current_token_20_we1,
        current_token_20_d1,
        current_token_19_address1,
        current_token_19_ce1,
        current_token_19_we1,
        current_token_19_d1,
        current_token_address1,
        current_token_ce1,
        current_token_we1,
        current_token_d1,
        p_ZZ11llama_layerE13current_token_15_address1,
        p_ZZ11llama_layerE13current_token_15_ce1,
        p_ZZ11llama_layerE13current_token_15_we1,
        p_ZZ11llama_layerE13current_token_15_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] xb2_0_address0;
output   xb2_0_ce0;
input  [31:0] xb2_0_q0;
output  [5:0] xb2_1_address0;
output   xb2_1_ce0;
input  [31:0] xb2_1_q0;
output  [5:0] xb2_2_address0;
output   xb2_2_ce0;
input  [31:0] xb2_2_q0;
output  [5:0] xb2_3_address0;
output   xb2_3_ce0;
input  [31:0] xb2_3_q0;
output  [5:0] xb2_4_address0;
output   xb2_4_ce0;
input  [31:0] xb2_4_q0;
output  [5:0] xb2_5_address0;
output   xb2_5_ce0;
input  [31:0] xb2_5_q0;
output  [5:0] xb2_6_address0;
output   xb2_6_ce0;
input  [31:0] xb2_6_q0;
output  [5:0] xb2_7_address0;
output   xb2_7_ce0;
input  [31:0] xb2_7_q0;
output  [5:0] xb2_8_address0;
output   xb2_8_ce0;
input  [31:0] xb2_8_q0;
output  [5:0] xb2_9_address0;
output   xb2_9_ce0;
input  [31:0] xb2_9_q0;
output  [5:0] xb2_10_address0;
output   xb2_10_ce0;
input  [31:0] xb2_10_q0;
output  [5:0] xb2_11_address0;
output   xb2_11_ce0;
input  [31:0] xb2_11_q0;
output  [5:0] xb2_12_address0;
output   xb2_12_ce0;
input  [31:0] xb2_12_q0;
output  [5:0] xb2_13_address0;
output   xb2_13_ce0;
input  [31:0] xb2_13_q0;
output  [5:0] xb2_14_address0;
output   xb2_14_ce0;
input  [31:0] xb2_14_q0;
output  [5:0] xb2_15_address0;
output   xb2_15_ce0;
input  [31:0] xb2_15_q0;
output  [5:0] p_ZZ11llama_layerE13current_token_14_address1;
output   p_ZZ11llama_layerE13current_token_14_ce1;
output   p_ZZ11llama_layerE13current_token_14_we1;
output  [31:0] p_ZZ11llama_layerE13current_token_14_d1;
output  [5:0] p_ZZ11llama_layerE13current_token_13_address1;
output   p_ZZ11llama_layerE13current_token_13_ce1;
output   p_ZZ11llama_layerE13current_token_13_we1;
output  [31:0] p_ZZ11llama_layerE13current_token_13_d1;
output  [5:0] p_ZZ11llama_layerE13current_token_12_address1;
output   p_ZZ11llama_layerE13current_token_12_ce1;
output   p_ZZ11llama_layerE13current_token_12_we1;
output  [31:0] p_ZZ11llama_layerE13current_token_12_d1;
output  [5:0] p_ZZ11llama_layerE13current_token_11_address1;
output   p_ZZ11llama_layerE13current_token_11_ce1;
output   p_ZZ11llama_layerE13current_token_11_we1;
output  [31:0] p_ZZ11llama_layerE13current_token_11_d1;
output  [5:0] p_ZZ11llama_layerE13current_token_10_address1;
output   p_ZZ11llama_layerE13current_token_10_ce1;
output   p_ZZ11llama_layerE13current_token_10_we1;
output  [31:0] p_ZZ11llama_layerE13current_token_10_d1;
output  [5:0] current_token_27_address1;
output   current_token_27_ce1;
output   current_token_27_we1;
output  [31:0] current_token_27_d1;
output  [5:0] current_token_26_address1;
output   current_token_26_ce1;
output   current_token_26_we1;
output  [31:0] current_token_26_d1;
output  [5:0] current_token_25_address1;
output   current_token_25_ce1;
output   current_token_25_we1;
output  [31:0] current_token_25_d1;
output  [5:0] current_token_24_address1;
output   current_token_24_ce1;
output   current_token_24_we1;
output  [31:0] current_token_24_d1;
output  [5:0] current_token_23_address1;
output   current_token_23_ce1;
output   current_token_23_we1;
output  [31:0] current_token_23_d1;
output  [5:0] current_token_22_address1;
output   current_token_22_ce1;
output   current_token_22_we1;
output  [31:0] current_token_22_d1;
output  [5:0] current_token_21_address1;
output   current_token_21_ce1;
output   current_token_21_we1;
output  [31:0] current_token_21_d1;
output  [5:0] current_token_20_address1;
output   current_token_20_ce1;
output   current_token_20_we1;
output  [31:0] current_token_20_d1;
output  [5:0] current_token_19_address1;
output   current_token_19_ce1;
output   current_token_19_we1;
output  [31:0] current_token_19_d1;
output  [5:0] current_token_address1;
output   current_token_ce1;
output   current_token_we1;
output  [31:0] current_token_d1;
output  [5:0] p_ZZ11llama_layerE13current_token_15_address1;
output   p_ZZ11llama_layerE13current_token_15_ce1;
output   p_ZZ11llama_layerE13current_token_15_we1;
output  [31:0] p_ZZ11llama_layerE13current_token_15_d1;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln165_fu_639_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] trunc_ln165_fu_645_p1;
reg   [3:0] trunc_ln165_reg_928;
reg   [3:0] trunc_ln165_reg_928_pp0_iter1_reg;
wire   [63:0] zext_ln165_fu_659_p1;
reg   [63:0] zext_ln165_reg_933;
reg   [63:0] zext_ln165_reg_933_pp0_iter1_reg;
wire   [31:0] tmp_2_fu_782_p35;
reg   [31:0] tmp_2_reg_1033;
wire    ap_block_pp0_stage0;
reg   [9:0] i_fu_138;
wire   [9:0] add_ln165_fu_633_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_i_15;
reg    xb2_0_ce0_local;
reg    xb2_1_ce0_local;
reg    xb2_2_ce0_local;
reg    xb2_3_ce0_local;
reg    xb2_4_ce0_local;
reg    xb2_5_ce0_local;
reg    xb2_6_ce0_local;
reg    xb2_7_ce0_local;
reg    xb2_8_ce0_local;
reg    xb2_9_ce0_local;
reg    xb2_10_ce0_local;
reg    xb2_11_ce0_local;
reg    xb2_12_ce0_local;
reg    xb2_13_ce0_local;
reg    xb2_14_ce0_local;
reg    xb2_15_ce0_local;
reg    p_ZZ11llama_layerE13current_token_14_we1_local;
reg    p_ZZ11llama_layerE13current_token_14_ce1_local;
reg    p_ZZ11llama_layerE13current_token_13_we1_local;
reg    p_ZZ11llama_layerE13current_token_13_ce1_local;
reg    p_ZZ11llama_layerE13current_token_12_we1_local;
reg    p_ZZ11llama_layerE13current_token_12_ce1_local;
reg    p_ZZ11llama_layerE13current_token_11_we1_local;
reg    p_ZZ11llama_layerE13current_token_11_ce1_local;
reg    p_ZZ11llama_layerE13current_token_10_we1_local;
reg    p_ZZ11llama_layerE13current_token_10_ce1_local;
reg    current_token_27_we1_local;
reg    current_token_27_ce1_local;
reg    current_token_26_we1_local;
reg    current_token_26_ce1_local;
reg    current_token_25_we1_local;
reg    current_token_25_ce1_local;
reg    current_token_24_we1_local;
reg    current_token_24_ce1_local;
reg    current_token_23_we1_local;
reg    current_token_23_ce1_local;
reg    current_token_22_we1_local;
reg    current_token_22_ce1_local;
reg    current_token_21_we1_local;
reg    current_token_21_ce1_local;
reg    current_token_20_we1_local;
reg    current_token_20_ce1_local;
reg    current_token_19_we1_local;
reg    current_token_19_ce1_local;
reg    current_token_we1_local;
reg    current_token_ce1_local;
reg    p_ZZ11llama_layerE13current_token_15_we1_local;
reg    p_ZZ11llama_layerE13current_token_15_ce1_local;
wire   [5:0] lshr_ln_fu_649_p4;
wire   [31:0] tmp_2_fu_782_p33;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [3:0] tmp_2_fu_782_p1;
wire   [3:0] tmp_2_fu_782_p3;
wire   [3:0] tmp_2_fu_782_p5;
wire   [3:0] tmp_2_fu_782_p7;
wire   [3:0] tmp_2_fu_782_p9;
wire   [3:0] tmp_2_fu_782_p11;
wire   [3:0] tmp_2_fu_782_p13;
wire   [3:0] tmp_2_fu_782_p15;
wire  signed [3:0] tmp_2_fu_782_p17;
wire  signed [3:0] tmp_2_fu_782_p19;
wire  signed [3:0] tmp_2_fu_782_p21;
wire  signed [3:0] tmp_2_fu_782_p23;
wire  signed [3:0] tmp_2_fu_782_p25;
wire  signed [3:0] tmp_2_fu_782_p27;
wire  signed [3:0] tmp_2_fu_782_p29;
wire  signed [3:0] tmp_2_fu_782_p31;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 i_fu_138 = 10'd0;
#0 ap_done_reg = 1'b0;
end

(* dissolve_hierarchy = "yes" *) llama_layer_sparsemux_33_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .CASE13( 4'hD ),
    .din13_WIDTH( 32 ),
    .CASE14( 4'hE ),
    .din14_WIDTH( 32 ),
    .CASE15( 4'hF ),
    .din15_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_33_4_32_1_1_U1236(
    .din0(xb2_0_q0),
    .din1(xb2_1_q0),
    .din2(xb2_2_q0),
    .din3(xb2_3_q0),
    .din4(xb2_4_q0),
    .din5(xb2_5_q0),
    .din6(xb2_6_q0),
    .din7(xb2_7_q0),
    .din8(xb2_8_q0),
    .din9(xb2_9_q0),
    .din10(xb2_10_q0),
    .din11(xb2_11_q0),
    .din12(xb2_12_q0),
    .din13(xb2_13_q0),
    .din14(xb2_14_q0),
    .din15(xb2_15_q0),
    .def(tmp_2_fu_782_p33),
    .sel(trunc_ln165_reg_928),
    .dout(tmp_2_fu_782_p35)
);

llama_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln165_fu_639_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_138 <= add_ln165_fu_633_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_138 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        tmp_2_reg_1033 <= tmp_2_fu_782_p35;
        trunc_ln165_reg_928 <= trunc_ln165_fu_645_p1;
        trunc_ln165_reg_928_pp0_iter1_reg <= trunc_ln165_reg_928;
        zext_ln165_reg_933[5 : 0] <= zext_ln165_fu_659_p1[5 : 0];
        zext_ln165_reg_933_pp0_iter1_reg[5 : 0] <= zext_ln165_reg_933[5 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln165_fu_639_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_15 = 10'd0;
    end else begin
        ap_sig_allocacmp_i_15 = i_fu_138;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        current_token_19_ce1_local = 1'b1;
    end else begin
        current_token_19_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        current_token_19_we1_local = 1'b1;
    end else begin
        current_token_19_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd2) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        current_token_20_ce1_local = 1'b1;
    end else begin
        current_token_20_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd2) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        current_token_20_we1_local = 1'b1;
    end else begin
        current_token_20_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        current_token_21_ce1_local = 1'b1;
    end else begin
        current_token_21_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        current_token_21_we1_local = 1'b1;
    end else begin
        current_token_21_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd4) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        current_token_22_ce1_local = 1'b1;
    end else begin
        current_token_22_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd4) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        current_token_22_we1_local = 1'b1;
    end else begin
        current_token_22_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd5) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        current_token_23_ce1_local = 1'b1;
    end else begin
        current_token_23_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd5) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        current_token_23_we1_local = 1'b1;
    end else begin
        current_token_23_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd6) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        current_token_24_ce1_local = 1'b1;
    end else begin
        current_token_24_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd6) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        current_token_24_we1_local = 1'b1;
    end else begin
        current_token_24_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd7) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        current_token_25_ce1_local = 1'b1;
    end else begin
        current_token_25_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd7) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        current_token_25_we1_local = 1'b1;
    end else begin
        current_token_25_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd8) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        current_token_26_ce1_local = 1'b1;
    end else begin
        current_token_26_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd8) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        current_token_26_we1_local = 1'b1;
    end else begin
        current_token_26_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd9) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        current_token_27_ce1_local = 1'b1;
    end else begin
        current_token_27_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd9) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        current_token_27_we1_local = 1'b1;
    end else begin
        current_token_27_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        current_token_ce1_local = 1'b1;
    end else begin
        current_token_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        current_token_we1_local = 1'b1;
    end else begin
        current_token_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd10) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_ZZ11llama_layerE13current_token_10_ce1_local = 1'b1;
    end else begin
        p_ZZ11llama_layerE13current_token_10_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd10) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_ZZ11llama_layerE13current_token_10_we1_local = 1'b1;
    end else begin
        p_ZZ11llama_layerE13current_token_10_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd11) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_ZZ11llama_layerE13current_token_11_ce1_local = 1'b1;
    end else begin
        p_ZZ11llama_layerE13current_token_11_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd11) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_ZZ11llama_layerE13current_token_11_we1_local = 1'b1;
    end else begin
        p_ZZ11llama_layerE13current_token_11_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd12) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_ZZ11llama_layerE13current_token_12_ce1_local = 1'b1;
    end else begin
        p_ZZ11llama_layerE13current_token_12_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd12) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_ZZ11llama_layerE13current_token_12_we1_local = 1'b1;
    end else begin
        p_ZZ11llama_layerE13current_token_12_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd13) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_ZZ11llama_layerE13current_token_13_ce1_local = 1'b1;
    end else begin
        p_ZZ11llama_layerE13current_token_13_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd13) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_ZZ11llama_layerE13current_token_13_we1_local = 1'b1;
    end else begin
        p_ZZ11llama_layerE13current_token_13_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd14) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_ZZ11llama_layerE13current_token_14_ce1_local = 1'b1;
    end else begin
        p_ZZ11llama_layerE13current_token_14_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd14) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_ZZ11llama_layerE13current_token_14_we1_local = 1'b1;
    end else begin
        p_ZZ11llama_layerE13current_token_14_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd15) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_ZZ11llama_layerE13current_token_15_ce1_local = 1'b1;
    end else begin
        p_ZZ11llama_layerE13current_token_15_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln165_reg_928_pp0_iter1_reg == 4'd15) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_ZZ11llama_layerE13current_token_15_we1_local = 1'b1;
    end else begin
        p_ZZ11llama_layerE13current_token_15_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln165_fu_639_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xb2_0_ce0_local = 1'b1;
    end else begin
        xb2_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln165_fu_639_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xb2_10_ce0_local = 1'b1;
    end else begin
        xb2_10_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln165_fu_639_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xb2_11_ce0_local = 1'b1;
    end else begin
        xb2_11_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln165_fu_639_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xb2_12_ce0_local = 1'b1;
    end else begin
        xb2_12_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln165_fu_639_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xb2_13_ce0_local = 1'b1;
    end else begin
        xb2_13_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln165_fu_639_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xb2_14_ce0_local = 1'b1;
    end else begin
        xb2_14_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln165_fu_639_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xb2_15_ce0_local = 1'b1;
    end else begin
        xb2_15_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln165_fu_639_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xb2_1_ce0_local = 1'b1;
    end else begin
        xb2_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln165_fu_639_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xb2_2_ce0_local = 1'b1;
    end else begin
        xb2_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln165_fu_639_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xb2_3_ce0_local = 1'b1;
    end else begin
        xb2_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln165_fu_639_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xb2_4_ce0_local = 1'b1;
    end else begin
        xb2_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln165_fu_639_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xb2_5_ce0_local = 1'b1;
    end else begin
        xb2_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln165_fu_639_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xb2_6_ce0_local = 1'b1;
    end else begin
        xb2_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln165_fu_639_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xb2_7_ce0_local = 1'b1;
    end else begin
        xb2_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln165_fu_639_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xb2_8_ce0_local = 1'b1;
    end else begin
        xb2_8_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln165_fu_639_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xb2_9_ce0_local = 1'b1;
    end else begin
        xb2_9_ce0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln165_fu_633_p2 = (ap_sig_allocacmp_i_15 + 10'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign current_token_19_address1 = zext_ln165_reg_933_pp0_iter1_reg;

assign current_token_19_ce1 = current_token_19_ce1_local;

assign current_token_19_d1 = tmp_2_reg_1033;

assign current_token_19_we1 = current_token_19_we1_local;

assign current_token_20_address1 = zext_ln165_reg_933_pp0_iter1_reg;

assign current_token_20_ce1 = current_token_20_ce1_local;

assign current_token_20_d1 = tmp_2_reg_1033;

assign current_token_20_we1 = current_token_20_we1_local;

assign current_token_21_address1 = zext_ln165_reg_933_pp0_iter1_reg;

assign current_token_21_ce1 = current_token_21_ce1_local;

assign current_token_21_d1 = tmp_2_reg_1033;

assign current_token_21_we1 = current_token_21_we1_local;

assign current_token_22_address1 = zext_ln165_reg_933_pp0_iter1_reg;

assign current_token_22_ce1 = current_token_22_ce1_local;

assign current_token_22_d1 = tmp_2_reg_1033;

assign current_token_22_we1 = current_token_22_we1_local;

assign current_token_23_address1 = zext_ln165_reg_933_pp0_iter1_reg;

assign current_token_23_ce1 = current_token_23_ce1_local;

assign current_token_23_d1 = tmp_2_reg_1033;

assign current_token_23_we1 = current_token_23_we1_local;

assign current_token_24_address1 = zext_ln165_reg_933_pp0_iter1_reg;

assign current_token_24_ce1 = current_token_24_ce1_local;

assign current_token_24_d1 = tmp_2_reg_1033;

assign current_token_24_we1 = current_token_24_we1_local;

assign current_token_25_address1 = zext_ln165_reg_933_pp0_iter1_reg;

assign current_token_25_ce1 = current_token_25_ce1_local;

assign current_token_25_d1 = tmp_2_reg_1033;

assign current_token_25_we1 = current_token_25_we1_local;

assign current_token_26_address1 = zext_ln165_reg_933_pp0_iter1_reg;

assign current_token_26_ce1 = current_token_26_ce1_local;

assign current_token_26_d1 = tmp_2_reg_1033;

assign current_token_26_we1 = current_token_26_we1_local;

assign current_token_27_address1 = zext_ln165_reg_933_pp0_iter1_reg;

assign current_token_27_ce1 = current_token_27_ce1_local;

assign current_token_27_d1 = tmp_2_reg_1033;

assign current_token_27_we1 = current_token_27_we1_local;

assign current_token_address1 = zext_ln165_reg_933_pp0_iter1_reg;

assign current_token_ce1 = current_token_ce1_local;

assign current_token_d1 = tmp_2_reg_1033;

assign current_token_we1 = current_token_we1_local;

assign icmp_ln165_fu_639_p2 = ((ap_sig_allocacmp_i_15 == 10'd768) ? 1'b1 : 1'b0);

assign lshr_ln_fu_649_p4 = {{ap_sig_allocacmp_i_15[9:4]}};

assign p_ZZ11llama_layerE13current_token_10_address1 = zext_ln165_reg_933_pp0_iter1_reg;

assign p_ZZ11llama_layerE13current_token_10_ce1 = p_ZZ11llama_layerE13current_token_10_ce1_local;

assign p_ZZ11llama_layerE13current_token_10_d1 = tmp_2_reg_1033;

assign p_ZZ11llama_layerE13current_token_10_we1 = p_ZZ11llama_layerE13current_token_10_we1_local;

assign p_ZZ11llama_layerE13current_token_11_address1 = zext_ln165_reg_933_pp0_iter1_reg;

assign p_ZZ11llama_layerE13current_token_11_ce1 = p_ZZ11llama_layerE13current_token_11_ce1_local;

assign p_ZZ11llama_layerE13current_token_11_d1 = tmp_2_reg_1033;

assign p_ZZ11llama_layerE13current_token_11_we1 = p_ZZ11llama_layerE13current_token_11_we1_local;

assign p_ZZ11llama_layerE13current_token_12_address1 = zext_ln165_reg_933_pp0_iter1_reg;

assign p_ZZ11llama_layerE13current_token_12_ce1 = p_ZZ11llama_layerE13current_token_12_ce1_local;

assign p_ZZ11llama_layerE13current_token_12_d1 = tmp_2_reg_1033;

assign p_ZZ11llama_layerE13current_token_12_we1 = p_ZZ11llama_layerE13current_token_12_we1_local;

assign p_ZZ11llama_layerE13current_token_13_address1 = zext_ln165_reg_933_pp0_iter1_reg;

assign p_ZZ11llama_layerE13current_token_13_ce1 = p_ZZ11llama_layerE13current_token_13_ce1_local;

assign p_ZZ11llama_layerE13current_token_13_d1 = tmp_2_reg_1033;

assign p_ZZ11llama_layerE13current_token_13_we1 = p_ZZ11llama_layerE13current_token_13_we1_local;

assign p_ZZ11llama_layerE13current_token_14_address1 = zext_ln165_reg_933_pp0_iter1_reg;

assign p_ZZ11llama_layerE13current_token_14_ce1 = p_ZZ11llama_layerE13current_token_14_ce1_local;

assign p_ZZ11llama_layerE13current_token_14_d1 = tmp_2_reg_1033;

assign p_ZZ11llama_layerE13current_token_14_we1 = p_ZZ11llama_layerE13current_token_14_we1_local;

assign p_ZZ11llama_layerE13current_token_15_address1 = zext_ln165_reg_933_pp0_iter1_reg;

assign p_ZZ11llama_layerE13current_token_15_ce1 = p_ZZ11llama_layerE13current_token_15_ce1_local;

assign p_ZZ11llama_layerE13current_token_15_d1 = tmp_2_reg_1033;

assign p_ZZ11llama_layerE13current_token_15_we1 = p_ZZ11llama_layerE13current_token_15_we1_local;

assign tmp_2_fu_782_p33 = 'bx;

assign trunc_ln165_fu_645_p1 = ap_sig_allocacmp_i_15[3:0];

assign xb2_0_address0 = zext_ln165_fu_659_p1;

assign xb2_0_ce0 = xb2_0_ce0_local;

assign xb2_10_address0 = zext_ln165_fu_659_p1;

assign xb2_10_ce0 = xb2_10_ce0_local;

assign xb2_11_address0 = zext_ln165_fu_659_p1;

assign xb2_11_ce0 = xb2_11_ce0_local;

assign xb2_12_address0 = zext_ln165_fu_659_p1;

assign xb2_12_ce0 = xb2_12_ce0_local;

assign xb2_13_address0 = zext_ln165_fu_659_p1;

assign xb2_13_ce0 = xb2_13_ce0_local;

assign xb2_14_address0 = zext_ln165_fu_659_p1;

assign xb2_14_ce0 = xb2_14_ce0_local;

assign xb2_15_address0 = zext_ln165_fu_659_p1;

assign xb2_15_ce0 = xb2_15_ce0_local;

assign xb2_1_address0 = zext_ln165_fu_659_p1;

assign xb2_1_ce0 = xb2_1_ce0_local;

assign xb2_2_address0 = zext_ln165_fu_659_p1;

assign xb2_2_ce0 = xb2_2_ce0_local;

assign xb2_3_address0 = zext_ln165_fu_659_p1;

assign xb2_3_ce0 = xb2_3_ce0_local;

assign xb2_4_address0 = zext_ln165_fu_659_p1;

assign xb2_4_ce0 = xb2_4_ce0_local;

assign xb2_5_address0 = zext_ln165_fu_659_p1;

assign xb2_5_ce0 = xb2_5_ce0_local;

assign xb2_6_address0 = zext_ln165_fu_659_p1;

assign xb2_6_ce0 = xb2_6_ce0_local;

assign xb2_7_address0 = zext_ln165_fu_659_p1;

assign xb2_7_ce0 = xb2_7_ce0_local;

assign xb2_8_address0 = zext_ln165_fu_659_p1;

assign xb2_8_ce0 = xb2_8_ce0_local;

assign xb2_9_address0 = zext_ln165_fu_659_p1;

assign xb2_9_ce0 = xb2_9_ce0_local;

assign zext_ln165_fu_659_p1 = lshr_ln_fu_649_p4;

always @ (posedge ap_clk) begin
    zext_ln165_reg_933[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln165_reg_933_pp0_iter1_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //llama_layer_kernel_mhsa_1_Block_entry_current_token_fb_proc_Pipeline_OUTPUT_WRITE
