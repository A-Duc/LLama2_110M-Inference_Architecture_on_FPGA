// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module llama_layer_load_mat_burst_11 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        m_axi_gmem2_0_AWVALID,
        m_axi_gmem2_0_AWREADY,
        m_axi_gmem2_0_AWADDR,
        m_axi_gmem2_0_AWID,
        m_axi_gmem2_0_AWLEN,
        m_axi_gmem2_0_AWSIZE,
        m_axi_gmem2_0_AWBURST,
        m_axi_gmem2_0_AWLOCK,
        m_axi_gmem2_0_AWCACHE,
        m_axi_gmem2_0_AWPROT,
        m_axi_gmem2_0_AWQOS,
        m_axi_gmem2_0_AWREGION,
        m_axi_gmem2_0_AWUSER,
        m_axi_gmem2_0_WVALID,
        m_axi_gmem2_0_WREADY,
        m_axi_gmem2_0_WDATA,
        m_axi_gmem2_0_WSTRB,
        m_axi_gmem2_0_WLAST,
        m_axi_gmem2_0_WID,
        m_axi_gmem2_0_WUSER,
        m_axi_gmem2_0_ARVALID,
        m_axi_gmem2_0_ARREADY,
        m_axi_gmem2_0_ARADDR,
        m_axi_gmem2_0_ARID,
        m_axi_gmem2_0_ARLEN,
        m_axi_gmem2_0_ARSIZE,
        m_axi_gmem2_0_ARBURST,
        m_axi_gmem2_0_ARLOCK,
        m_axi_gmem2_0_ARCACHE,
        m_axi_gmem2_0_ARPROT,
        m_axi_gmem2_0_ARQOS,
        m_axi_gmem2_0_ARREGION,
        m_axi_gmem2_0_ARUSER,
        m_axi_gmem2_0_RVALID,
        m_axi_gmem2_0_RREADY,
        m_axi_gmem2_0_RDATA,
        m_axi_gmem2_0_RLAST,
        m_axi_gmem2_0_RID,
        m_axi_gmem2_0_RFIFONUM,
        m_axi_gmem2_0_RUSER,
        m_axi_gmem2_0_RRESP,
        m_axi_gmem2_0_BVALID,
        m_axi_gmem2_0_BREADY,
        m_axi_gmem2_0_BRESP,
        m_axi_gmem2_0_BID,
        m_axi_gmem2_0_BUSER,
        mat_stream_din,
        mat_stream_full_n,
        mat_stream_write,
        mat_stream_num_data_valid,
        mat_stream_fifo_cap,
        mat
);

parameter    ap_ST_fsm_pp0_stage0 = 16'd1;
parameter    ap_ST_fsm_pp0_stage1 = 16'd2;
parameter    ap_ST_fsm_pp0_stage2 = 16'd4;
parameter    ap_ST_fsm_pp0_stage3 = 16'd8;
parameter    ap_ST_fsm_pp0_stage4 = 16'd16;
parameter    ap_ST_fsm_pp0_stage5 = 16'd32;
parameter    ap_ST_fsm_pp0_stage6 = 16'd64;
parameter    ap_ST_fsm_pp0_stage7 = 16'd128;
parameter    ap_ST_fsm_pp0_stage8 = 16'd256;
parameter    ap_ST_fsm_pp0_stage9 = 16'd512;
parameter    ap_ST_fsm_pp0_stage10 = 16'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 16'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 16'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 16'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 16'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem2_0_AWVALID;
input   m_axi_gmem2_0_AWREADY;
output  [63:0] m_axi_gmem2_0_AWADDR;
output  [0:0] m_axi_gmem2_0_AWID;
output  [31:0] m_axi_gmem2_0_AWLEN;
output  [2:0] m_axi_gmem2_0_AWSIZE;
output  [1:0] m_axi_gmem2_0_AWBURST;
output  [1:0] m_axi_gmem2_0_AWLOCK;
output  [3:0] m_axi_gmem2_0_AWCACHE;
output  [2:0] m_axi_gmem2_0_AWPROT;
output  [3:0] m_axi_gmem2_0_AWQOS;
output  [3:0] m_axi_gmem2_0_AWREGION;
output  [0:0] m_axi_gmem2_0_AWUSER;
output   m_axi_gmem2_0_WVALID;
input   m_axi_gmem2_0_WREADY;
output  [31:0] m_axi_gmem2_0_WDATA;
output  [3:0] m_axi_gmem2_0_WSTRB;
output   m_axi_gmem2_0_WLAST;
output  [0:0] m_axi_gmem2_0_WID;
output  [0:0] m_axi_gmem2_0_WUSER;
output   m_axi_gmem2_0_ARVALID;
input   m_axi_gmem2_0_ARREADY;
output  [63:0] m_axi_gmem2_0_ARADDR;
output  [0:0] m_axi_gmem2_0_ARID;
output  [31:0] m_axi_gmem2_0_ARLEN;
output  [2:0] m_axi_gmem2_0_ARSIZE;
output  [1:0] m_axi_gmem2_0_ARBURST;
output  [1:0] m_axi_gmem2_0_ARLOCK;
output  [3:0] m_axi_gmem2_0_ARCACHE;
output  [2:0] m_axi_gmem2_0_ARPROT;
output  [3:0] m_axi_gmem2_0_ARQOS;
output  [3:0] m_axi_gmem2_0_ARREGION;
output  [0:0] m_axi_gmem2_0_ARUSER;
input   m_axi_gmem2_0_RVALID;
output   m_axi_gmem2_0_RREADY;
input  [31:0] m_axi_gmem2_0_RDATA;
input   m_axi_gmem2_0_RLAST;
input  [0:0] m_axi_gmem2_0_RID;
input  [12:0] m_axi_gmem2_0_RFIFONUM;
input  [0:0] m_axi_gmem2_0_RUSER;
input  [1:0] m_axi_gmem2_0_RRESP;
input   m_axi_gmem2_0_BVALID;
output   m_axi_gmem2_0_BREADY;
input  [1:0] m_axi_gmem2_0_BRESP;
input  [0:0] m_axi_gmem2_0_BID;
input  [0:0] m_axi_gmem2_0_BUSER;
output  [31:0] mat_stream_din;
input   mat_stream_full_n;
output   mat_stream_write;
input  [8:0] mat_stream_num_data_valid;
input  [8:0] mat_stream_fifo_cap;
input  [63:0] mat;

reg ap_idle;
reg m_axi_gmem2_0_ARVALID;
reg[63:0] m_axi_gmem2_0_ARADDR;
reg m_axi_gmem2_0_RREADY;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage12;
reg   [0:0] icmp_ln25_reg_1194;
reg    ap_block_state13_io_grp11;
reg    ap_block_pp0_stage12_subdone_grp11_done_reg;
reg    ap_block_pp0_stage12_subdone_grp11;
reg    ap_block_pp0_stage12_subdone;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_state29_pp0_stage12_iter1_grp32;
reg    ap_block_pp0_stage12_subdone_grp32_done_reg;
reg    ap_block_pp0_stage12_subdone_grp32;
reg    ap_condition_exit_pp0_iter0_stage12;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage15;
reg    ap_block_state16_pp0_stage15_iter0_grp16;
reg    ap_block_pp0_stage15_subdone_grp16_done_reg;
reg    ap_block_pp0_stage15_subdone_grp16;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_state16_io_grp17;
reg    ap_block_pp0_stage15_subdone_grp17_done_reg;
reg    ap_block_pp0_stage15_subdone_grp17;
reg    gmem2_blk_n_AR;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_grp1;
reg    ap_block_pp0_stage2_subdone_grp1_done_reg;
reg    ap_block_pp0_stage2_subdone_grp1;
reg    ap_block_pp0_stage2_subdone;
reg    gmem2_blk_n_R;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13_grp12;
reg    ap_block_pp0_stage13_subdone_grp12_done_reg;
reg    ap_block_pp0_stage13_subdone_grp12;
reg    ap_block_pp0_stage13_subdone;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_grp2;
reg    ap_block_pp0_stage3_subdone_grp2_done_reg;
reg    ap_block_pp0_stage3_subdone_grp2;
reg    ap_block_pp0_stage3_subdone;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14_grp14;
reg    ap_block_pp0_stage14_subdone_grp14_done_reg;
reg    ap_block_pp0_stage14_subdone_grp14;
reg    ap_block_pp0_stage14_subdone;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_grp3;
reg    ap_block_pp0_stage4_subdone_grp3_done_reg;
reg    ap_block_pp0_stage4_subdone_grp3;
reg    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage15_grp16;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5_grp4;
reg    ap_block_pp0_stage5_subdone_grp4_done_reg;
reg    ap_block_pp0_stage5_subdone_grp4;
reg    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage0_grp18;
reg    ap_block_pp0_stage0_subdone_grp18_done_reg;
reg    ap_block_pp0_stage0_subdone_grp18;
reg    ap_block_pp0_stage0_subdone;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6_grp5;
reg    ap_block_pp0_stage6_subdone_grp5_done_reg;
reg    ap_block_pp0_stage6_subdone_grp5;
reg    ap_block_pp0_stage6_subdone;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_grp20;
reg    ap_block_pp0_stage1_subdone_grp20_done_reg;
reg    ap_block_pp0_stage1_subdone_grp20;
reg    ap_block_pp0_stage1_subdone;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7_grp6;
reg    ap_block_pp0_stage7_subdone_grp6_done_reg;
reg    ap_block_pp0_stage7_subdone_grp6;
reg    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage2_grp22;
reg    ap_block_pp0_stage2_subdone_grp22_done_reg;
reg    ap_block_pp0_stage2_subdone_grp22;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8_grp7;
reg    ap_block_pp0_stage8_subdone_grp7_done_reg;
reg    ap_block_pp0_stage8_subdone_grp7;
reg    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage3_grp23;
reg    ap_block_pp0_stage3_subdone_grp23_done_reg;
reg    ap_block_pp0_stage3_subdone_grp23;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9_grp8;
reg    ap_block_pp0_stage9_subdone_grp8_done_reg;
reg    ap_block_pp0_stage9_subdone_grp8;
reg    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage4_grp24;
reg    ap_block_pp0_stage4_subdone_grp24_done_reg;
reg    ap_block_pp0_stage4_subdone_grp24;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10_grp9;
reg    ap_block_pp0_stage10_subdone_grp9_done_reg;
reg    ap_block_pp0_stage10_subdone_grp9;
reg    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage5_grp25;
reg    ap_block_pp0_stage5_subdone_grp25_done_reg;
reg    ap_block_pp0_stage5_subdone_grp25;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11_grp10;
reg    ap_block_pp0_stage11_subdone_grp10_done_reg;
reg    ap_block_pp0_stage11_subdone_grp10;
reg    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage6_grp26;
reg    ap_block_pp0_stage6_subdone_grp26_done_reg;
reg    ap_block_pp0_stage6_subdone_grp26;
wire    ap_block_pp0_stage12_grp11;
wire    ap_block_pp0_stage7_grp27;
reg    ap_block_pp0_stage7_subdone_grp27_done_reg;
reg    ap_block_pp0_stage7_subdone_grp27;
wire    ap_block_pp0_stage13_grp13;
reg    ap_block_pp0_stage13_subdone_grp13_done_reg;
reg    ap_block_pp0_stage13_subdone_grp13;
wire    ap_block_pp0_stage8_grp28;
reg    ap_block_pp0_stage8_subdone_grp28_done_reg;
reg    ap_block_pp0_stage8_subdone_grp28;
wire    ap_block_pp0_stage14_grp15;
reg    ap_block_pp0_stage14_subdone_grp15_done_reg;
reg    ap_block_pp0_stage14_subdone_grp15;
wire    ap_block_pp0_stage9_grp29;
reg    ap_block_pp0_stage9_subdone_grp29_done_reg;
reg    ap_block_pp0_stage9_subdone_grp29;
wire    ap_block_pp0_stage15_grp17;
wire    ap_block_pp0_stage10_grp30;
reg    ap_block_pp0_stage10_subdone_grp30_done_reg;
reg    ap_block_pp0_stage10_subdone_grp30;
wire    ap_block_pp0_stage0_grp19;
reg    ap_block_pp0_stage0_subdone_grp19_done_reg;
reg    ap_block_pp0_stage0_subdone_grp19;
wire    ap_block_pp0_stage11_grp31;
reg    ap_block_pp0_stage11_subdone_grp31_done_reg;
reg    ap_block_pp0_stage11_subdone_grp31;
wire    ap_block_pp0_stage1_grp21;
reg    ap_block_pp0_stage1_subdone_grp21_done_reg;
reg    ap_block_pp0_stage1_subdone_grp21;
wire    ap_block_pp0_stage12_grp32;
reg    mat_stream_blk_n;
reg   [63:0] mat_read_reg_1174;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_pp0_stage0_11001_grp0;
reg    ap_block_pp0_stage0_subdone_grp0_done_reg_iter0;
reg    ap_block_pp0_stage0_subdone_grp0;
wire   [0:0] icmp_ln25_fu_192_p2;
reg    ap_block_state17_pp0_stage0_iter1_grp18;
reg    ap_block_pp0_stage0_11001;
wire   [9:0] select_ln25_4_fu_229_p3;
reg   [9:0] select_ln25_4_reg_1198;
wire    ap_block_pp0_stage1_11001_grp0;
reg    ap_block_pp0_stage1_subdone_grp0_done_reg;
wire    ap_block_pp0_stage1_subdone_grp0;
wire   [9:0] tmp_fu_263_p4;
reg   [9:0] tmp_reg_1208;
reg   [63:0] gmem2_addr_reg_1213;
reg   [7:0] tmp_s_reg_1220;
wire   [19:0] zext_ln25_fu_338_p1;
reg   [19:0] zext_ln25_reg_1225;
wire    ap_block_pp0_stage2_11001_grp0;
reg    ap_block_pp0_stage2_subdone_grp0_done_reg;
wire    ap_block_pp0_stage2_subdone_grp0;
wire   [19:0] or_ln_fu_344_p3;
reg   [19:0] or_ln_reg_1230;
reg   [63:0] gmem2_addr_46_reg_1237;
wire   [10:0] zext_ln30_93_fu_394_p1;
reg   [10:0] zext_ln30_93_reg_1244;
wire    ap_block_pp0_stage3_11001_grp0;
reg    ap_block_pp0_stage3_subdone_grp0_done_reg;
wire    ap_block_pp0_stage3_subdone_grp0;
wire   [19:0] zext_ln30_96_fu_406_p1;
reg   [19:0] zext_ln30_96_reg_1249;
reg   [63:0] gmem2_addr_47_reg_1254;
wire   [11:0] zext_ln30_92_fu_452_p1;
reg   [11:0] zext_ln30_92_reg_1261;
wire    ap_block_pp0_stage4_11001_grp0;
reg    ap_block_pp0_stage4_subdone_grp0_done_reg;
wire    ap_block_pp0_stage4_subdone_grp0;
wire   [19:0] zext_ln30_98_fu_464_p1;
reg   [19:0] zext_ln30_98_reg_1267;
reg   [63:0] gmem2_addr_48_reg_1272;
wire   [19:0] zext_ln30_100_fu_518_p1;
reg   [19:0] zext_ln30_100_reg_1279;
wire    ap_block_pp0_stage5_11001_grp0;
reg    ap_block_pp0_stage5_subdone_grp0_done_reg;
wire    ap_block_pp0_stage5_subdone_grp0;
reg   [63:0] gmem2_addr_49_reg_1284;
wire   [19:0] or_ln30_4_fu_567_p3;
reg   [19:0] or_ln30_4_reg_1291;
wire    ap_block_pp0_stage6_11001_grp0;
reg    ap_block_pp0_stage6_subdone_grp0_done_reg;
wire    ap_block_pp0_stage6_subdone_grp0;
reg   [63:0] gmem2_addr_50_reg_1305;
reg   [63:0] gmem2_addr_51_reg_1312;
wire    ap_block_pp0_stage7_11001_grp0;
reg    ap_block_pp0_stage7_subdone_grp0_done_reg;
wire    ap_block_pp0_stage7_subdone_grp0;
reg   [63:0] gmem2_addr_52_reg_1319;
wire    ap_block_pp0_stage8_11001_grp0;
reg    ap_block_pp0_stage8_subdone_grp0_done_reg;
wire    ap_block_pp0_stage8_subdone_grp0;
reg   [63:0] gmem2_addr_53_reg_1326;
wire    ap_block_pp0_stage9_11001_grp0;
reg    ap_block_pp0_stage9_subdone_grp0_done_reg;
wire    ap_block_pp0_stage9_subdone_grp0;
reg   [63:0] gmem2_addr_54_reg_1333;
wire    ap_block_pp0_stage10_11001_grp0;
reg    ap_block_pp0_stage10_subdone_grp0_done_reg;
wire    ap_block_pp0_stage10_subdone_grp0;
wire   [12:0] zext_ln30_91_fu_808_p1;
reg   [12:0] zext_ln30_91_reg_1340;
wire    ap_block_pp0_stage11_11001_grp0;
reg    ap_block_pp0_stage11_subdone_grp0_done_reg;
wire    ap_block_pp0_stage11_subdone_grp0;
reg   [63:0] gmem2_addr_55_reg_1346;
reg   [63:0] gmem2_addr_56_reg_1353;
wire    ap_block_pp0_stage12_11001_grp0;
reg    ap_block_pp0_stage12_subdone_grp0_done_reg;
wire    ap_block_pp0_stage12_subdone_grp0;
reg   [63:0] gmem2_addr_57_reg_1360;
reg    ap_block_pp0_stage13_11001_grp0;
reg    ap_block_pp0_stage13_subdone_grp0_done_reg;
reg    ap_block_pp0_stage13_subdone_grp0;
reg   [63:0] gmem2_addr_58_reg_1367;
wire    ap_block_pp0_stage14_11001_grp0;
reg    ap_block_pp0_stage14_subdone_grp0_done_reg;
wire    ap_block_pp0_stage14_subdone_grp0;
reg   [63:0] gmem2_addr_59_reg_1374;
reg   [63:0] gmem2_addr_60_reg_1381;
wire  signed [63:0] sext_ln30_fu_302_p1;
wire    ap_block_pp0_stage1_grp0;
wire  signed [63:0] sext_ln30_46_fu_384_p1;
wire    ap_block_pp0_stage2_grp0;
wire  signed [63:0] sext_ln30_47_fu_442_p1;
wire    ap_block_pp0_stage3_grp0;
wire  signed [63:0] sext_ln30_48_fu_500_p1;
wire    ap_block_pp0_stage4_grp0;
wire  signed [63:0] sext_ln30_49_fu_554_p1;
wire    ap_block_pp0_stage5_grp0;
wire  signed [63:0] sext_ln30_50_fu_606_p1;
wire    ap_block_pp0_stage6_grp0;
wire  signed [63:0] sext_ln30_51_fu_650_p1;
wire    ap_block_pp0_stage7_grp0;
wire  signed [63:0] sext_ln30_52_fu_694_p1;
wire    ap_block_pp0_stage8_grp0;
wire  signed [63:0] sext_ln30_53_fu_738_p1;
wire    ap_block_pp0_stage9_grp0;
wire  signed [63:0] sext_ln30_54_fu_798_p1;
wire    ap_block_pp0_stage10_grp0;
wire  signed [63:0] sext_ln30_55_fu_856_p1;
wire    ap_block_pp0_stage11_grp0;
wire  signed [63:0] sext_ln30_56_fu_910_p1;
wire    ap_block_pp0_stage12_grp0;
wire  signed [63:0] sext_ln30_57_fu_964_p1;
wire    ap_block_pp0_stage13_grp0;
wire  signed [63:0] sext_ln30_58_fu_1027_p1;
wire    ap_block_pp0_stage14_grp0;
wire  signed [63:0] sext_ln30_59_fu_1082_p1;
wire  signed [63:0] sext_ln30_60_fu_1134_p1;
reg    ap_block_state3_io_grp1;
reg    ap_block_pp0_stage2_11001_grp1;
reg    ap_block_state4_io_grp2;
reg    ap_block_pp0_stage3_11001_grp2;
reg    ap_block_state5_io_grp3;
reg    ap_block_pp0_stage4_11001_grp3;
reg    ap_block_state6_io_grp4;
reg    ap_block_pp0_stage5_11001_grp4;
reg    ap_block_state7_io_grp5;
reg    ap_block_pp0_stage6_11001_grp5;
reg    ap_block_state8_io_grp6;
reg    ap_block_pp0_stage7_11001_grp6;
reg    ap_block_state9_io_grp7;
reg    ap_block_pp0_stage8_11001_grp7;
reg    ap_block_state10_io_grp8;
reg    ap_block_pp0_stage9_11001_grp8;
reg    ap_block_state11_io_grp9;
reg    ap_block_pp0_stage10_11001_grp9;
reg    ap_block_state12_io_grp10;
reg    ap_block_pp0_stage11_11001_grp10;
reg    ap_block_pp0_stage12_11001_grp11;
reg    ap_block_state14_io_grp13;
reg    ap_block_pp0_stage13_11001_grp13;
reg    ap_block_state15_io_grp15;
reg    ap_block_pp0_stage14_11001_grp15;
reg    ap_block_pp0_stage15_11001_grp17;
reg    ap_block_pp0_stage0_11001_grp19;
reg    ap_block_pp0_stage1_11001_grp21;
reg    ap_block_state14_pp0_stage13_iter0_grp12;
reg    ap_block_pp0_stage13_11001_grp12;
reg    ap_block_state15_pp0_stage14_iter0_grp14;
reg    ap_block_pp0_stage14_11001_grp14;
reg    ap_block_pp0_stage15_11001_grp16;
reg    ap_block_pp0_stage0_11001_grp18;
reg    ap_block_state18_pp0_stage1_iter1_grp20;
reg    ap_block_pp0_stage1_11001_grp20;
reg    ap_block_state19_pp0_stage2_iter1_grp22;
reg    ap_block_pp0_stage2_11001_grp22;
reg    ap_block_state20_pp0_stage3_iter1_grp23;
reg    ap_block_pp0_stage3_11001_grp23;
reg    ap_block_state21_pp0_stage4_iter1_grp24;
reg    ap_block_pp0_stage4_11001_grp24;
reg    ap_block_state22_pp0_stage5_iter1_grp25;
reg    ap_block_pp0_stage5_11001_grp25;
reg    ap_block_state23_pp0_stage6_iter1_grp26;
reg    ap_block_pp0_stage6_11001_grp26;
reg    ap_block_state24_pp0_stage7_iter1_grp27;
reg    ap_block_pp0_stage7_11001_grp27;
reg    ap_block_state25_pp0_stage8_iter1_grp28;
reg    ap_block_pp0_stage8_11001_grp28;
reg    ap_block_state26_pp0_stage9_iter1_grp29;
reg    ap_block_pp0_stage9_11001_grp29;
reg    ap_block_state27_pp0_stage10_iter1_grp30;
reg    ap_block_pp0_stage10_11001_grp30;
reg    ap_block_state28_pp0_stage11_iter1_grp31;
reg    ap_block_pp0_stage11_11001_grp31;
reg    ap_block_pp0_stage12_11001_grp32;
reg   [9:0] r_fu_120;
wire   [9:0] add_ln26_fu_322_p2;
wire    ap_loop_init;
reg   [9:0] c_fu_124;
reg   [15:0] indvar_flatten_fu_128;
wire   [15:0] add_ln25_fu_186_p2;
reg   [15:0] ap_sig_allocacmp_indvar_flatten_load;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage13_01001_grp12;
reg    ap_block_pp0_stage14_01001_grp14;
reg    ap_block_pp0_stage15_01001_grp16;
reg    ap_block_pp0_stage0_01001_grp18;
reg    ap_block_pp0_stage1_01001_grp20;
reg    ap_block_pp0_stage2_01001_grp22;
reg    ap_block_pp0_stage3_01001_grp23;
reg    ap_block_pp0_stage4_01001_grp24;
reg    ap_block_pp0_stage5_01001_grp25;
reg    ap_block_pp0_stage6_01001_grp26;
reg    ap_block_pp0_stage7_01001_grp27;
reg    ap_block_pp0_stage8_01001_grp28;
reg    ap_block_pp0_stage9_01001_grp29;
reg    ap_block_pp0_stage10_01001_grp30;
reg    ap_block_pp0_stage11_01001_grp31;
reg    ap_block_pp0_stage12_01001_grp32;
reg    mat_stream_write_local;
wire   [0:0] icmp_ln26_fu_209_p2;
wire   [9:0] add_ln25_4_fu_223_p2;
wire   [9:0] select_ln25_fu_215_p3;
wire   [17:0] tmp_12_fu_245_p3;
wire   [19:0] p_shl_fu_237_p3;
wire   [19:0] zext_ln30_106_fu_253_p1;
wire   [19:0] sub_ln30_fu_257_p2;
wire   [21:0] shl_ln_fu_273_p4;
wire   [63:0] zext_ln30_94_fu_283_p1;
wire   [63:0] add_ln30_fu_287_p2;
wire   [61:0] trunc_ln_fu_292_p4;
wire   [19:0] add_ln30_115_fu_351_p2;
wire   [21:0] shl_ln30_s_fu_357_p3;
wire   [63:0] zext_ln30_95_fu_365_p1;
wire   [63:0] add_ln30_116_fu_369_p2;
wire   [61:0] trunc_ln30_s_fu_374_p4;
wire   [10:0] add_ln30_117_fu_400_p2;
wire   [19:0] add_ln30_118_fu_410_p2;
wire   [21:0] shl_ln30_43_fu_415_p3;
wire   [63:0] zext_ln30_97_fu_423_p1;
wire   [63:0] add_ln30_119_fu_427_p2;
wire   [61:0] trunc_ln30_43_fu_432_p4;
wire   [11:0] add_ln30_120_fu_458_p2;
wire   [19:0] add_ln30_121_fu_468_p2;
wire   [21:0] shl_ln30_44_fu_473_p3;
wire   [63:0] zext_ln30_99_fu_481_p1;
wire   [63:0] add_ln30_122_fu_485_p2;
wire   [61:0] trunc_ln30_44_fu_490_p4;
wire   [11:0] add_ln30_123_fu_513_p2;
wire   [19:0] add_ln30_124_fu_522_p2;
wire   [21:0] shl_ln30_45_fu_527_p3;
wire   [63:0] zext_ln30_101_fu_535_p1;
wire   [63:0] add_ln30_125_fu_539_p2;
wire   [61:0] trunc_ln30_45_fu_544_p4;
wire   [19:0] add_ln30_126_fu_574_p2;
wire   [21:0] shl_ln30_46_fu_579_p3;
wire   [63:0] zext_ln30_102_fu_587_p1;
wire   [63:0] add_ln30_127_fu_591_p2;
wire   [61:0] trunc_ln30_46_fu_596_p4;
wire   [19:0] add_ln30_128_fu_619_p2;
wire   [21:0] shl_ln30_47_fu_623_p3;
wire   [63:0] zext_ln30_103_fu_631_p1;
wire   [63:0] add_ln30_129_fu_635_p2;
wire   [61:0] trunc_ln30_47_fu_640_p4;
wire   [19:0] add_ln30_130_fu_663_p2;
wire   [21:0] shl_ln30_48_fu_667_p3;
wire   [63:0] zext_ln30_104_fu_675_p1;
wire   [63:0] add_ln30_131_fu_679_p2;
wire   [61:0] trunc_ln30_48_fu_684_p4;
wire   [19:0] add_ln30_132_fu_707_p2;
wire   [21:0] shl_ln30_49_fu_711_p3;
wire   [63:0] zext_ln30_105_fu_719_p1;
wire   [63:0] add_ln30_133_fu_723_p2;
wire   [61:0] trunc_ln30_49_fu_728_p4;
wire   [10:0] or_ln30_s_fu_751_p3;
wire  signed [11:0] sext_ln30_61_fu_758_p1;
wire   [19:0] zext_ln30_114_fu_762_p1;
wire   [19:0] add_ln30_134_fu_766_p2;
wire   [21:0] shl_ln30_50_fu_771_p3;
wire   [63:0] zext_ln30_107_fu_779_p1;
wire   [63:0] add_ln30_135_fu_783_p2;
wire   [61:0] trunc_ln30_50_fu_788_p4;
wire   [12:0] add_ln30_136_fu_814_p2;
wire   [19:0] zext_ln30_108_fu_820_p1;
wire   [19:0] add_ln30_137_fu_824_p2;
wire   [21:0] shl_ln30_51_fu_829_p3;
wire   [63:0] zext_ln30_109_fu_837_p1;
wire   [63:0] add_ln30_138_fu_841_p2;
wire   [61:0] trunc_ln30_51_fu_846_p4;
wire   [12:0] add_ln30_139_fu_869_p2;
wire   [19:0] zext_ln30_110_fu_874_p1;
wire   [19:0] add_ln30_140_fu_878_p2;
wire   [21:0] shl_ln30_52_fu_883_p3;
wire   [63:0] zext_ln30_111_fu_891_p1;
wire   [63:0] add_ln30_141_fu_895_p2;
wire   [61:0] trunc_ln30_52_fu_900_p4;
wire   [12:0] add_ln30_142_fu_923_p2;
wire   [19:0] zext_ln30_112_fu_928_p1;
wire   [19:0] add_ln30_143_fu_932_p2;
wire   [21:0] shl_ln30_53_fu_937_p3;
wire   [63:0] zext_ln30_113_fu_945_p1;
wire   [63:0] add_ln30_144_fu_949_p2;
wire   [61:0] trunc_ln30_53_fu_954_p4;
wire   [11:0] or_ln30_1_fu_980_p3;
wire  signed [12:0] sext_ln30_62_fu_987_p1;
wire   [19:0] zext_ln30_115_fu_991_p1;
wire   [19:0] add_ln30_145_fu_995_p2;
wire   [21:0] shl_ln30_54_fu_1000_p3;
wire   [63:0] zext_ln30_116_fu_1008_p1;
wire   [63:0] add_ln30_146_fu_1012_p2;
wire   [61:0] trunc_ln30_54_fu_1017_p4;
wire   [11:0] add_ln30_147_fu_1037_p2;
wire  signed [12:0] sext_ln30_63_fu_1042_p1;
wire   [19:0] zext_ln30_117_fu_1046_p1;
wire   [19:0] add_ln30_148_fu_1050_p2;
wire   [21:0] shl_ln30_55_fu_1055_p3;
wire   [63:0] zext_ln30_118_fu_1063_p1;
wire   [63:0] add_ln30_149_fu_1067_p2;
wire   [61:0] trunc_ln30_55_fu_1072_p4;
wire   [13:0] zext_ln30_fu_974_p1;
wire   [13:0] add_ln30_150_fu_1092_p2;
wire   [19:0] zext_ln30_119_fu_1098_p1;
wire   [19:0] add_ln30_151_fu_1102_p2;
wire   [21:0] shl_ln30_56_fu_1107_p3;
wire   [63:0] zext_ln30_120_fu_1115_p1;
wire   [63:0] add_ln30_152_fu_1119_p2;
wire   [61:0] trunc_ln30_56_fu_1124_p4;
wire    ap_continue_int;
reg    ap_done_int;
reg   [15:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
reg    ap_condition_1327;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_block_pp0_stage12_subdone_grp11_done_reg = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_block_pp0_stage12_subdone_grp32_done_reg = 1'b0;
#0 ap_block_pp0_stage15_subdone_grp16_done_reg = 1'b0;
#0 ap_block_pp0_stage15_subdone_grp17_done_reg = 1'b0;
#0 ap_block_pp0_stage2_subdone_grp1_done_reg = 1'b0;
#0 ap_block_pp0_stage13_subdone_grp12_done_reg = 1'b0;
#0 ap_block_pp0_stage3_subdone_grp2_done_reg = 1'b0;
#0 ap_block_pp0_stage14_subdone_grp14_done_reg = 1'b0;
#0 ap_block_pp0_stage4_subdone_grp3_done_reg = 1'b0;
#0 ap_block_pp0_stage5_subdone_grp4_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp18_done_reg = 1'b0;
#0 ap_block_pp0_stage6_subdone_grp5_done_reg = 1'b0;
#0 ap_block_pp0_stage1_subdone_grp20_done_reg = 1'b0;
#0 ap_block_pp0_stage7_subdone_grp6_done_reg = 1'b0;
#0 ap_block_pp0_stage2_subdone_grp22_done_reg = 1'b0;
#0 ap_block_pp0_stage8_subdone_grp7_done_reg = 1'b0;
#0 ap_block_pp0_stage3_subdone_grp23_done_reg = 1'b0;
#0 ap_block_pp0_stage9_subdone_grp8_done_reg = 1'b0;
#0 ap_block_pp0_stage4_subdone_grp24_done_reg = 1'b0;
#0 ap_block_pp0_stage10_subdone_grp9_done_reg = 1'b0;
#0 ap_block_pp0_stage5_subdone_grp25_done_reg = 1'b0;
#0 ap_block_pp0_stage11_subdone_grp10_done_reg = 1'b0;
#0 ap_block_pp0_stage6_subdone_grp26_done_reg = 1'b0;
#0 ap_block_pp0_stage7_subdone_grp27_done_reg = 1'b0;
#0 ap_block_pp0_stage13_subdone_grp13_done_reg = 1'b0;
#0 ap_block_pp0_stage8_subdone_grp28_done_reg = 1'b0;
#0 ap_block_pp0_stage14_subdone_grp15_done_reg = 1'b0;
#0 ap_block_pp0_stage9_subdone_grp29_done_reg = 1'b0;
#0 ap_block_pp0_stage10_subdone_grp30_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp19_done_reg = 1'b0;
#0 ap_block_pp0_stage11_subdone_grp31_done_reg = 1'b0;
#0 ap_block_pp0_stage1_subdone_grp21_done_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp0_done_reg_iter0 = 1'b0;
#0 ap_block_pp0_stage1_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage2_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage3_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage4_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage5_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage6_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage7_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage8_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage9_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage10_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage11_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage12_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage13_subdone_grp0_done_reg = 1'b0;
#0 ap_block_pp0_stage14_subdone_grp0_done_reg = 1'b0;
#0 r_fu_120 = 10'd0;
#0 c_fu_124 = 10'd0;
#0 indvar_flatten_fu_128 = 16'd0;
end

llama_layer_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage12),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp0_done_reg_iter0 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp0_done_reg_iter0 <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp0)) begin
                ap_block_pp0_stage0_subdone_grp0_done_reg_iter0 <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp18_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp18_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp18)) begin
                ap_block_pp0_stage0_subdone_grp18_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp19_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp19_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp19)) begin
                ap_block_pp0_stage0_subdone_grp19_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage10_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage10)) begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_block_pp0_stage10_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage10_subdone_grp0)) begin
                ap_block_pp0_stage10_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage10_subdone_grp30_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage10)) begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_block_pp0_stage10_subdone_grp30_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage10_subdone_grp30)) begin
                ap_block_pp0_stage10_subdone_grp30_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage10_subdone_grp9_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage10)) begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_block_pp0_stage10_subdone_grp9_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage10_subdone_grp9)) begin
                ap_block_pp0_stage10_subdone_grp9_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage11_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_block_pp0_stage11_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage11_subdone_grp0)) begin
                ap_block_pp0_stage11_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage11_subdone_grp10_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_block_pp0_stage11_subdone_grp10_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage11_subdone_grp10)) begin
                ap_block_pp0_stage11_subdone_grp10_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage11_subdone_grp31_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage11)) begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_block_pp0_stage11_subdone_grp31_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage11_subdone_grp31)) begin
                ap_block_pp0_stage11_subdone_grp31_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage12_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage12)) begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_block_pp0_stage12_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage12_subdone_grp0)) begin
                ap_block_pp0_stage12_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage12_subdone_grp11_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage12)) begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_block_pp0_stage12_subdone_grp11_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage12_subdone_grp11)) begin
                ap_block_pp0_stage12_subdone_grp11_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage12_subdone_grp32_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage12)) begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_block_pp0_stage12_subdone_grp32_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage12_subdone_grp32)) begin
                ap_block_pp0_stage12_subdone_grp32_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage13_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage13)) begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_block_pp0_stage13_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage13_subdone_grp0)) begin
                ap_block_pp0_stage13_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage13_subdone_grp12_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage13)) begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_block_pp0_stage13_subdone_grp12_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage13_subdone_grp12)) begin
                ap_block_pp0_stage13_subdone_grp12_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage13_subdone_grp13_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage13)) begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_block_pp0_stage13_subdone_grp13_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage13_subdone_grp13)) begin
                ap_block_pp0_stage13_subdone_grp13_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage14_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage14)) begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_block_pp0_stage14_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage14_subdone_grp0)) begin
                ap_block_pp0_stage14_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage14_subdone_grp14_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage14)) begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_block_pp0_stage14_subdone_grp14_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage14_subdone_grp14)) begin
                ap_block_pp0_stage14_subdone_grp14_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage14_subdone_grp15_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage14)) begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_block_pp0_stage14_subdone_grp15_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage14_subdone_grp15)) begin
                ap_block_pp0_stage14_subdone_grp15_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage15_subdone_grp16_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage15)) begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_block_pp0_stage15_subdone_grp16_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage15_subdone_grp16)) begin
                ap_block_pp0_stage15_subdone_grp16_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage15_subdone_grp17_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage15)) begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_block_pp0_stage15_subdone_grp17_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage15_subdone_grp17)) begin
                ap_block_pp0_stage15_subdone_grp17_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp0)) begin
                ap_block_pp0_stage1_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp20_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp20_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp20)) begin
                ap_block_pp0_stage1_subdone_grp20_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp21_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp21_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp21)) begin
                ap_block_pp0_stage1_subdone_grp21_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage2_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_block_pp0_stage2_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone_grp0)) begin
                ap_block_pp0_stage2_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage2_subdone_grp1_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_block_pp0_stage2_subdone_grp1_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone_grp1)) begin
                ap_block_pp0_stage2_subdone_grp1_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage2_subdone_grp22_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage2)) begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_block_pp0_stage2_subdone_grp22_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone_grp22)) begin
                ap_block_pp0_stage2_subdone_grp22_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage3_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_block_pp0_stage3_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone_grp0)) begin
                ap_block_pp0_stage3_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage3_subdone_grp23_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_block_pp0_stage3_subdone_grp23_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone_grp23)) begin
                ap_block_pp0_stage3_subdone_grp23_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage3_subdone_grp2_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage3)) begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_block_pp0_stage3_subdone_grp2_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone_grp2)) begin
                ap_block_pp0_stage3_subdone_grp2_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage4_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_block_pp0_stage4_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage4_subdone_grp0)) begin
                ap_block_pp0_stage4_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage4_subdone_grp24_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_block_pp0_stage4_subdone_grp24_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage4_subdone_grp24)) begin
                ap_block_pp0_stage4_subdone_grp24_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage4_subdone_grp3_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage4)) begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_block_pp0_stage4_subdone_grp3_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage4_subdone_grp3)) begin
                ap_block_pp0_stage4_subdone_grp3_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage5_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_block_pp0_stage5_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage5_subdone_grp0)) begin
                ap_block_pp0_stage5_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage5_subdone_grp25_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_block_pp0_stage5_subdone_grp25_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage5_subdone_grp25)) begin
                ap_block_pp0_stage5_subdone_grp25_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage5_subdone_grp4_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage5)) begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_block_pp0_stage5_subdone_grp4_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage5_subdone_grp4)) begin
                ap_block_pp0_stage5_subdone_grp4_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage6_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_block_pp0_stage6_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage6_subdone_grp0)) begin
                ap_block_pp0_stage6_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage6_subdone_grp26_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_block_pp0_stage6_subdone_grp26_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage6_subdone_grp26)) begin
                ap_block_pp0_stage6_subdone_grp26_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage6_subdone_grp5_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage6)) begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_block_pp0_stage6_subdone_grp5_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage6_subdone_grp5)) begin
                ap_block_pp0_stage6_subdone_grp5_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage7_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_block_pp0_stage7_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage7_subdone_grp0)) begin
                ap_block_pp0_stage7_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage7_subdone_grp27_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_block_pp0_stage7_subdone_grp27_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage7_subdone_grp27)) begin
                ap_block_pp0_stage7_subdone_grp27_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage7_subdone_grp6_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage7)) begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_block_pp0_stage7_subdone_grp6_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage7_subdone_grp6)) begin
                ap_block_pp0_stage7_subdone_grp6_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage8_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage8)) begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_block_pp0_stage8_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage8_subdone_grp0)) begin
                ap_block_pp0_stage8_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage8_subdone_grp28_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage8)) begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_block_pp0_stage8_subdone_grp28_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage8_subdone_grp28)) begin
                ap_block_pp0_stage8_subdone_grp28_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage8_subdone_grp7_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage8)) begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_block_pp0_stage8_subdone_grp7_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage8_subdone_grp7)) begin
                ap_block_pp0_stage8_subdone_grp7_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage9_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage9)) begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_block_pp0_stage9_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage9_subdone_grp0)) begin
                ap_block_pp0_stage9_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage9_subdone_grp29_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage9)) begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_block_pp0_stage9_subdone_grp29_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage9_subdone_grp29)) begin
                ap_block_pp0_stage9_subdone_grp29_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage9_subdone_grp8_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage9)) begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_block_pp0_stage9_subdone_grp8_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage9_subdone_grp8)) begin
                ap_block_pp0_stage9_subdone_grp8_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage12_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage12)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        c_fu_124 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0) & (icmp_ln25_reg_1194 == 1'd0))) begin
        c_fu_124 <= select_ln25_4_fu_229_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1327)) begin
        if ((icmp_ln25_fu_192_p2 == 1'd0)) begin
            indvar_flatten_fu_128 <= add_ln25_fu_186_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_128 <= 16'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        r_fu_120 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0) & (icmp_ln25_reg_1194 == 1'd0))) begin
        r_fu_120 <= add_ln26_fu_322_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp0))) begin
        gmem2_addr_46_reg_1237 <= sext_ln30_46_fu_384_p1;
        or_ln_reg_1230[19 : 10] <= or_ln_fu_344_p3[19 : 10];
        zext_ln25_reg_1225[9 : 0] <= zext_ln25_fu_338_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp0))) begin
        gmem2_addr_47_reg_1254 <= sext_ln30_47_fu_442_p1;
        zext_ln30_93_reg_1244[9 : 0] <= zext_ln30_93_fu_394_p1[9 : 0];
        zext_ln30_96_reg_1249[10 : 0] <= zext_ln30_96_fu_406_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage4_11001_grp0))) begin
        gmem2_addr_48_reg_1272 <= sext_ln30_48_fu_500_p1;
        zext_ln30_92_reg_1261[9 : 0] <= zext_ln30_92_fu_452_p1[9 : 0];
        zext_ln30_98_reg_1267[11 : 0] <= zext_ln30_98_fu_464_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage5_11001_grp0))) begin
        gmem2_addr_49_reg_1284 <= sext_ln30_49_fu_554_p1;
        zext_ln30_100_reg_1279[11 : 0] <= zext_ln30_100_fu_518_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage6_11001_grp0))) begin
        gmem2_addr_50_reg_1305 <= sext_ln30_50_fu_606_p1;
        or_ln30_4_reg_1291[19 : 12] <= or_ln30_4_fu_567_p3[19 : 12];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage7_11001_grp0))) begin
        gmem2_addr_51_reg_1312 <= sext_ln30_51_fu_650_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage8_11001_grp0))) begin
        gmem2_addr_52_reg_1319 <= sext_ln30_52_fu_694_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage9_11001_grp0))) begin
        gmem2_addr_53_reg_1326 <= sext_ln30_53_fu_738_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage10_11001_grp0))) begin
        gmem2_addr_54_reg_1333 <= sext_ln30_54_fu_798_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage11_11001_grp0))) begin
        gmem2_addr_55_reg_1346 <= sext_ln30_55_fu_856_p1;
        zext_ln30_91_reg_1340[9 : 0] <= zext_ln30_91_fu_808_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage12_11001_grp0))) begin
        gmem2_addr_56_reg_1353 <= sext_ln30_56_fu_910_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage13_11001_grp0))) begin
        gmem2_addr_57_reg_1360 <= sext_ln30_57_fu_964_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage14_11001_grp0))) begin
        gmem2_addr_58_reg_1367 <= sext_ln30_58_fu_1027_p1;
        gmem2_addr_59_reg_1374 <= sext_ln30_59_fu_1082_p1;
        gmem2_addr_60_reg_1381 <= sext_ln30_60_fu_1134_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp0))) begin
        gmem2_addr_reg_1213 <= sext_ln30_fu_302_p1;
        select_ln25_4_reg_1198 <= select_ln25_4_fu_229_p3;
        tmp_reg_1208 <= {{sub_ln30_fu_257_p2[19:10]}};
        tmp_s_reg_1220 <= {{sub_ln30_fu_257_p2[19:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln25_reg_1194 <= icmp_ln25_fu_192_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg_iter0) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        mat_read_reg_1174 <= mat;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage12_subdone) & (icmp_ln25_reg_1194 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage12 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage12 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage12_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 16'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_128;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone_grp10_done_reg) & (1'b0 == ap_block_pp0_stage11_grp10) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage12_grp11) & (1'b0 == ap_block_pp0_stage12_subdone_grp11_done_reg) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_subdone_grp9_done_reg) & (1'b0 == ap_block_pp0_stage10_grp9) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage9_subdone_grp8_done_reg) & (1'b0 == ap_block_pp0_stage9_grp8) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage8_subdone_grp7_done_reg) & (1'b0 == ap_block_pp0_stage8_grp7) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage7) 
    & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp6_done_reg) & (1'b0 == ap_block_pp0_stage7_grp6) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp5_done_reg) & (1'b0 == ap_block_pp0_stage6_grp5) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone_grp4_done_reg) & (1'b0 == ap_block_pp0_stage5_grp4) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage4_subdone_grp3_done_reg) & (1'b0 == ap_block_pp0_stage4_grp3) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_subdone_grp15_done_reg) & (1'b0 == ap_block_pp0_stage14_grp15) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0_reg == 1'b1) 
    & (1'b0 == ap_block_pp0_stage3_subdone_grp2_done_reg) & (1'b0 == ap_block_pp0_stage3_grp2) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage13_subdone_grp13_done_reg) & (1'b0 == ap_block_pp0_stage13_grp13) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp1_done_reg) & (1'b0 == ap_block_pp0_stage2_grp1) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_grp17) & (1'b0 == ap_block_pp0_stage15_subdone_grp17_done_reg) & (icmp_ln25_reg_1194 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp21_done_reg) & (1'b0 == ap_block_pp0_stage1_grp21)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp19_done_reg) & (1'b0 == ap_block_pp0_stage0_grp19)))) begin
        gmem2_blk_n_AR = m_axi_gmem2_0_ARREADY;
    end else begin
        gmem2_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_subdone_grp14_done_reg) & (1'b0 == ap_block_pp0_stage14_grp14) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage13_subdone_grp12_done_reg) & (1'b0 == ap_block_pp0_stage13_grp12) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_grp16) & (1'b0 == ap_block_pp0_stage15_subdone_grp16_done_reg) & (icmp_ln25_reg_1194 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_subdone_grp31_done_reg) & (1'b0 == ap_block_pp0_stage11_grp31)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_grp32) & (1'b0 == ap_block_pp0_stage12_subdone_grp32_done_reg)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_subdone_grp30_done_reg) 
    & (1'b0 == ap_block_pp0_stage10_grp30)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_subdone_grp29_done_reg) & (1'b0 == ap_block_pp0_stage9_grp29)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone_grp28_done_reg) & (1'b0 == ap_block_pp0_stage8_grp28)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone_grp27_done_reg) & (1'b0 == ap_block_pp0_stage7_grp27)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp20_done_reg) & (1'b0 == ap_block_pp0_stage1_grp20)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_subdone_grp26_done_reg) & (1'b0 == ap_block_pp0_stage6_grp26)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp18_done_reg) & (1'b0 == ap_block_pp0_stage0_grp18)) | 
    ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone_grp25_done_reg) & (1'b0 == ap_block_pp0_stage5_grp25)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone_grp24_done_reg) & (1'b0 == ap_block_pp0_stage4_grp24)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone_grp23_done_reg) & (1'b0 == ap_block_pp0_stage3_grp23)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp22_done_reg) & (1'b0 == ap_block_pp0_stage2_grp22)))) begin
        gmem2_blk_n_R = m_axi_gmem2_0_RVALID;
    end else begin
        gmem2_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp21_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp21))) begin
        m_axi_gmem2_0_ARADDR = gmem2_addr_60_reg_1381;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp19_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp19))) begin
        m_axi_gmem2_0_ARADDR = gmem2_addr_59_reg_1374;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone_grp17_done_reg) & (1'b0 == ap_block_pp0_stage15_11001_grp17) & (icmp_ln25_reg_1194 == 1'd0))) begin
        m_axi_gmem2_0_ARADDR = gmem2_addr_58_reg_1367;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_subdone_grp15_done_reg) & (1'b0 == ap_block_pp0_stage14_11001_grp15) & (icmp_ln25_reg_1194 == 1'd0))) begin
        m_axi_gmem2_0_ARADDR = gmem2_addr_57_reg_1360;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage13_subdone_grp13_done_reg) & (1'b0 == ap_block_pp0_stage13_11001_grp13) & (icmp_ln25_reg_1194 == 1'd0))) begin
        m_axi_gmem2_0_ARADDR = gmem2_addr_56_reg_1353;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage12_subdone_grp11_done_reg) & (1'b0 == ap_block_pp0_stage12_11001_grp11) & (icmp_ln25_reg_1194 == 1'd0))) begin
        m_axi_gmem2_0_ARADDR = gmem2_addr_55_reg_1346;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone_grp10_done_reg) & (1'b0 == ap_block_pp0_stage11_11001_grp10) & (icmp_ln25_reg_1194 == 1'd0))) begin
        m_axi_gmem2_0_ARADDR = gmem2_addr_54_reg_1333;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_subdone_grp9_done_reg) & (1'b0 == ap_block_pp0_stage10_11001_grp9) & (icmp_ln25_reg_1194 == 1'd0))) begin
        m_axi_gmem2_0_ARADDR = gmem2_addr_53_reg_1326;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage9_subdone_grp8_done_reg) & (1'b0 == ap_block_pp0_stage9_11001_grp8) & (icmp_ln25_reg_1194 == 1'd0))) begin
        m_axi_gmem2_0_ARADDR = gmem2_addr_52_reg_1319;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage8_subdone_grp7_done_reg) & (1'b0 == ap_block_pp0_stage8_11001_grp7) & (icmp_ln25_reg_1194 == 1'd0))) begin
        m_axi_gmem2_0_ARADDR = gmem2_addr_51_reg_1312;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp6_done_reg) & (1'b0 == ap_block_pp0_stage7_11001_grp6) & (icmp_ln25_reg_1194 == 1'd0))) begin
        m_axi_gmem2_0_ARADDR = gmem2_addr_50_reg_1305;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp5_done_reg) & (1'b0 == ap_block_pp0_stage6_11001_grp5) & (icmp_ln25_reg_1194 == 1'd0))) begin
        m_axi_gmem2_0_ARADDR = gmem2_addr_49_reg_1284;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone_grp4_done_reg) & (1'b0 == ap_block_pp0_stage5_11001_grp4) & (icmp_ln25_reg_1194 == 1'd0))) begin
        m_axi_gmem2_0_ARADDR = gmem2_addr_48_reg_1272;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage4_subdone_grp3_done_reg) & (1'b0 == ap_block_pp0_stage4_11001_grp3) & (icmp_ln25_reg_1194 == 1'd0))) begin
        m_axi_gmem2_0_ARADDR = gmem2_addr_47_reg_1254;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp2_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp2) & (icmp_ln25_reg_1194 == 1'd0))) begin
        m_axi_gmem2_0_ARADDR = gmem2_addr_46_reg_1237;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001_grp1) & (1'b0 == ap_block_pp0_stage2_subdone_grp1_done_reg) & (icmp_ln25_reg_1194 == 1'd0))) begin
        m_axi_gmem2_0_ARADDR = gmem2_addr_reg_1213;
    end else begin
        m_axi_gmem2_0_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone_grp10_done_reg) & (1'b0 == ap_block_pp0_stage11_11001_grp10) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage12_subdone_grp11_done_reg) & (1'b0 == ap_block_pp0_stage12_11001_grp11) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_subdone_grp9_done_reg) & (1'b0 == ap_block_pp0_stage10_11001_grp9) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage9_subdone_grp8_done_reg) & (1'b0 == ap_block_pp0_stage9_11001_grp8) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage8_subdone_grp7_done_reg) & (1'b0 == ap_block_pp0_stage8_11001_grp7) & (icmp_ln25_reg_1194 == 1'd0)) 
    | ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp6_done_reg) & (1'b0 == ap_block_pp0_stage7_11001_grp6) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp5_done_reg) & (1'b0 == ap_block_pp0_stage6_11001_grp5) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone_grp4_done_reg) & (1'b0 == ap_block_pp0_stage5_11001_grp4) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage4_subdone_grp3_done_reg) & (1'b0 == ap_block_pp0_stage4_11001_grp3) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_subdone_grp15_done_reg) & (1'b0 == ap_block_pp0_stage14_11001_grp15) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 
    == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp2_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp2) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage13_subdone_grp13_done_reg) & (1'b0 == ap_block_pp0_stage13_11001_grp13) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001_grp1) & (1'b0 == ap_block_pp0_stage2_subdone_grp1_done_reg) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone_grp17_done_reg) & (1'b0 == ap_block_pp0_stage15_11001_grp17) & (icmp_ln25_reg_1194 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp21_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp21)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 
    == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp19_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp19)))) begin
        m_axi_gmem2_0_ARVALID = 1'b1;
    end else begin
        m_axi_gmem2_0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_subdone_grp14_done_reg) & (1'b0 == ap_block_pp0_stage14_11001_grp14) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage13_subdone_grp12_done_reg) & (1'b0 == ap_block_pp0_stage13_11001_grp12) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone_grp16_done_reg) & (1'b0 == ap_block_pp0_stage15_11001_grp16) & (icmp_ln25_reg_1194 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_subdone_grp31_done_reg) & (1'b0 == ap_block_pp0_stage11_11001_grp31)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_subdone_grp32_done_reg) & (1'b0 == ap_block_pp0_stage12_11001_grp32)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) 
    & (1'b0 == ap_block_pp0_stage10_subdone_grp30_done_reg) & (1'b0 == ap_block_pp0_stage10_11001_grp30)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_subdone_grp29_done_reg) & (1'b0 == ap_block_pp0_stage9_11001_grp29)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone_grp28_done_reg) & (1'b0 == ap_block_pp0_stage8_11001_grp28)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone_grp27_done_reg) & (1'b0 == ap_block_pp0_stage7_11001_grp27)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp20_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp20)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_subdone_grp26_done_reg) & (1'b0 == ap_block_pp0_stage6_11001_grp26)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 
    == ap_block_pp0_stage0_subdone_grp18_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp18)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone_grp25_done_reg) & (1'b0 == ap_block_pp0_stage5_11001_grp25)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone_grp24_done_reg) & (1'b0 == ap_block_pp0_stage4_11001_grp24)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone_grp23_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp23)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp22_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp22)))) begin
        m_axi_gmem2_0_RREADY = 1'b1;
    end else begin
        m_axi_gmem2_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_subdone_grp14_done_reg) & (1'b0 == ap_block_pp0_stage14_grp14) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage13_subdone_grp12_done_reg) & (1'b0 == ap_block_pp0_stage13_grp12) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_grp16) & (1'b0 == ap_block_pp0_stage15_subdone_grp16_done_reg) & (icmp_ln25_reg_1194 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_subdone_grp31_done_reg) & (1'b0 == ap_block_pp0_stage11_grp31)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_grp32) & (1'b0 == ap_block_pp0_stage12_subdone_grp32_done_reg)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_subdone_grp30_done_reg) 
    & (1'b0 == ap_block_pp0_stage10_grp30)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_subdone_grp29_done_reg) & (1'b0 == ap_block_pp0_stage9_grp29)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone_grp28_done_reg) & (1'b0 == ap_block_pp0_stage8_grp28)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone_grp27_done_reg) & (1'b0 == ap_block_pp0_stage7_grp27)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp20_done_reg) & (1'b0 == ap_block_pp0_stage1_grp20)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_subdone_grp26_done_reg) & (1'b0 == ap_block_pp0_stage6_grp26)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone_grp18_done_reg) & (1'b0 == ap_block_pp0_stage0_grp18)) | 
    ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone_grp25_done_reg) & (1'b0 == ap_block_pp0_stage5_grp25)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone_grp24_done_reg) & (1'b0 == ap_block_pp0_stage4_grp24)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone_grp23_done_reg) & (1'b0 == ap_block_pp0_stage3_grp23)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp22_done_reg) & (1'b0 == ap_block_pp0_stage2_grp22)))) begin
        mat_stream_blk_n = mat_stream_full_n;
    end else begin
        mat_stream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_subdone_grp14_done_reg) & (1'b0 == ap_block_pp0_stage14_11001_grp14) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage13_subdone_grp12_done_reg) & (1'b0 == ap_block_pp0_stage13_11001_grp12) & (icmp_ln25_reg_1194 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone_grp16_done_reg) & (1'b0 == ap_block_pp0_stage15_11001_grp16) & (icmp_ln25_reg_1194 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_subdone_grp31_done_reg) & (1'b0 == ap_block_pp0_stage11_11001_grp31)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_subdone_grp32_done_reg) & (1'b0 == ap_block_pp0_stage12_11001_grp32)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) 
    & (1'b0 == ap_block_pp0_stage10_subdone_grp30_done_reg) & (1'b0 == ap_block_pp0_stage10_11001_grp30)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_subdone_grp29_done_reg) & (1'b0 == ap_block_pp0_stage9_11001_grp29)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone_grp28_done_reg) & (1'b0 == ap_block_pp0_stage8_11001_grp28)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone_grp27_done_reg) & (1'b0 == ap_block_pp0_stage7_11001_grp27)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone_grp20_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp20)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_subdone_grp26_done_reg) & (1'b0 == ap_block_pp0_stage6_11001_grp26)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 
    == ap_block_pp0_stage0_subdone_grp18_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp18)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone_grp25_done_reg) & (1'b0 == ap_block_pp0_stage5_11001_grp25)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone_grp24_done_reg) & (1'b0 == ap_block_pp0_stage4_11001_grp24)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone_grp23_done_reg) & (1'b0 == ap_block_pp0_stage3_11001_grp23)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone_grp22_done_reg) & (1'b0 == ap_block_pp0_stage2_11001_grp22)))) begin
        mat_stream_write_local = 1'b1;
    end else begin
        mat_stream_write_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage12)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln25_4_fu_223_p2 = (c_fu_124 + 10'd1);

assign add_ln25_fu_186_p2 = (ap_sig_allocacmp_indvar_flatten_load + 16'd1);

assign add_ln26_fu_322_p2 = (select_ln25_fu_215_p3 + 10'd16);

assign add_ln30_115_fu_351_p2 = (or_ln_fu_344_p3 + zext_ln25_fu_338_p1);

assign add_ln30_116_fu_369_p2 = (zext_ln30_95_fu_365_p1 + mat_read_reg_1174);

assign add_ln30_117_fu_400_p2 = (zext_ln30_93_fu_394_p1 + 11'd768);

assign add_ln30_118_fu_410_p2 = (or_ln_reg_1230 + zext_ln30_96_fu_406_p1);

assign add_ln30_119_fu_427_p2 = (zext_ln30_97_fu_423_p1 + mat_read_reg_1174);

assign add_ln30_120_fu_458_p2 = (zext_ln30_92_fu_452_p1 + 12'd1536);

assign add_ln30_121_fu_468_p2 = (or_ln_reg_1230 + zext_ln30_98_fu_464_p1);

assign add_ln30_122_fu_485_p2 = (zext_ln30_99_fu_481_p1 + mat_read_reg_1174);

assign add_ln30_123_fu_513_p2 = ($signed(zext_ln30_92_reg_1261) + $signed(12'd2304));

assign add_ln30_124_fu_522_p2 = (or_ln_reg_1230 + zext_ln30_100_fu_518_p1);

assign add_ln30_125_fu_539_p2 = (zext_ln30_101_fu_535_p1 + mat_read_reg_1174);

assign add_ln30_126_fu_574_p2 = (or_ln30_4_fu_567_p3 + zext_ln25_reg_1225);

assign add_ln30_127_fu_591_p2 = (zext_ln30_102_fu_587_p1 + mat_read_reg_1174);

assign add_ln30_128_fu_619_p2 = (or_ln30_4_reg_1291 + zext_ln30_96_reg_1249);

assign add_ln30_129_fu_635_p2 = (zext_ln30_103_fu_631_p1 + mat_read_reg_1174);

assign add_ln30_130_fu_663_p2 = (or_ln30_4_reg_1291 + zext_ln30_98_reg_1267);

assign add_ln30_131_fu_679_p2 = (zext_ln30_104_fu_675_p1 + mat_read_reg_1174);

assign add_ln30_132_fu_707_p2 = (or_ln30_4_reg_1291 + zext_ln30_100_reg_1279);

assign add_ln30_133_fu_723_p2 = (zext_ln30_105_fu_719_p1 + mat_read_reg_1174);

assign add_ln30_134_fu_766_p2 = (or_ln30_4_reg_1291 + zext_ln30_114_fu_762_p1);

assign add_ln30_135_fu_783_p2 = (zext_ln30_107_fu_779_p1 + mat_read_reg_1174);

assign add_ln30_136_fu_814_p2 = (zext_ln30_91_fu_808_p1 + 13'd3840);

assign add_ln30_137_fu_824_p2 = (or_ln30_4_reg_1291 + zext_ln30_108_fu_820_p1);

assign add_ln30_138_fu_841_p2 = (zext_ln30_109_fu_837_p1 + mat_read_reg_1174);

assign add_ln30_139_fu_869_p2 = ($signed(zext_ln30_91_reg_1340) + $signed(13'd4608));

assign add_ln30_140_fu_878_p2 = (or_ln30_4_reg_1291 + zext_ln30_110_fu_874_p1);

assign add_ln30_141_fu_895_p2 = (zext_ln30_111_fu_891_p1 + mat_read_reg_1174);

assign add_ln30_142_fu_923_p2 = ($signed(zext_ln30_91_reg_1340) + $signed(13'd5376));

assign add_ln30_143_fu_932_p2 = (or_ln30_4_reg_1291 + zext_ln30_112_fu_928_p1);

assign add_ln30_144_fu_949_p2 = (zext_ln30_113_fu_945_p1 + mat_read_reg_1174);

assign add_ln30_145_fu_995_p2 = (or_ln30_4_reg_1291 + zext_ln30_115_fu_991_p1);

assign add_ln30_146_fu_1012_p2 = (zext_ln30_116_fu_1008_p1 + mat_read_reg_1174);

assign add_ln30_147_fu_1037_p2 = ($signed(zext_ln30_92_reg_1261) + $signed(12'd2816));

assign add_ln30_148_fu_1050_p2 = (or_ln30_4_reg_1291 + zext_ln30_117_fu_1046_p1);

assign add_ln30_149_fu_1067_p2 = (zext_ln30_118_fu_1063_p1 + mat_read_reg_1174);

assign add_ln30_150_fu_1092_p2 = (zext_ln30_fu_974_p1 + 14'd7680);

assign add_ln30_151_fu_1102_p2 = (or_ln30_4_reg_1291 + zext_ln30_119_fu_1098_p1);

assign add_ln30_152_fu_1119_p2 = (zext_ln30_120_fu_1115_p1 + mat_read_reg_1174);

assign add_ln30_fu_287_p2 = (zext_ln30_94_fu_283_p1 + mat_read_reg_1174);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001_grp18 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state17_pp0_stage0_iter1_grp18) & (1'b0 == ap_block_pp0_stage0_subdone_grp18_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b1 == ap_block_state17_pp0_stage0_iter1_grp18) & (1'b0 == ap_block_pp0_stage0_subdone_grp18_done_reg)) | ((m_axi_gmem2_0_ARREADY == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone_grp19_done_reg)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp0 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp18 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state17_pp0_stage0_iter1_grp18) & (1'b0 == ap_block_pp0_stage0_subdone_grp18_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp19 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)) | ((m_axi_gmem2_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp19_done_reg)));
end

assign ap_block_pp0_stage0_grp18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b1 == ap_block_state17_pp0_stage0_iter1_grp18) & (1'b0 == ap_block_pp0_stage0_subdone_grp18_done_reg)) | ((m_axi_gmem2_0_ARREADY == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone_grp19_done_reg)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp0 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp18 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state17_pp0_stage0_iter1_grp18) & (1'b0 == ap_block_pp0_stage0_subdone_grp18_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp19 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)) | ((m_axi_gmem2_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp19_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage10_01001_grp30 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state27_pp0_stage10_iter1_grp30) & (1'b0 == ap_block_pp0_stage10_subdone_grp30_done_reg));
end

assign ap_block_pp0_stage10_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001_grp30 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state27_pp0_stage10_iter1_grp30) & (1'b0 == ap_block_pp0_stage10_subdone_grp30_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage10_11001_grp9 = ((1'b1 == ap_block_state11_io_grp9) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_subdone_grp9_done_reg));
end

assign ap_block_pp0_stage10_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_grp30 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_grp9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state27_pp0_stage10_iter1_grp30) & (1'b0 == ap_block_pp0_stage10_subdone_grp30_done_reg)) | ((1'b1 == ap_block_state11_io_grp9) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_subdone_grp9_done_reg)));
end

assign ap_block_pp0_stage10_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_subdone_grp30 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state27_pp0_stage10_iter1_grp30) & (1'b0 == ap_block_pp0_stage10_subdone_grp30_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone_grp9 = ((1'b1 == ap_block_state11_io_grp9) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage10_subdone_grp9_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage11_01001_grp31 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state28_pp0_stage11_iter1_grp31) & (1'b0 == ap_block_pp0_stage11_subdone_grp31_done_reg));
end

assign ap_block_pp0_stage11_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001_grp10 = ((1'b1 == ap_block_state12_io_grp10) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone_grp10_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage11_11001_grp31 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state28_pp0_stage11_iter1_grp31) & (1'b0 == ap_block_pp0_stage11_subdone_grp31_done_reg));
end

assign ap_block_pp0_stage11_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_grp10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_grp31 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state28_pp0_stage11_iter1_grp31) & (1'b0 == ap_block_pp0_stage11_subdone_grp31_done_reg)) | ((1'b1 == ap_block_state12_io_grp10) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone_grp10_done_reg)));
end

assign ap_block_pp0_stage11_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_subdone_grp10 = ((1'b1 == ap_block_state12_io_grp10) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone_grp10_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone_grp31 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state28_pp0_stage11_iter1_grp31) & (1'b0 == ap_block_pp0_stage11_subdone_grp31_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage12_01001_grp32 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state29_pp0_stage12_iter1_grp32) & (1'b0 == ap_block_pp0_stage12_subdone_grp32_done_reg));
end

assign ap_block_pp0_stage12_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_11001_grp11 = ((1'b1 == ap_block_state13_io_grp11) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage12_subdone_grp11_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage12_11001_grp32 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state29_pp0_stage12_iter1_grp32) & (1'b0 == ap_block_pp0_stage12_subdone_grp32_done_reg));
end

assign ap_block_pp0_stage12_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_grp11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_grp32 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state29_pp0_stage12_iter1_grp32) & (1'b0 == ap_block_pp0_stage12_subdone_grp32_done_reg)) | ((1'b1 == ap_block_state13_io_grp11) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage12_subdone_grp11_done_reg)));
end

assign ap_block_pp0_stage12_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_subdone_grp11 = ((1'b1 == ap_block_state13_io_grp11) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage12_subdone_grp11_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone_grp32 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state29_pp0_stage12_iter1_grp32) & (1'b0 == ap_block_pp0_stage12_subdone_grp32_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage13_01001_grp12 = ((ap_done_reg == 1'b1) | ((1'b1 == ap_block_state14_pp0_stage13_iter0_grp12) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage13_subdone_grp12_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage13_11001_grp0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_pp0_stage13_11001_grp12 = ((ap_done_reg == 1'b1) | ((1'b1 == ap_block_state14_pp0_stage13_iter0_grp12) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage13_subdone_grp12_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage13_11001_grp13 = ((ap_done_reg == 1'b1) | ((1'b1 == ap_block_state14_io_grp13) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage13_subdone_grp13_done_reg)));
end

assign ap_block_pp0_stage13_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_grp12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_grp13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (((1'b1 == ap_block_state14_pp0_stage13_iter0_grp12) & (1'b0 == ap_block_pp0_stage13_subdone_grp12_done_reg)) | ((1'b1 == ap_block_state14_io_grp13) & (1'b0 == ap_block_pp0_stage13_subdone_grp13_done_reg)))));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone_grp0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_pp0_stage13_subdone_grp12 = ((ap_done_reg == 1'b1) | ((1'b1 == ap_block_state14_pp0_stage13_iter0_grp12) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage13_subdone_grp12_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone_grp13 = ((ap_done_reg == 1'b1) | ((1'b1 == ap_block_state14_io_grp13) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage13_subdone_grp13_done_reg)));
end

always @ (*) begin
    ap_block_pp0_stage14_01001_grp14 = ((1'b1 == ap_block_state15_pp0_stage14_iter0_grp14) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_subdone_grp14_done_reg));
end

assign ap_block_pp0_stage14_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_11001_grp14 = ((1'b1 == ap_block_state15_pp0_stage14_iter0_grp14) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_subdone_grp14_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage14_11001_grp15 = ((1'b1 == ap_block_state15_io_grp15) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_subdone_grp15_done_reg));
end

assign ap_block_pp0_stage14_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_grp14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_grp15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (((1'b1 == ap_block_state15_pp0_stage14_iter0_grp14) & (1'b0 == ap_block_pp0_stage14_subdone_grp14_done_reg)) | ((1'b1 == ap_block_state15_io_grp15) & (1'b0 == ap_block_pp0_stage14_subdone_grp15_done_reg))));
end

assign ap_block_pp0_stage14_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_subdone_grp14 = ((1'b1 == ap_block_state15_pp0_stage14_iter0_grp14) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_subdone_grp14_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone_grp15 = ((1'b1 == ap_block_state15_io_grp15) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage14_subdone_grp15_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage15_01001_grp16 = ((1'b1 == ap_block_state16_pp0_stage15_iter0_grp16) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone_grp16_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage15_11001_grp16 = ((1'b1 == ap_block_state16_pp0_stage15_iter0_grp16) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone_grp16_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage15_11001_grp17 = ((1'b1 == ap_block_state16_io_grp17) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone_grp17_done_reg));
end

assign ap_block_pp0_stage15_grp16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_grp17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (((1'b1 == ap_block_state16_io_grp17) & (1'b0 == ap_block_pp0_stage15_subdone_grp17_done_reg)) | ((1'b1 == ap_block_state16_pp0_stage15_iter0_grp16) & (1'b0 == ap_block_pp0_stage15_subdone_grp16_done_reg))));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone_grp16 = ((1'b1 == ap_block_state16_pp0_stage15_iter0_grp16) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone_grp16_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone_grp17 = ((1'b1 == ap_block_state16_io_grp17) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone_grp17_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage1_01001_grp20 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state18_pp0_stage1_iter1_grp20) & (1'b0 == ap_block_pp0_stage1_subdone_grp20_done_reg));
end

assign ap_block_pp0_stage1_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001_grp20 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state18_pp0_stage1_iter1_grp20) & (1'b0 == ap_block_pp0_stage1_subdone_grp20_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_grp21 = ((m_axi_gmem2_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp21_done_reg));
end

assign ap_block_pp0_stage1_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_grp20 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_grp21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((1'b1 == ap_block_state18_pp0_stage1_iter1_grp20) & (1'b0 == ap_block_pp0_stage1_subdone_grp20_done_reg)) | ((m_axi_gmem2_0_ARREADY == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone_grp21_done_reg))));
end

assign ap_block_pp0_stage1_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_subdone_grp20 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state18_pp0_stage1_iter1_grp20) & (1'b0 == ap_block_pp0_stage1_subdone_grp20_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone_grp21 = ((m_axi_gmem2_0_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp21_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage2_01001_grp22 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state19_pp0_stage2_iter1_grp22) & (1'b0 == ap_block_pp0_stage2_subdone_grp22_done_reg));
end

assign ap_block_pp0_stage2_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001_grp1 = ((1'b1 == ap_block_state3_io_grp1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp1_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage2_11001_grp22 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state19_pp0_stage2_iter1_grp22) & (1'b0 == ap_block_pp0_stage2_subdone_grp22_done_reg));
end

assign ap_block_pp0_stage2_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_grp1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_grp22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((1'b1 == ap_block_state3_io_grp1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp1_done_reg)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state19_pp0_stage2_iter1_grp22) & (1'b0 == ap_block_pp0_stage2_subdone_grp22_done_reg)));
end

assign ap_block_pp0_stage2_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_subdone_grp1 = ((1'b1 == ap_block_state3_io_grp1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone_grp1_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone_grp22 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state19_pp0_stage2_iter1_grp22) & (1'b0 == ap_block_pp0_stage2_subdone_grp22_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage3_01001_grp23 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state20_pp0_stage3_iter1_grp23) & (1'b0 == ap_block_pp0_stage3_subdone_grp23_done_reg));
end

assign ap_block_pp0_stage3_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001_grp2 = ((1'b1 == ap_block_state4_io_grp2) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp2_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage3_11001_grp23 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state20_pp0_stage3_iter1_grp23) & (1'b0 == ap_block_pp0_stage3_subdone_grp23_done_reg));
end

assign ap_block_pp0_stage3_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_grp2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_grp23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((1'b1 == ap_block_state4_io_grp2) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp2_done_reg)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state20_pp0_stage3_iter1_grp23) & (1'b0 == ap_block_pp0_stage3_subdone_grp23_done_reg)));
end

assign ap_block_pp0_stage3_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_subdone_grp2 = ((1'b1 == ap_block_state4_io_grp2) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone_grp2_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone_grp23 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state20_pp0_stage3_iter1_grp23) & (1'b0 == ap_block_pp0_stage3_subdone_grp23_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage4_01001_grp24 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state21_pp0_stage4_iter1_grp24) & (1'b0 == ap_block_pp0_stage4_subdone_grp24_done_reg));
end

assign ap_block_pp0_stage4_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001_grp24 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state21_pp0_stage4_iter1_grp24) & (1'b0 == ap_block_pp0_stage4_subdone_grp24_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage4_11001_grp3 = ((1'b1 == ap_block_state5_io_grp3) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage4_subdone_grp3_done_reg));
end

assign ap_block_pp0_stage4_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_grp24 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_grp3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state21_pp0_stage4_iter1_grp24) & (1'b0 == ap_block_pp0_stage4_subdone_grp24_done_reg)) | ((1'b1 == ap_block_state5_io_grp3) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage4_subdone_grp3_done_reg)));
end

assign ap_block_pp0_stage4_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_subdone_grp24 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state21_pp0_stage4_iter1_grp24) & (1'b0 == ap_block_pp0_stage4_subdone_grp24_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone_grp3 = ((1'b1 == ap_block_state5_io_grp3) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage4_subdone_grp3_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage5_01001_grp25 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state22_pp0_stage5_iter1_grp25) & (1'b0 == ap_block_pp0_stage5_subdone_grp25_done_reg));
end

assign ap_block_pp0_stage5_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001_grp25 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state22_pp0_stage5_iter1_grp25) & (1'b0 == ap_block_pp0_stage5_subdone_grp25_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage5_11001_grp4 = ((1'b1 == ap_block_state6_io_grp4) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone_grp4_done_reg));
end

assign ap_block_pp0_stage5_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_grp25 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_grp4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state22_pp0_stage5_iter1_grp25) & (1'b0 == ap_block_pp0_stage5_subdone_grp25_done_reg)) | ((1'b1 == ap_block_state6_io_grp4) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone_grp4_done_reg)));
end

assign ap_block_pp0_stage5_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_subdone_grp25 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state22_pp0_stage5_iter1_grp25) & (1'b0 == ap_block_pp0_stage5_subdone_grp25_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone_grp4 = ((1'b1 == ap_block_state6_io_grp4) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone_grp4_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage6_01001_grp26 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state23_pp0_stage6_iter1_grp26) & (1'b0 == ap_block_pp0_stage6_subdone_grp26_done_reg));
end

assign ap_block_pp0_stage6_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001_grp26 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state23_pp0_stage6_iter1_grp26) & (1'b0 == ap_block_pp0_stage6_subdone_grp26_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage6_11001_grp5 = ((1'b1 == ap_block_state7_io_grp5) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp5_done_reg));
end

assign ap_block_pp0_stage6_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_grp26 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_grp5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state23_pp0_stage6_iter1_grp26) & (1'b0 == ap_block_pp0_stage6_subdone_grp26_done_reg)) | ((1'b1 == ap_block_state7_io_grp5) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp5_done_reg)));
end

assign ap_block_pp0_stage6_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_subdone_grp26 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state23_pp0_stage6_iter1_grp26) & (1'b0 == ap_block_pp0_stage6_subdone_grp26_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone_grp5 = ((1'b1 == ap_block_state7_io_grp5) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone_grp5_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage7_01001_grp27 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state24_pp0_stage7_iter1_grp27) & (1'b0 == ap_block_pp0_stage7_subdone_grp27_done_reg));
end

assign ap_block_pp0_stage7_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001_grp27 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state24_pp0_stage7_iter1_grp27) & (1'b0 == ap_block_pp0_stage7_subdone_grp27_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage7_11001_grp6 = ((1'b1 == ap_block_state8_io_grp6) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp6_done_reg));
end

assign ap_block_pp0_stage7_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_grp27 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_grp6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state24_pp0_stage7_iter1_grp27) & (1'b0 == ap_block_pp0_stage7_subdone_grp27_done_reg)) | ((1'b1 == ap_block_state8_io_grp6) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp6_done_reg)));
end

assign ap_block_pp0_stage7_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_subdone_grp27 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state24_pp0_stage7_iter1_grp27) & (1'b0 == ap_block_pp0_stage7_subdone_grp27_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone_grp6 = ((1'b1 == ap_block_state8_io_grp6) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone_grp6_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage8_01001_grp28 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state25_pp0_stage8_iter1_grp28) & (1'b0 == ap_block_pp0_stage8_subdone_grp28_done_reg));
end

assign ap_block_pp0_stage8_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001_grp28 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state25_pp0_stage8_iter1_grp28) & (1'b0 == ap_block_pp0_stage8_subdone_grp28_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage8_11001_grp7 = ((1'b1 == ap_block_state9_io_grp7) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage8_subdone_grp7_done_reg));
end

assign ap_block_pp0_stage8_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_grp28 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_grp7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state25_pp0_stage8_iter1_grp28) & (1'b0 == ap_block_pp0_stage8_subdone_grp28_done_reg)) | ((1'b1 == ap_block_state9_io_grp7) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage8_subdone_grp7_done_reg)));
end

assign ap_block_pp0_stage8_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_subdone_grp28 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state25_pp0_stage8_iter1_grp28) & (1'b0 == ap_block_pp0_stage8_subdone_grp28_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone_grp7 = ((1'b1 == ap_block_state9_io_grp7) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage8_subdone_grp7_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage9_01001_grp29 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state26_pp0_stage9_iter1_grp29) & (1'b0 == ap_block_pp0_stage9_subdone_grp29_done_reg));
end

assign ap_block_pp0_stage9_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001_grp29 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state26_pp0_stage9_iter1_grp29) & (1'b0 == ap_block_pp0_stage9_subdone_grp29_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage9_11001_grp8 = ((1'b1 == ap_block_state10_io_grp8) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage9_subdone_grp8_done_reg));
end

assign ap_block_pp0_stage9_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_grp29 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_grp8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state26_pp0_stage9_iter1_grp29) & (1'b0 == ap_block_pp0_stage9_subdone_grp29_done_reg)) | ((1'b1 == ap_block_state10_io_grp8) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage9_subdone_grp8_done_reg)));
end

assign ap_block_pp0_stage9_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_subdone_grp29 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state26_pp0_stage9_iter1_grp29) & (1'b0 == ap_block_pp0_stage9_subdone_grp29_done_reg));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone_grp8 = ((1'b1 == ap_block_state10_io_grp8) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage9_subdone_grp8_done_reg));
end

always @ (*) begin
    ap_block_state10_io_grp8 = ((m_axi_gmem2_0_ARREADY == 1'b0) & (icmp_ln25_reg_1194 == 1'd0));
end

always @ (*) begin
    ap_block_state11_io_grp9 = ((m_axi_gmem2_0_ARREADY == 1'b0) & (icmp_ln25_reg_1194 == 1'd0));
end

always @ (*) begin
    ap_block_state12_io_grp10 = ((m_axi_gmem2_0_ARREADY == 1'b0) & (icmp_ln25_reg_1194 == 1'd0));
end

always @ (*) begin
    ap_block_state13_io_grp11 = ((m_axi_gmem2_0_ARREADY == 1'b0) & (icmp_ln25_reg_1194 == 1'd0));
end

always @ (*) begin
    ap_block_state14_io_grp13 = ((m_axi_gmem2_0_ARREADY == 1'b0) & (icmp_ln25_reg_1194 == 1'd0));
end

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0_grp12 = (((m_axi_gmem2_0_RVALID == 1'b0) & (icmp_ln25_reg_1194 == 1'd0)) | ((icmp_ln25_reg_1194 == 1'd0) & (mat_stream_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state15_io_grp15 = ((m_axi_gmem2_0_ARREADY == 1'b0) & (icmp_ln25_reg_1194 == 1'd0));
end

always @ (*) begin
    ap_block_state15_pp0_stage14_iter0_grp14 = (((m_axi_gmem2_0_RVALID == 1'b0) & (icmp_ln25_reg_1194 == 1'd0)) | ((icmp_ln25_reg_1194 == 1'd0) & (mat_stream_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state16_io_grp17 = ((m_axi_gmem2_0_ARREADY == 1'b0) & (icmp_ln25_reg_1194 == 1'd0));
end

always @ (*) begin
    ap_block_state16_pp0_stage15_iter0_grp16 = (((m_axi_gmem2_0_RVALID == 1'b0) & (icmp_ln25_reg_1194 == 1'd0)) | ((icmp_ln25_reg_1194 == 1'd0) & (mat_stream_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state17_pp0_stage0_iter1_grp18 = ((m_axi_gmem2_0_RVALID == 1'b0) | (mat_stream_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state18_pp0_stage1_iter1_grp20 = ((m_axi_gmem2_0_RVALID == 1'b0) | (mat_stream_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state19_pp0_stage2_iter1_grp22 = ((m_axi_gmem2_0_RVALID == 1'b0) | (mat_stream_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state20_pp0_stage3_iter1_grp23 = ((m_axi_gmem2_0_RVALID == 1'b0) | (mat_stream_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state21_pp0_stage4_iter1_grp24 = ((m_axi_gmem2_0_RVALID == 1'b0) | (mat_stream_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state22_pp0_stage5_iter1_grp25 = ((m_axi_gmem2_0_RVALID == 1'b0) | (mat_stream_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state23_pp0_stage6_iter1_grp26 = ((m_axi_gmem2_0_RVALID == 1'b0) | (mat_stream_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state24_pp0_stage7_iter1_grp27 = ((m_axi_gmem2_0_RVALID == 1'b0) | (mat_stream_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state25_pp0_stage8_iter1_grp28 = ((m_axi_gmem2_0_RVALID == 1'b0) | (mat_stream_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state26_pp0_stage9_iter1_grp29 = ((m_axi_gmem2_0_RVALID == 1'b0) | (mat_stream_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state27_pp0_stage10_iter1_grp30 = ((m_axi_gmem2_0_RVALID == 1'b0) | (mat_stream_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state28_pp0_stage11_iter1_grp31 = ((m_axi_gmem2_0_RVALID == 1'b0) | (mat_stream_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state29_pp0_stage12_iter1_grp32 = ((m_axi_gmem2_0_RVALID == 1'b0) | (mat_stream_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_io_grp1 = ((m_axi_gmem2_0_ARREADY == 1'b0) & (icmp_ln25_reg_1194 == 1'd0));
end

always @ (*) begin
    ap_block_state4_io_grp2 = ((m_axi_gmem2_0_ARREADY == 1'b0) & (icmp_ln25_reg_1194 == 1'd0));
end

always @ (*) begin
    ap_block_state5_io_grp3 = ((m_axi_gmem2_0_ARREADY == 1'b0) & (icmp_ln25_reg_1194 == 1'd0));
end

always @ (*) begin
    ap_block_state6_io_grp4 = ((m_axi_gmem2_0_ARREADY == 1'b0) & (icmp_ln25_reg_1194 == 1'd0));
end

always @ (*) begin
    ap_block_state7_io_grp5 = ((m_axi_gmem2_0_ARREADY == 1'b0) & (icmp_ln25_reg_1194 == 1'd0));
end

always @ (*) begin
    ap_block_state8_io_grp6 = ((m_axi_gmem2_0_ARREADY == 1'b0) & (icmp_ln25_reg_1194 == 1'd0));
end

always @ (*) begin
    ap_block_state9_io_grp7 = ((m_axi_gmem2_0_ARREADY == 1'b0) & (icmp_ln25_reg_1194 == 1'd0));
end

always @ (*) begin
    ap_condition_1327 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage12;

assign ap_ready = ap_ready_sig;

assign icmp_ln25_fu_192_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 16'd36864) ? 1'b1 : 1'b0);

assign icmp_ln26_fu_209_p2 = ((r_fu_120 < 10'd768) ? 1'b1 : 1'b0);

assign m_axi_gmem2_0_ARBURST = 2'd0;

assign m_axi_gmem2_0_ARCACHE = 4'd0;

assign m_axi_gmem2_0_ARID = 1'd0;

assign m_axi_gmem2_0_ARLEN = 64'd1;

assign m_axi_gmem2_0_ARLOCK = 2'd0;

assign m_axi_gmem2_0_ARPROT = 3'd0;

assign m_axi_gmem2_0_ARQOS = 4'd0;

assign m_axi_gmem2_0_ARREGION = 4'd0;

assign m_axi_gmem2_0_ARSIZE = 3'd0;

assign m_axi_gmem2_0_ARUSER = 1'd0;

assign m_axi_gmem2_0_AWADDR = 64'd0;

assign m_axi_gmem2_0_AWBURST = 2'd0;

assign m_axi_gmem2_0_AWCACHE = 4'd0;

assign m_axi_gmem2_0_AWID = 1'd0;

assign m_axi_gmem2_0_AWLEN = 32'd0;

assign m_axi_gmem2_0_AWLOCK = 2'd0;

assign m_axi_gmem2_0_AWPROT = 3'd0;

assign m_axi_gmem2_0_AWQOS = 4'd0;

assign m_axi_gmem2_0_AWREGION = 4'd0;

assign m_axi_gmem2_0_AWSIZE = 3'd0;

assign m_axi_gmem2_0_AWUSER = 1'd0;

assign m_axi_gmem2_0_AWVALID = 1'b0;

assign m_axi_gmem2_0_BREADY = 1'b0;

assign m_axi_gmem2_0_WDATA = 32'd0;

assign m_axi_gmem2_0_WID = 1'd0;

assign m_axi_gmem2_0_WLAST = 1'b0;

assign m_axi_gmem2_0_WSTRB = 4'd0;

assign m_axi_gmem2_0_WUSER = 1'd0;

assign m_axi_gmem2_0_WVALID = 1'b0;

assign mat_stream_din = m_axi_gmem2_0_RDATA;

assign mat_stream_write = mat_stream_write_local;

assign or_ln30_1_fu_980_p3 = {{1'd1}, {zext_ln30_93_reg_1244}};

assign or_ln30_4_fu_567_p3 = {{tmp_s_reg_1220}, {12'd3840}};

assign or_ln30_s_fu_751_p3 = {{1'd1}, {select_ln25_4_reg_1198}};

assign or_ln_fu_344_p3 = {{tmp_reg_1208}, {10'd768}};

assign p_shl_fu_237_p3 = {{select_ln25_fu_215_p3}, {10'd0}};

assign select_ln25_4_fu_229_p3 = ((icmp_ln26_fu_209_p2[0:0] == 1'b1) ? c_fu_124 : add_ln25_4_fu_223_p2);

assign select_ln25_fu_215_p3 = ((icmp_ln26_fu_209_p2[0:0] == 1'b1) ? r_fu_120 : 10'd0);

assign sext_ln30_46_fu_384_p1 = $signed(trunc_ln30_s_fu_374_p4);

assign sext_ln30_47_fu_442_p1 = $signed(trunc_ln30_43_fu_432_p4);

assign sext_ln30_48_fu_500_p1 = $signed(trunc_ln30_44_fu_490_p4);

assign sext_ln30_49_fu_554_p1 = $signed(trunc_ln30_45_fu_544_p4);

assign sext_ln30_50_fu_606_p1 = $signed(trunc_ln30_46_fu_596_p4);

assign sext_ln30_51_fu_650_p1 = $signed(trunc_ln30_47_fu_640_p4);

assign sext_ln30_52_fu_694_p1 = $signed(trunc_ln30_48_fu_684_p4);

assign sext_ln30_53_fu_738_p1 = $signed(trunc_ln30_49_fu_728_p4);

assign sext_ln30_54_fu_798_p1 = $signed(trunc_ln30_50_fu_788_p4);

assign sext_ln30_55_fu_856_p1 = $signed(trunc_ln30_51_fu_846_p4);

assign sext_ln30_56_fu_910_p1 = $signed(trunc_ln30_52_fu_900_p4);

assign sext_ln30_57_fu_964_p1 = $signed(trunc_ln30_53_fu_954_p4);

assign sext_ln30_58_fu_1027_p1 = $signed(trunc_ln30_54_fu_1017_p4);

assign sext_ln30_59_fu_1082_p1 = $signed(trunc_ln30_55_fu_1072_p4);

assign sext_ln30_60_fu_1134_p1 = $signed(trunc_ln30_56_fu_1124_p4);

assign sext_ln30_61_fu_758_p1 = $signed(or_ln30_s_fu_751_p3);

assign sext_ln30_62_fu_987_p1 = $signed(or_ln30_1_fu_980_p3);

assign sext_ln30_63_fu_1042_p1 = $signed(add_ln30_147_fu_1037_p2);

assign sext_ln30_fu_302_p1 = $signed(trunc_ln_fu_292_p4);

assign shl_ln30_43_fu_415_p3 = {{add_ln30_118_fu_410_p2}, {2'd0}};

assign shl_ln30_44_fu_473_p3 = {{add_ln30_121_fu_468_p2}, {2'd0}};

assign shl_ln30_45_fu_527_p3 = {{add_ln30_124_fu_522_p2}, {2'd0}};

assign shl_ln30_46_fu_579_p3 = {{add_ln30_126_fu_574_p2}, {2'd0}};

assign shl_ln30_47_fu_623_p3 = {{add_ln30_128_fu_619_p2}, {2'd0}};

assign shl_ln30_48_fu_667_p3 = {{add_ln30_130_fu_663_p2}, {2'd0}};

assign shl_ln30_49_fu_711_p3 = {{add_ln30_132_fu_707_p2}, {2'd0}};

assign shl_ln30_50_fu_771_p3 = {{add_ln30_134_fu_766_p2}, {2'd0}};

assign shl_ln30_51_fu_829_p3 = {{add_ln30_137_fu_824_p2}, {2'd0}};

assign shl_ln30_52_fu_883_p3 = {{add_ln30_140_fu_878_p2}, {2'd0}};

assign shl_ln30_53_fu_937_p3 = {{add_ln30_143_fu_932_p2}, {2'd0}};

assign shl_ln30_54_fu_1000_p3 = {{add_ln30_145_fu_995_p2}, {2'd0}};

assign shl_ln30_55_fu_1055_p3 = {{add_ln30_148_fu_1050_p2}, {2'd0}};

assign shl_ln30_56_fu_1107_p3 = {{add_ln30_151_fu_1102_p2}, {2'd0}};

assign shl_ln30_s_fu_357_p3 = {{add_ln30_115_fu_351_p2}, {2'd0}};

assign shl_ln_fu_273_p4 = {{{tmp_fu_263_p4}, {select_ln25_4_fu_229_p3}}, {2'd0}};

assign sub_ln30_fu_257_p2 = (p_shl_fu_237_p3 - zext_ln30_106_fu_253_p1);

assign tmp_12_fu_245_p3 = {{select_ln25_fu_215_p3}, {8'd0}};

assign tmp_fu_263_p4 = {{sub_ln30_fu_257_p2[19:10]}};

assign trunc_ln30_43_fu_432_p4 = {{add_ln30_119_fu_427_p2[63:2]}};

assign trunc_ln30_44_fu_490_p4 = {{add_ln30_122_fu_485_p2[63:2]}};

assign trunc_ln30_45_fu_544_p4 = {{add_ln30_125_fu_539_p2[63:2]}};

assign trunc_ln30_46_fu_596_p4 = {{add_ln30_127_fu_591_p2[63:2]}};

assign trunc_ln30_47_fu_640_p4 = {{add_ln30_129_fu_635_p2[63:2]}};

assign trunc_ln30_48_fu_684_p4 = {{add_ln30_131_fu_679_p2[63:2]}};

assign trunc_ln30_49_fu_728_p4 = {{add_ln30_133_fu_723_p2[63:2]}};

assign trunc_ln30_50_fu_788_p4 = {{add_ln30_135_fu_783_p2[63:2]}};

assign trunc_ln30_51_fu_846_p4 = {{add_ln30_138_fu_841_p2[63:2]}};

assign trunc_ln30_52_fu_900_p4 = {{add_ln30_141_fu_895_p2[63:2]}};

assign trunc_ln30_53_fu_954_p4 = {{add_ln30_144_fu_949_p2[63:2]}};

assign trunc_ln30_54_fu_1017_p4 = {{add_ln30_146_fu_1012_p2[63:2]}};

assign trunc_ln30_55_fu_1072_p4 = {{add_ln30_149_fu_1067_p2[63:2]}};

assign trunc_ln30_56_fu_1124_p4 = {{add_ln30_152_fu_1119_p2[63:2]}};

assign trunc_ln30_s_fu_374_p4 = {{add_ln30_116_fu_369_p2[63:2]}};

assign trunc_ln_fu_292_p4 = {{add_ln30_fu_287_p2[63:2]}};

assign zext_ln25_fu_338_p1 = select_ln25_4_reg_1198;

assign zext_ln30_100_fu_518_p1 = add_ln30_123_fu_513_p2;

assign zext_ln30_101_fu_535_p1 = shl_ln30_45_fu_527_p3;

assign zext_ln30_102_fu_587_p1 = shl_ln30_46_fu_579_p3;

assign zext_ln30_103_fu_631_p1 = shl_ln30_47_fu_623_p3;

assign zext_ln30_104_fu_675_p1 = shl_ln30_48_fu_667_p3;

assign zext_ln30_105_fu_719_p1 = shl_ln30_49_fu_711_p3;

assign zext_ln30_106_fu_253_p1 = tmp_12_fu_245_p3;

assign zext_ln30_107_fu_779_p1 = shl_ln30_50_fu_771_p3;

assign zext_ln30_108_fu_820_p1 = add_ln30_136_fu_814_p2;

assign zext_ln30_109_fu_837_p1 = shl_ln30_51_fu_829_p3;

assign zext_ln30_110_fu_874_p1 = add_ln30_139_fu_869_p2;

assign zext_ln30_111_fu_891_p1 = shl_ln30_52_fu_883_p3;

assign zext_ln30_112_fu_928_p1 = add_ln30_142_fu_923_p2;

assign zext_ln30_113_fu_945_p1 = shl_ln30_53_fu_937_p3;

assign zext_ln30_114_fu_762_p1 = $unsigned(sext_ln30_61_fu_758_p1);

assign zext_ln30_115_fu_991_p1 = $unsigned(sext_ln30_62_fu_987_p1);

assign zext_ln30_116_fu_1008_p1 = shl_ln30_54_fu_1000_p3;

assign zext_ln30_117_fu_1046_p1 = $unsigned(sext_ln30_63_fu_1042_p1);

assign zext_ln30_118_fu_1063_p1 = shl_ln30_55_fu_1055_p3;

assign zext_ln30_119_fu_1098_p1 = add_ln30_150_fu_1092_p2;

assign zext_ln30_120_fu_1115_p1 = shl_ln30_56_fu_1107_p3;

assign zext_ln30_91_fu_808_p1 = select_ln25_4_reg_1198;

assign zext_ln30_92_fu_452_p1 = select_ln25_4_reg_1198;

assign zext_ln30_93_fu_394_p1 = select_ln25_4_reg_1198;

assign zext_ln30_94_fu_283_p1 = shl_ln_fu_273_p4;

assign zext_ln30_95_fu_365_p1 = shl_ln30_s_fu_357_p3;

assign zext_ln30_96_fu_406_p1 = add_ln30_117_fu_400_p2;

assign zext_ln30_97_fu_423_p1 = shl_ln30_43_fu_415_p3;

assign zext_ln30_98_fu_464_p1 = add_ln30_120_fu_458_p2;

assign zext_ln30_99_fu_481_p1 = shl_ln30_44_fu_473_p3;

assign zext_ln30_fu_974_p1 = select_ln25_4_reg_1198;

always @ (posedge ap_clk) begin
    zext_ln25_reg_1225[19:10] <= 10'b0000000000;
    or_ln_reg_1230[9:0] <= 10'b1100000000;
    zext_ln30_93_reg_1244[10] <= 1'b0;
    zext_ln30_96_reg_1249[19:11] <= 9'b000000000;
    zext_ln30_92_reg_1261[11:10] <= 2'b00;
    zext_ln30_98_reg_1267[19:12] <= 8'b00000000;
    zext_ln30_100_reg_1279[19:12] <= 8'b00000000;
    or_ln30_4_reg_1291[11:0] <= 12'b111100000000;
    zext_ln30_91_reg_1340[12:10] <= 3'b000;
end

endmodule //llama_layer_load_mat_burst_11
