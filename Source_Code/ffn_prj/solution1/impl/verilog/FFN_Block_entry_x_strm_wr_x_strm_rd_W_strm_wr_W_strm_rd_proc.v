// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module FFN_Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        m_axi_gmem_0_AWVALID,
        m_axi_gmem_0_AWREADY,
        m_axi_gmem_0_AWADDR,
        m_axi_gmem_0_AWID,
        m_axi_gmem_0_AWLEN,
        m_axi_gmem_0_AWSIZE,
        m_axi_gmem_0_AWBURST,
        m_axi_gmem_0_AWLOCK,
        m_axi_gmem_0_AWCACHE,
        m_axi_gmem_0_AWPROT,
        m_axi_gmem_0_AWQOS,
        m_axi_gmem_0_AWREGION,
        m_axi_gmem_0_AWUSER,
        m_axi_gmem_0_WVALID,
        m_axi_gmem_0_WREADY,
        m_axi_gmem_0_WDATA,
        m_axi_gmem_0_WSTRB,
        m_axi_gmem_0_WLAST,
        m_axi_gmem_0_WID,
        m_axi_gmem_0_WUSER,
        m_axi_gmem_0_ARVALID,
        m_axi_gmem_0_ARREADY,
        m_axi_gmem_0_ARADDR,
        m_axi_gmem_0_ARID,
        m_axi_gmem_0_ARLEN,
        m_axi_gmem_0_ARSIZE,
        m_axi_gmem_0_ARBURST,
        m_axi_gmem_0_ARLOCK,
        m_axi_gmem_0_ARCACHE,
        m_axi_gmem_0_ARPROT,
        m_axi_gmem_0_ARQOS,
        m_axi_gmem_0_ARREGION,
        m_axi_gmem_0_ARUSER,
        m_axi_gmem_0_RVALID,
        m_axi_gmem_0_RREADY,
        m_axi_gmem_0_RDATA,
        m_axi_gmem_0_RLAST,
        m_axi_gmem_0_RID,
        m_axi_gmem_0_RFIFONUM,
        m_axi_gmem_0_RUSER,
        m_axi_gmem_0_RRESP,
        m_axi_gmem_0_BVALID,
        m_axi_gmem_0_BREADY,
        m_axi_gmem_0_BRESP,
        m_axi_gmem_0_BID,
        m_axi_gmem_0_BUSER,
        i_vec,
        W1_vec,
        W2_vec,
        W3_vec,
        res_strm_din,
        res_strm_full_n,
        res_strm_write,
        res_strm_num_data_valid,
        res_strm_fifo_cap
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_state8 = 18'd128;
parameter    ap_ST_fsm_state9 = 18'd256;
parameter    ap_ST_fsm_state10 = 18'd512;
parameter    ap_ST_fsm_state11 = 18'd1024;
parameter    ap_ST_fsm_state12 = 18'd2048;
parameter    ap_ST_fsm_state13 = 18'd4096;
parameter    ap_ST_fsm_state14 = 18'd8192;
parameter    ap_ST_fsm_state15 = 18'd16384;
parameter    ap_ST_fsm_state16 = 18'd32768;
parameter    ap_ST_fsm_state17 = 18'd65536;
parameter    ap_ST_fsm_state18 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_0_AWVALID;
input   m_axi_gmem_0_AWREADY;
output  [63:0] m_axi_gmem_0_AWADDR;
output  [0:0] m_axi_gmem_0_AWID;
output  [31:0] m_axi_gmem_0_AWLEN;
output  [2:0] m_axi_gmem_0_AWSIZE;
output  [1:0] m_axi_gmem_0_AWBURST;
output  [1:0] m_axi_gmem_0_AWLOCK;
output  [3:0] m_axi_gmem_0_AWCACHE;
output  [2:0] m_axi_gmem_0_AWPROT;
output  [3:0] m_axi_gmem_0_AWQOS;
output  [3:0] m_axi_gmem_0_AWREGION;
output  [0:0] m_axi_gmem_0_AWUSER;
output   m_axi_gmem_0_WVALID;
input   m_axi_gmem_0_WREADY;
output  [31:0] m_axi_gmem_0_WDATA;
output  [3:0] m_axi_gmem_0_WSTRB;
output   m_axi_gmem_0_WLAST;
output  [0:0] m_axi_gmem_0_WID;
output  [0:0] m_axi_gmem_0_WUSER;
output   m_axi_gmem_0_ARVALID;
input   m_axi_gmem_0_ARREADY;
output  [63:0] m_axi_gmem_0_ARADDR;
output  [0:0] m_axi_gmem_0_ARID;
output  [31:0] m_axi_gmem_0_ARLEN;
output  [2:0] m_axi_gmem_0_ARSIZE;
output  [1:0] m_axi_gmem_0_ARBURST;
output  [1:0] m_axi_gmem_0_ARLOCK;
output  [3:0] m_axi_gmem_0_ARCACHE;
output  [2:0] m_axi_gmem_0_ARPROT;
output  [3:0] m_axi_gmem_0_ARQOS;
output  [3:0] m_axi_gmem_0_ARREGION;
output  [0:0] m_axi_gmem_0_ARUSER;
input   m_axi_gmem_0_RVALID;
output   m_axi_gmem_0_RREADY;
input  [31:0] m_axi_gmem_0_RDATA;
input   m_axi_gmem_0_RLAST;
input  [0:0] m_axi_gmem_0_RID;
input  [8:0] m_axi_gmem_0_RFIFONUM;
input  [0:0] m_axi_gmem_0_RUSER;
input  [1:0] m_axi_gmem_0_RRESP;
input   m_axi_gmem_0_BVALID;
output   m_axi_gmem_0_BREADY;
input  [1:0] m_axi_gmem_0_BRESP;
input  [0:0] m_axi_gmem_0_BID;
input  [0:0] m_axi_gmem_0_BUSER;
input  [63:0] i_vec;
input  [63:0] W1_vec;
input  [63:0] W2_vec;
input  [63:0] W3_vec;
output  [31:0] res_strm_din;
input   res_strm_full_n;
output   res_strm_write;
input  [6:0] res_strm_num_data_valid;
input  [6:0] res_strm_fifo_cap;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_gmem_0_ARVALID;
reg[63:0] m_axi_gmem_0_ARADDR;
reg[0:0] m_axi_gmem_0_ARID;
reg[31:0] m_axi_gmem_0_ARLEN;
reg[2:0] m_axi_gmem_0_ARSIZE;
reg[1:0] m_axi_gmem_0_ARBURST;
reg[1:0] m_axi_gmem_0_ARLOCK;
reg[3:0] m_axi_gmem_0_ARCACHE;
reg[2:0] m_axi_gmem_0_ARPROT;
reg[3:0] m_axi_gmem_0_ARQOS;
reg[3:0] m_axi_gmem_0_ARREGION;
reg[0:0] m_axi_gmem_0_ARUSER;
reg m_axi_gmem_0_RREADY;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] i_vec_read_reg_201;
reg    ap_block_state1;
reg   [63:0] W1_vec_read_reg_249;
wire    ap_CS_fsm_state3;
reg   [63:0] W2_vec_read_reg_254;
wire    ap_CS_fsm_state9;
reg   [63:0] W3_vec_read_reg_259;
wire    ap_CS_fsm_state13;
wire    grp_push_tensor1d_fu_122_ap_start;
wire    grp_push_tensor1d_fu_122_ap_done;
wire    grp_push_tensor1d_fu_122_ap_idle;
wire    grp_push_tensor1d_fu_122_ap_ready;
wire    grp_push_tensor1d_fu_122_m_axi_gmem_0_AWVALID;
wire   [63:0] grp_push_tensor1d_fu_122_m_axi_gmem_0_AWADDR;
wire   [0:0] grp_push_tensor1d_fu_122_m_axi_gmem_0_AWID;
wire   [31:0] grp_push_tensor1d_fu_122_m_axi_gmem_0_AWLEN;
wire   [2:0] grp_push_tensor1d_fu_122_m_axi_gmem_0_AWSIZE;
wire   [1:0] grp_push_tensor1d_fu_122_m_axi_gmem_0_AWBURST;
wire   [1:0] grp_push_tensor1d_fu_122_m_axi_gmem_0_AWLOCK;
wire   [3:0] grp_push_tensor1d_fu_122_m_axi_gmem_0_AWCACHE;
wire   [2:0] grp_push_tensor1d_fu_122_m_axi_gmem_0_AWPROT;
wire   [3:0] grp_push_tensor1d_fu_122_m_axi_gmem_0_AWQOS;
wire   [3:0] grp_push_tensor1d_fu_122_m_axi_gmem_0_AWREGION;
wire   [0:0] grp_push_tensor1d_fu_122_m_axi_gmem_0_AWUSER;
wire    grp_push_tensor1d_fu_122_m_axi_gmem_0_WVALID;
wire   [31:0] grp_push_tensor1d_fu_122_m_axi_gmem_0_WDATA;
wire   [3:0] grp_push_tensor1d_fu_122_m_axi_gmem_0_WSTRB;
wire    grp_push_tensor1d_fu_122_m_axi_gmem_0_WLAST;
wire   [0:0] grp_push_tensor1d_fu_122_m_axi_gmem_0_WID;
wire   [0:0] grp_push_tensor1d_fu_122_m_axi_gmem_0_WUSER;
wire    grp_push_tensor1d_fu_122_m_axi_gmem_0_ARVALID;
wire   [63:0] grp_push_tensor1d_fu_122_m_axi_gmem_0_ARADDR;
wire   [0:0] grp_push_tensor1d_fu_122_m_axi_gmem_0_ARID;
wire   [31:0] grp_push_tensor1d_fu_122_m_axi_gmem_0_ARLEN;
wire   [2:0] grp_push_tensor1d_fu_122_m_axi_gmem_0_ARSIZE;
wire   [1:0] grp_push_tensor1d_fu_122_m_axi_gmem_0_ARBURST;
wire   [1:0] grp_push_tensor1d_fu_122_m_axi_gmem_0_ARLOCK;
wire   [3:0] grp_push_tensor1d_fu_122_m_axi_gmem_0_ARCACHE;
wire   [2:0] grp_push_tensor1d_fu_122_m_axi_gmem_0_ARPROT;
wire   [3:0] grp_push_tensor1d_fu_122_m_axi_gmem_0_ARQOS;
wire   [3:0] grp_push_tensor1d_fu_122_m_axi_gmem_0_ARREGION;
wire   [0:0] grp_push_tensor1d_fu_122_m_axi_gmem_0_ARUSER;
wire    grp_push_tensor1d_fu_122_m_axi_gmem_0_RREADY;
wire    grp_push_tensor1d_fu_122_m_axi_gmem_0_BREADY;
wire   [31:0] grp_push_tensor1d_fu_122_x_strm_din;
wire    grp_push_tensor1d_fu_122_x_strm_write;
wire    grp_push_tensor2d_bycol_fu_131_ap_start;
wire    grp_push_tensor2d_bycol_fu_131_ap_done;
wire    grp_push_tensor2d_bycol_fu_131_ap_idle;
wire    grp_push_tensor2d_bycol_fu_131_ap_ready;
wire    grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_AWVALID;
wire   [63:0] grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_AWADDR;
wire   [0:0] grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_AWID;
wire   [31:0] grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_AWLEN;
wire   [2:0] grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_AWSIZE;
wire   [1:0] grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_AWBURST;
wire   [1:0] grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_AWLOCK;
wire   [3:0] grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_AWCACHE;
wire   [2:0] grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_AWPROT;
wire   [3:0] grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_AWQOS;
wire   [3:0] grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_AWREGION;
wire   [0:0] grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_AWUSER;
wire    grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_WVALID;
wire   [31:0] grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_WDATA;
wire   [3:0] grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_WSTRB;
wire    grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_WLAST;
wire   [0:0] grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_WID;
wire   [0:0] grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_WUSER;
wire    grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARVALID;
wire   [63:0] grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARADDR;
wire   [0:0] grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARID;
wire   [31:0] grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARLEN;
wire   [2:0] grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARSIZE;
wire   [1:0] grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARBURST;
wire   [1:0] grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARLOCK;
wire   [3:0] grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARCACHE;
wire   [2:0] grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARPROT;
wire   [3:0] grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARQOS;
wire   [3:0] grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARREGION;
wire   [0:0] grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARUSER;
wire    grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_RREADY;
wire    grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_BREADY;
wire   [31:0] grp_push_tensor2d_bycol_fu_131_W_strm_din;
wire    grp_push_tensor2d_bycol_fu_131_W_strm_write;
wire    grp_Multiply_VecMat_fu_140_ap_start;
wire    grp_Multiply_VecMat_fu_140_ap_done;
wire    grp_Multiply_VecMat_fu_140_ap_idle;
wire    grp_Multiply_VecMat_fu_140_ap_ready;
wire   [31:0] grp_Multiply_VecMat_fu_140_z1_strm_din;
wire    grp_Multiply_VecMat_fu_140_z1_strm_write;
wire    grp_Multiply_VecMat_fu_140_x_strm_read;
wire    grp_Multiply_VecMat_fu_140_W_strm_read;
wire   [31:0] grp_Multiply_VecMat_fu_140_grp_fu_264_p_din0;
wire   [31:0] grp_Multiply_VecMat_fu_140_grp_fu_264_p_din1;
wire   [31:0] grp_Multiply_VecMat_fu_140_grp_fu_264_p_din2;
wire   [31:0] grp_Multiply_VecMat_fu_140_grp_fu_264_p_din3;
wire    grp_Multiply_VecMat_fu_140_grp_fu_264_p_ce;
wire    grp_push_tensor1d_1_fu_147_ap_start;
wire    grp_push_tensor1d_1_fu_147_ap_done;
wire    grp_push_tensor1d_1_fu_147_ap_idle;
wire    grp_push_tensor1d_1_fu_147_ap_ready;
wire    grp_push_tensor1d_1_fu_147_m_axi_gmem_0_AWVALID;
wire   [63:0] grp_push_tensor1d_1_fu_147_m_axi_gmem_0_AWADDR;
wire   [0:0] grp_push_tensor1d_1_fu_147_m_axi_gmem_0_AWID;
wire   [31:0] grp_push_tensor1d_1_fu_147_m_axi_gmem_0_AWLEN;
wire   [2:0] grp_push_tensor1d_1_fu_147_m_axi_gmem_0_AWSIZE;
wire   [1:0] grp_push_tensor1d_1_fu_147_m_axi_gmem_0_AWBURST;
wire   [1:0] grp_push_tensor1d_1_fu_147_m_axi_gmem_0_AWLOCK;
wire   [3:0] grp_push_tensor1d_1_fu_147_m_axi_gmem_0_AWCACHE;
wire   [2:0] grp_push_tensor1d_1_fu_147_m_axi_gmem_0_AWPROT;
wire   [3:0] grp_push_tensor1d_1_fu_147_m_axi_gmem_0_AWQOS;
wire   [3:0] grp_push_tensor1d_1_fu_147_m_axi_gmem_0_AWREGION;
wire   [0:0] grp_push_tensor1d_1_fu_147_m_axi_gmem_0_AWUSER;
wire    grp_push_tensor1d_1_fu_147_m_axi_gmem_0_WVALID;
wire   [31:0] grp_push_tensor1d_1_fu_147_m_axi_gmem_0_WDATA;
wire   [3:0] grp_push_tensor1d_1_fu_147_m_axi_gmem_0_WSTRB;
wire    grp_push_tensor1d_1_fu_147_m_axi_gmem_0_WLAST;
wire   [0:0] grp_push_tensor1d_1_fu_147_m_axi_gmem_0_WID;
wire   [0:0] grp_push_tensor1d_1_fu_147_m_axi_gmem_0_WUSER;
wire    grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARVALID;
wire   [63:0] grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARADDR;
wire   [0:0] grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARID;
wire   [31:0] grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARLEN;
wire   [2:0] grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARSIZE;
wire   [1:0] grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARBURST;
wire   [1:0] grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARLOCK;
wire   [3:0] grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARCACHE;
wire   [2:0] grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARPROT;
wire   [3:0] grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARQOS;
wire   [3:0] grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARREGION;
wire   [0:0] grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARUSER;
wire    grp_push_tensor1d_1_fu_147_m_axi_gmem_0_RREADY;
wire    grp_push_tensor1d_1_fu_147_m_axi_gmem_0_BREADY;
wire   [31:0] grp_push_tensor1d_1_fu_147_x_strm_din;
wire    grp_push_tensor1d_1_fu_147_x_strm_write;
wire    grp_push_tensor2d_bycol_2_fu_155_ap_start;
wire    grp_push_tensor2d_bycol_2_fu_155_ap_done;
wire    grp_push_tensor2d_bycol_2_fu_155_ap_idle;
wire    grp_push_tensor2d_bycol_2_fu_155_ap_ready;
wire    grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_AWVALID;
wire   [63:0] grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_AWADDR;
wire   [0:0] grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_AWID;
wire   [31:0] grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_AWLEN;
wire   [2:0] grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_AWSIZE;
wire   [1:0] grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_AWBURST;
wire   [1:0] grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_AWLOCK;
wire   [3:0] grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_AWCACHE;
wire   [2:0] grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_AWPROT;
wire   [3:0] grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_AWQOS;
wire   [3:0] grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_AWREGION;
wire   [0:0] grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_AWUSER;
wire    grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_WVALID;
wire   [31:0] grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_WDATA;
wire   [3:0] grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_WSTRB;
wire    grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_WLAST;
wire   [0:0] grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_WID;
wire   [0:0] grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_WUSER;
wire    grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARVALID;
wire   [63:0] grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARADDR;
wire   [0:0] grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARID;
wire   [31:0] grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARLEN;
wire   [2:0] grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARSIZE;
wire   [1:0] grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARBURST;
wire   [1:0] grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARLOCK;
wire   [3:0] grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARCACHE;
wire   [2:0] grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARPROT;
wire   [3:0] grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARQOS;
wire   [3:0] grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARREGION;
wire   [0:0] grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARUSER;
wire    grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_RREADY;
wire    grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_BREADY;
wire   [31:0] grp_push_tensor2d_bycol_2_fu_155_W_strm_din;
wire    grp_push_tensor2d_bycol_2_fu_155_W_strm_write;
wire    grp_Multiply_VecMat_3_fu_164_ap_start;
wire    grp_Multiply_VecMat_3_fu_164_ap_done;
wire    grp_Multiply_VecMat_3_fu_164_ap_idle;
wire    grp_Multiply_VecMat_3_fu_164_ap_ready;
wire   [31:0] grp_Multiply_VecMat_3_fu_164_z2_strm_din;
wire    grp_Multiply_VecMat_3_fu_164_z2_strm_write;
wire    grp_Multiply_VecMat_3_fu_164_x_strm_read;
wire    grp_Multiply_VecMat_3_fu_164_W_strm_read;
wire   [31:0] grp_Multiply_VecMat_3_fu_164_grp_fu_264_p_din0;
wire   [31:0] grp_Multiply_VecMat_3_fu_164_grp_fu_264_p_din1;
wire   [31:0] grp_Multiply_VecMat_3_fu_164_grp_fu_264_p_din2;
wire   [31:0] grp_Multiply_VecMat_3_fu_164_grp_fu_264_p_din3;
wire    grp_Multiply_VecMat_3_fu_164_grp_fu_264_p_ce;
wire    grp_Swish_fu_171_ap_start;
wire    grp_Swish_fu_171_ap_done;
wire    grp_Swish_fu_171_ap_idle;
wire    grp_Swish_fu_171_ap_ready;
wire    grp_Swish_fu_171_z2_strm_read;
wire   [31:0] grp_Swish_fu_171_z2_Silu_strm_din;
wire    grp_Swish_fu_171_z2_Silu_strm_write;
wire    grp_push_tensor2d_bycol_4_fu_177_ap_start;
wire    grp_push_tensor2d_bycol_4_fu_177_ap_done;
wire    grp_push_tensor2d_bycol_4_fu_177_ap_idle;
wire    grp_push_tensor2d_bycol_4_fu_177_ap_ready;
wire    grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_AWVALID;
wire   [63:0] grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_AWADDR;
wire   [0:0] grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_AWID;
wire   [31:0] grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_AWLEN;
wire   [2:0] grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_AWSIZE;
wire   [1:0] grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_AWBURST;
wire   [1:0] grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_AWLOCK;
wire   [3:0] grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_AWCACHE;
wire   [2:0] grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_AWPROT;
wire   [3:0] grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_AWQOS;
wire   [3:0] grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_AWREGION;
wire   [0:0] grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_AWUSER;
wire    grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_WVALID;
wire   [31:0] grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_WDATA;
wire   [3:0] grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_WSTRB;
wire    grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_WLAST;
wire   [0:0] grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_WID;
wire   [0:0] grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_WUSER;
wire    grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARVALID;
wire   [63:0] grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARADDR;
wire   [0:0] grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARID;
wire   [31:0] grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARLEN;
wire   [2:0] grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARSIZE;
wire   [1:0] grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARBURST;
wire   [1:0] grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARLOCK;
wire   [3:0] grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARCACHE;
wire   [2:0] grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARPROT;
wire   [3:0] grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARQOS;
wire   [3:0] grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARREGION;
wire   [0:0] grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARUSER;
wire    grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_RREADY;
wire    grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_BREADY;
wire   [31:0] grp_push_tensor2d_bycol_4_fu_177_W_strm_din;
wire    grp_push_tensor2d_bycol_4_fu_177_W_strm_write;
wire    grp_Multiply_Vec_fu_186_ap_start;
wire    grp_Multiply_Vec_fu_186_ap_done;
wire    grp_Multiply_Vec_fu_186_ap_idle;
wire    grp_Multiply_Vec_fu_186_ap_ready;
wire    grp_Multiply_Vec_fu_186_z1_strm_read;
wire    grp_Multiply_Vec_fu_186_z2_Silu_strm_read;
wire   [31:0] grp_Multiply_Vec_fu_186_z3_strm_din;
wire    grp_Multiply_Vec_fu_186_z3_strm_write;
wire    grp_Multiply_VecMat_5_fu_193_ap_start;
wire    grp_Multiply_VecMat_5_fu_193_ap_done;
wire    grp_Multiply_VecMat_5_fu_193_ap_idle;
wire    grp_Multiply_VecMat_5_fu_193_ap_ready;
wire   [31:0] grp_Multiply_VecMat_5_fu_193_res_strm_din;
wire    grp_Multiply_VecMat_5_fu_193_res_strm_write;
wire    grp_Multiply_VecMat_5_fu_193_z3_strm_read;
wire    grp_Multiply_VecMat_5_fu_193_W_strm_read;
wire   [31:0] grp_Multiply_VecMat_5_fu_193_grp_fu_264_p_din0;
wire   [31:0] grp_Multiply_VecMat_5_fu_193_grp_fu_264_p_din1;
wire   [31:0] grp_Multiply_VecMat_5_fu_193_grp_fu_264_p_din2;
wire   [31:0] grp_Multiply_VecMat_5_fu_193_grp_fu_264_p_din3;
wire    grp_Multiply_VecMat_5_fu_193_grp_fu_264_p_ce;
reg    grp_push_tensor1d_fu_122_ap_start_reg;
reg    ap_block_state1_ignore_call24;
wire    ap_CS_fsm_state2;
reg   [31:0] x_strm_din;
wire    x_strm_full_n;
reg    x_strm_write;
reg    grp_push_tensor2d_bycol_fu_131_ap_start_reg;
wire    ap_CS_fsm_state4;
reg   [31:0] W_strm_din;
wire    W_strm_full_n;
reg    W_strm_write;
reg    grp_Multiply_VecMat_fu_140_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    z1_strm_full_n;
reg    z1_strm_write;
wire    ap_CS_fsm_state6;
wire   [31:0] x_strm_dout;
wire    x_strm_empty_n;
reg    x_strm_read;
wire   [31:0] W_strm_dout;
wire    W_strm_empty_n;
reg    W_strm_read;
reg    grp_push_tensor1d_1_fu_147_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg    grp_push_tensor2d_bycol_2_fu_155_ap_start_reg;
wire    ap_CS_fsm_state10;
reg    grp_Multiply_VecMat_3_fu_164_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    z2_strm_full_n;
reg    z2_strm_write;
wire    ap_CS_fsm_state12;
reg    grp_Swish_fu_171_ap_start_reg;
wire    z2_Silu_strm_full_n;
reg    z2_Silu_strm_write;
wire    ap_CS_fsm_state14;
wire   [31:0] z2_strm_dout;
wire    z2_strm_empty_n;
reg    z2_strm_read;
reg    grp_push_tensor2d_bycol_4_fu_177_ap_start_reg;
reg    grp_Multiply_Vec_fu_186_ap_start_reg;
wire    ap_CS_fsm_state15;
wire    z3_strm_full_n;
reg    z3_strm_write;
wire    ap_CS_fsm_state16;
wire   [31:0] z1_strm_dout;
wire    z1_strm_empty_n;
reg    z1_strm_read;
wire   [31:0] z2_Silu_strm_dout;
wire    z2_Silu_strm_empty_n;
reg    z2_Silu_strm_read;
reg    grp_Multiply_VecMat_5_fu_193_ap_start_reg;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire   [31:0] z3_strm_dout;
wire    z3_strm_empty_n;
reg    z3_strm_read;
reg   [31:0] grp_fu_264_p4;
reg   [31:0] grp_fu_264_p0;
reg   [31:0] grp_fu_264_p1;
reg   [31:0] grp_fu_264_p2;
reg   [31:0] grp_fu_264_p3;
reg    grp_fu_264_ce;
wire   [31:0] pre_grp_fu_264_p4;
reg   [31:0] pre_grp_fu_264_p4_reg;
reg   [17:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
reg    ap_block_state14_on_subcall_done;
reg    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
reg    ap_ST_fsm_state18_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 18'd1;
#0 grp_push_tensor1d_fu_122_ap_start_reg = 1'b0;
#0 grp_push_tensor2d_bycol_fu_131_ap_start_reg = 1'b0;
#0 grp_Multiply_VecMat_fu_140_ap_start_reg = 1'b0;
#0 grp_push_tensor1d_1_fu_147_ap_start_reg = 1'b0;
#0 grp_push_tensor2d_bycol_2_fu_155_ap_start_reg = 1'b0;
#0 grp_Multiply_VecMat_3_fu_164_ap_start_reg = 1'b0;
#0 grp_Swish_fu_171_ap_start_reg = 1'b0;
#0 grp_push_tensor2d_bycol_4_fu_177_ap_start_reg = 1'b0;
#0 grp_Multiply_Vec_fu_186_ap_start_reg = 1'b0;
#0 grp_Multiply_VecMat_5_fu_193_ap_start_reg = 1'b0;
end

FFN_push_tensor1d grp_push_tensor1d_fu_122(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_push_tensor1d_fu_122_ap_start),
    .ap_done(grp_push_tensor1d_fu_122_ap_done),
    .ap_idle(grp_push_tensor1d_fu_122_ap_idle),
    .ap_ready(grp_push_tensor1d_fu_122_ap_ready),
    .m_axi_gmem_0_AWVALID(grp_push_tensor1d_fu_122_m_axi_gmem_0_AWVALID),
    .m_axi_gmem_0_AWREADY(1'b0),
    .m_axi_gmem_0_AWADDR(grp_push_tensor1d_fu_122_m_axi_gmem_0_AWADDR),
    .m_axi_gmem_0_AWID(grp_push_tensor1d_fu_122_m_axi_gmem_0_AWID),
    .m_axi_gmem_0_AWLEN(grp_push_tensor1d_fu_122_m_axi_gmem_0_AWLEN),
    .m_axi_gmem_0_AWSIZE(grp_push_tensor1d_fu_122_m_axi_gmem_0_AWSIZE),
    .m_axi_gmem_0_AWBURST(grp_push_tensor1d_fu_122_m_axi_gmem_0_AWBURST),
    .m_axi_gmem_0_AWLOCK(grp_push_tensor1d_fu_122_m_axi_gmem_0_AWLOCK),
    .m_axi_gmem_0_AWCACHE(grp_push_tensor1d_fu_122_m_axi_gmem_0_AWCACHE),
    .m_axi_gmem_0_AWPROT(grp_push_tensor1d_fu_122_m_axi_gmem_0_AWPROT),
    .m_axi_gmem_0_AWQOS(grp_push_tensor1d_fu_122_m_axi_gmem_0_AWQOS),
    .m_axi_gmem_0_AWREGION(grp_push_tensor1d_fu_122_m_axi_gmem_0_AWREGION),
    .m_axi_gmem_0_AWUSER(grp_push_tensor1d_fu_122_m_axi_gmem_0_AWUSER),
    .m_axi_gmem_0_WVALID(grp_push_tensor1d_fu_122_m_axi_gmem_0_WVALID),
    .m_axi_gmem_0_WREADY(1'b0),
    .m_axi_gmem_0_WDATA(grp_push_tensor1d_fu_122_m_axi_gmem_0_WDATA),
    .m_axi_gmem_0_WSTRB(grp_push_tensor1d_fu_122_m_axi_gmem_0_WSTRB),
    .m_axi_gmem_0_WLAST(grp_push_tensor1d_fu_122_m_axi_gmem_0_WLAST),
    .m_axi_gmem_0_WID(grp_push_tensor1d_fu_122_m_axi_gmem_0_WID),
    .m_axi_gmem_0_WUSER(grp_push_tensor1d_fu_122_m_axi_gmem_0_WUSER),
    .m_axi_gmem_0_ARVALID(grp_push_tensor1d_fu_122_m_axi_gmem_0_ARVALID),
    .m_axi_gmem_0_ARREADY(m_axi_gmem_0_ARREADY),
    .m_axi_gmem_0_ARADDR(grp_push_tensor1d_fu_122_m_axi_gmem_0_ARADDR),
    .m_axi_gmem_0_ARID(grp_push_tensor1d_fu_122_m_axi_gmem_0_ARID),
    .m_axi_gmem_0_ARLEN(grp_push_tensor1d_fu_122_m_axi_gmem_0_ARLEN),
    .m_axi_gmem_0_ARSIZE(grp_push_tensor1d_fu_122_m_axi_gmem_0_ARSIZE),
    .m_axi_gmem_0_ARBURST(grp_push_tensor1d_fu_122_m_axi_gmem_0_ARBURST),
    .m_axi_gmem_0_ARLOCK(grp_push_tensor1d_fu_122_m_axi_gmem_0_ARLOCK),
    .m_axi_gmem_0_ARCACHE(grp_push_tensor1d_fu_122_m_axi_gmem_0_ARCACHE),
    .m_axi_gmem_0_ARPROT(grp_push_tensor1d_fu_122_m_axi_gmem_0_ARPROT),
    .m_axi_gmem_0_ARQOS(grp_push_tensor1d_fu_122_m_axi_gmem_0_ARQOS),
    .m_axi_gmem_0_ARREGION(grp_push_tensor1d_fu_122_m_axi_gmem_0_ARREGION),
    .m_axi_gmem_0_ARUSER(grp_push_tensor1d_fu_122_m_axi_gmem_0_ARUSER),
    .m_axi_gmem_0_RVALID(m_axi_gmem_0_RVALID),
    .m_axi_gmem_0_RREADY(grp_push_tensor1d_fu_122_m_axi_gmem_0_RREADY),
    .m_axi_gmem_0_RDATA(m_axi_gmem_0_RDATA),
    .m_axi_gmem_0_RLAST(m_axi_gmem_0_RLAST),
    .m_axi_gmem_0_RID(m_axi_gmem_0_RID),
    .m_axi_gmem_0_RFIFONUM(m_axi_gmem_0_RFIFONUM),
    .m_axi_gmem_0_RUSER(m_axi_gmem_0_RUSER),
    .m_axi_gmem_0_RRESP(m_axi_gmem_0_RRESP),
    .m_axi_gmem_0_BVALID(1'b0),
    .m_axi_gmem_0_BREADY(grp_push_tensor1d_fu_122_m_axi_gmem_0_BREADY),
    .m_axi_gmem_0_BRESP(2'd0),
    .m_axi_gmem_0_BID(1'd0),
    .m_axi_gmem_0_BUSER(1'd0),
    .tsor(i_vec_read_reg_201),
    .x_strm_din(grp_push_tensor1d_fu_122_x_strm_din),
    .x_strm_full_n(x_strm_full_n),
    .x_strm_write(grp_push_tensor1d_fu_122_x_strm_write)
);

FFN_push_tensor2d_bycol grp_push_tensor2d_bycol_fu_131(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_push_tensor2d_bycol_fu_131_ap_start),
    .ap_done(grp_push_tensor2d_bycol_fu_131_ap_done),
    .ap_idle(grp_push_tensor2d_bycol_fu_131_ap_idle),
    .ap_ready(grp_push_tensor2d_bycol_fu_131_ap_ready),
    .m_axi_gmem_0_AWVALID(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_AWVALID),
    .m_axi_gmem_0_AWREADY(1'b0),
    .m_axi_gmem_0_AWADDR(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_AWADDR),
    .m_axi_gmem_0_AWID(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_AWID),
    .m_axi_gmem_0_AWLEN(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_AWLEN),
    .m_axi_gmem_0_AWSIZE(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_AWSIZE),
    .m_axi_gmem_0_AWBURST(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_AWBURST),
    .m_axi_gmem_0_AWLOCK(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_AWLOCK),
    .m_axi_gmem_0_AWCACHE(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_AWCACHE),
    .m_axi_gmem_0_AWPROT(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_AWPROT),
    .m_axi_gmem_0_AWQOS(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_AWQOS),
    .m_axi_gmem_0_AWREGION(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_AWREGION),
    .m_axi_gmem_0_AWUSER(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_AWUSER),
    .m_axi_gmem_0_WVALID(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_WVALID),
    .m_axi_gmem_0_WREADY(1'b0),
    .m_axi_gmem_0_WDATA(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_WDATA),
    .m_axi_gmem_0_WSTRB(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_WSTRB),
    .m_axi_gmem_0_WLAST(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_WLAST),
    .m_axi_gmem_0_WID(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_WID),
    .m_axi_gmem_0_WUSER(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_WUSER),
    .m_axi_gmem_0_ARVALID(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARVALID),
    .m_axi_gmem_0_ARREADY(m_axi_gmem_0_ARREADY),
    .m_axi_gmem_0_ARADDR(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARADDR),
    .m_axi_gmem_0_ARID(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARID),
    .m_axi_gmem_0_ARLEN(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARLEN),
    .m_axi_gmem_0_ARSIZE(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARSIZE),
    .m_axi_gmem_0_ARBURST(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARBURST),
    .m_axi_gmem_0_ARLOCK(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARLOCK),
    .m_axi_gmem_0_ARCACHE(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARCACHE),
    .m_axi_gmem_0_ARPROT(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARPROT),
    .m_axi_gmem_0_ARQOS(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARQOS),
    .m_axi_gmem_0_ARREGION(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARREGION),
    .m_axi_gmem_0_ARUSER(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARUSER),
    .m_axi_gmem_0_RVALID(m_axi_gmem_0_RVALID),
    .m_axi_gmem_0_RREADY(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_RREADY),
    .m_axi_gmem_0_RDATA(m_axi_gmem_0_RDATA),
    .m_axi_gmem_0_RLAST(m_axi_gmem_0_RLAST),
    .m_axi_gmem_0_RID(m_axi_gmem_0_RID),
    .m_axi_gmem_0_RFIFONUM(m_axi_gmem_0_RFIFONUM),
    .m_axi_gmem_0_RUSER(m_axi_gmem_0_RUSER),
    .m_axi_gmem_0_RRESP(m_axi_gmem_0_RRESP),
    .m_axi_gmem_0_BVALID(1'b0),
    .m_axi_gmem_0_BREADY(grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_BREADY),
    .m_axi_gmem_0_BRESP(2'd0),
    .m_axi_gmem_0_BID(1'd0),
    .m_axi_gmem_0_BUSER(1'd0),
    .W_strm_din(grp_push_tensor2d_bycol_fu_131_W_strm_din),
    .W_strm_full_n(W_strm_full_n),
    .W_strm_write(grp_push_tensor2d_bycol_fu_131_W_strm_write),
    .tsor(W1_vec_read_reg_249)
);

FFN_Multiply_VecMat grp_Multiply_VecMat_fu_140(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Multiply_VecMat_fu_140_ap_start),
    .ap_done(grp_Multiply_VecMat_fu_140_ap_done),
    .ap_idle(grp_Multiply_VecMat_fu_140_ap_idle),
    .ap_ready(grp_Multiply_VecMat_fu_140_ap_ready),
    .z1_strm_din(grp_Multiply_VecMat_fu_140_z1_strm_din),
    .z1_strm_full_n(z1_strm_full_n),
    .z1_strm_write(grp_Multiply_VecMat_fu_140_z1_strm_write),
    .x_strm_dout(x_strm_dout),
    .x_strm_empty_n(x_strm_empty_n),
    .x_strm_read(grp_Multiply_VecMat_fu_140_x_strm_read),
    .W_strm_dout(W_strm_dout),
    .W_strm_empty_n(W_strm_empty_n),
    .W_strm_read(grp_Multiply_VecMat_fu_140_W_strm_read),
    .grp_fu_264_p_din0(grp_Multiply_VecMat_fu_140_grp_fu_264_p_din0),
    .grp_fu_264_p_din1(grp_Multiply_VecMat_fu_140_grp_fu_264_p_din1),
    .grp_fu_264_p_din2(grp_Multiply_VecMat_fu_140_grp_fu_264_p_din2),
    .grp_fu_264_p_din3(grp_Multiply_VecMat_fu_140_grp_fu_264_p_din3),
    .grp_fu_264_p_dout0(grp_fu_264_p4),
    .grp_fu_264_p_ce(grp_Multiply_VecMat_fu_140_grp_fu_264_p_ce)
);

FFN_push_tensor1d_1 grp_push_tensor1d_1_fu_147(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_push_tensor1d_1_fu_147_ap_start),
    .ap_done(grp_push_tensor1d_1_fu_147_ap_done),
    .ap_idle(grp_push_tensor1d_1_fu_147_ap_idle),
    .ap_ready(grp_push_tensor1d_1_fu_147_ap_ready),
    .m_axi_gmem_0_AWVALID(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_AWVALID),
    .m_axi_gmem_0_AWREADY(1'b0),
    .m_axi_gmem_0_AWADDR(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_AWADDR),
    .m_axi_gmem_0_AWID(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_AWID),
    .m_axi_gmem_0_AWLEN(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_AWLEN),
    .m_axi_gmem_0_AWSIZE(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_AWSIZE),
    .m_axi_gmem_0_AWBURST(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_AWBURST),
    .m_axi_gmem_0_AWLOCK(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_AWLOCK),
    .m_axi_gmem_0_AWCACHE(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_AWCACHE),
    .m_axi_gmem_0_AWPROT(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_AWPROT),
    .m_axi_gmem_0_AWQOS(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_AWQOS),
    .m_axi_gmem_0_AWREGION(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_AWREGION),
    .m_axi_gmem_0_AWUSER(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_AWUSER),
    .m_axi_gmem_0_WVALID(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_WVALID),
    .m_axi_gmem_0_WREADY(1'b0),
    .m_axi_gmem_0_WDATA(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_WDATA),
    .m_axi_gmem_0_WSTRB(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_WSTRB),
    .m_axi_gmem_0_WLAST(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_WLAST),
    .m_axi_gmem_0_WID(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_WID),
    .m_axi_gmem_0_WUSER(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_WUSER),
    .m_axi_gmem_0_ARVALID(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARVALID),
    .m_axi_gmem_0_ARREADY(m_axi_gmem_0_ARREADY),
    .m_axi_gmem_0_ARADDR(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARADDR),
    .m_axi_gmem_0_ARID(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARID),
    .m_axi_gmem_0_ARLEN(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARLEN),
    .m_axi_gmem_0_ARSIZE(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARSIZE),
    .m_axi_gmem_0_ARBURST(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARBURST),
    .m_axi_gmem_0_ARLOCK(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARLOCK),
    .m_axi_gmem_0_ARCACHE(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARCACHE),
    .m_axi_gmem_0_ARPROT(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARPROT),
    .m_axi_gmem_0_ARQOS(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARQOS),
    .m_axi_gmem_0_ARREGION(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARREGION),
    .m_axi_gmem_0_ARUSER(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARUSER),
    .m_axi_gmem_0_RVALID(m_axi_gmem_0_RVALID),
    .m_axi_gmem_0_RREADY(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_RREADY),
    .m_axi_gmem_0_RDATA(m_axi_gmem_0_RDATA),
    .m_axi_gmem_0_RLAST(m_axi_gmem_0_RLAST),
    .m_axi_gmem_0_RID(m_axi_gmem_0_RID),
    .m_axi_gmem_0_RFIFONUM(m_axi_gmem_0_RFIFONUM),
    .m_axi_gmem_0_RUSER(m_axi_gmem_0_RUSER),
    .m_axi_gmem_0_RRESP(m_axi_gmem_0_RRESP),
    .m_axi_gmem_0_BVALID(1'b0),
    .m_axi_gmem_0_BREADY(grp_push_tensor1d_1_fu_147_m_axi_gmem_0_BREADY),
    .m_axi_gmem_0_BRESP(2'd0),
    .m_axi_gmem_0_BID(1'd0),
    .m_axi_gmem_0_BUSER(1'd0),
    .tsor(i_vec_read_reg_201),
    .x_strm_din(grp_push_tensor1d_1_fu_147_x_strm_din),
    .x_strm_full_n(x_strm_full_n),
    .x_strm_write(grp_push_tensor1d_1_fu_147_x_strm_write)
);

FFN_push_tensor2d_bycol_2 grp_push_tensor2d_bycol_2_fu_155(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_push_tensor2d_bycol_2_fu_155_ap_start),
    .ap_done(grp_push_tensor2d_bycol_2_fu_155_ap_done),
    .ap_idle(grp_push_tensor2d_bycol_2_fu_155_ap_idle),
    .ap_ready(grp_push_tensor2d_bycol_2_fu_155_ap_ready),
    .m_axi_gmem_0_AWVALID(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_AWVALID),
    .m_axi_gmem_0_AWREADY(1'b0),
    .m_axi_gmem_0_AWADDR(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_AWADDR),
    .m_axi_gmem_0_AWID(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_AWID),
    .m_axi_gmem_0_AWLEN(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_AWLEN),
    .m_axi_gmem_0_AWSIZE(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_AWSIZE),
    .m_axi_gmem_0_AWBURST(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_AWBURST),
    .m_axi_gmem_0_AWLOCK(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_AWLOCK),
    .m_axi_gmem_0_AWCACHE(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_AWCACHE),
    .m_axi_gmem_0_AWPROT(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_AWPROT),
    .m_axi_gmem_0_AWQOS(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_AWQOS),
    .m_axi_gmem_0_AWREGION(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_AWREGION),
    .m_axi_gmem_0_AWUSER(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_AWUSER),
    .m_axi_gmem_0_WVALID(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_WVALID),
    .m_axi_gmem_0_WREADY(1'b0),
    .m_axi_gmem_0_WDATA(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_WDATA),
    .m_axi_gmem_0_WSTRB(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_WSTRB),
    .m_axi_gmem_0_WLAST(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_WLAST),
    .m_axi_gmem_0_WID(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_WID),
    .m_axi_gmem_0_WUSER(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_WUSER),
    .m_axi_gmem_0_ARVALID(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARVALID),
    .m_axi_gmem_0_ARREADY(m_axi_gmem_0_ARREADY),
    .m_axi_gmem_0_ARADDR(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARADDR),
    .m_axi_gmem_0_ARID(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARID),
    .m_axi_gmem_0_ARLEN(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARLEN),
    .m_axi_gmem_0_ARSIZE(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARSIZE),
    .m_axi_gmem_0_ARBURST(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARBURST),
    .m_axi_gmem_0_ARLOCK(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARLOCK),
    .m_axi_gmem_0_ARCACHE(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARCACHE),
    .m_axi_gmem_0_ARPROT(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARPROT),
    .m_axi_gmem_0_ARQOS(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARQOS),
    .m_axi_gmem_0_ARREGION(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARREGION),
    .m_axi_gmem_0_ARUSER(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARUSER),
    .m_axi_gmem_0_RVALID(m_axi_gmem_0_RVALID),
    .m_axi_gmem_0_RREADY(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_RREADY),
    .m_axi_gmem_0_RDATA(m_axi_gmem_0_RDATA),
    .m_axi_gmem_0_RLAST(m_axi_gmem_0_RLAST),
    .m_axi_gmem_0_RID(m_axi_gmem_0_RID),
    .m_axi_gmem_0_RFIFONUM(m_axi_gmem_0_RFIFONUM),
    .m_axi_gmem_0_RUSER(m_axi_gmem_0_RUSER),
    .m_axi_gmem_0_RRESP(m_axi_gmem_0_RRESP),
    .m_axi_gmem_0_BVALID(1'b0),
    .m_axi_gmem_0_BREADY(grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_BREADY),
    .m_axi_gmem_0_BRESP(2'd0),
    .m_axi_gmem_0_BID(1'd0),
    .m_axi_gmem_0_BUSER(1'd0),
    .W_strm_din(grp_push_tensor2d_bycol_2_fu_155_W_strm_din),
    .W_strm_full_n(W_strm_full_n),
    .W_strm_write(grp_push_tensor2d_bycol_2_fu_155_W_strm_write),
    .tsor(W2_vec_read_reg_254)
);

FFN_Multiply_VecMat_3 grp_Multiply_VecMat_3_fu_164(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Multiply_VecMat_3_fu_164_ap_start),
    .ap_done(grp_Multiply_VecMat_3_fu_164_ap_done),
    .ap_idle(grp_Multiply_VecMat_3_fu_164_ap_idle),
    .ap_ready(grp_Multiply_VecMat_3_fu_164_ap_ready),
    .z2_strm_din(grp_Multiply_VecMat_3_fu_164_z2_strm_din),
    .z2_strm_full_n(z2_strm_full_n),
    .z2_strm_write(grp_Multiply_VecMat_3_fu_164_z2_strm_write),
    .x_strm_dout(x_strm_dout),
    .x_strm_empty_n(x_strm_empty_n),
    .x_strm_read(grp_Multiply_VecMat_3_fu_164_x_strm_read),
    .W_strm_dout(W_strm_dout),
    .W_strm_empty_n(W_strm_empty_n),
    .W_strm_read(grp_Multiply_VecMat_3_fu_164_W_strm_read),
    .grp_fu_264_p_din0(grp_Multiply_VecMat_3_fu_164_grp_fu_264_p_din0),
    .grp_fu_264_p_din1(grp_Multiply_VecMat_3_fu_164_grp_fu_264_p_din1),
    .grp_fu_264_p_din2(grp_Multiply_VecMat_3_fu_164_grp_fu_264_p_din2),
    .grp_fu_264_p_din3(grp_Multiply_VecMat_3_fu_164_grp_fu_264_p_din3),
    .grp_fu_264_p_dout0(grp_fu_264_p4),
    .grp_fu_264_p_ce(grp_Multiply_VecMat_3_fu_164_grp_fu_264_p_ce)
);

FFN_Swish grp_Swish_fu_171(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Swish_fu_171_ap_start),
    .ap_done(grp_Swish_fu_171_ap_done),
    .ap_idle(grp_Swish_fu_171_ap_idle),
    .ap_ready(grp_Swish_fu_171_ap_ready),
    .z2_strm_dout(z2_strm_dout),
    .z2_strm_empty_n(z2_strm_empty_n),
    .z2_strm_read(grp_Swish_fu_171_z2_strm_read),
    .z2_Silu_strm_din(grp_Swish_fu_171_z2_Silu_strm_din),
    .z2_Silu_strm_full_n(z2_Silu_strm_full_n),
    .z2_Silu_strm_write(grp_Swish_fu_171_z2_Silu_strm_write)
);

FFN_push_tensor2d_bycol_4 grp_push_tensor2d_bycol_4_fu_177(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_push_tensor2d_bycol_4_fu_177_ap_start),
    .ap_done(grp_push_tensor2d_bycol_4_fu_177_ap_done),
    .ap_idle(grp_push_tensor2d_bycol_4_fu_177_ap_idle),
    .ap_ready(grp_push_tensor2d_bycol_4_fu_177_ap_ready),
    .m_axi_gmem_0_AWVALID(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_AWVALID),
    .m_axi_gmem_0_AWREADY(1'b0),
    .m_axi_gmem_0_AWADDR(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_AWADDR),
    .m_axi_gmem_0_AWID(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_AWID),
    .m_axi_gmem_0_AWLEN(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_AWLEN),
    .m_axi_gmem_0_AWSIZE(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_AWSIZE),
    .m_axi_gmem_0_AWBURST(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_AWBURST),
    .m_axi_gmem_0_AWLOCK(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_AWLOCK),
    .m_axi_gmem_0_AWCACHE(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_AWCACHE),
    .m_axi_gmem_0_AWPROT(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_AWPROT),
    .m_axi_gmem_0_AWQOS(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_AWQOS),
    .m_axi_gmem_0_AWREGION(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_AWREGION),
    .m_axi_gmem_0_AWUSER(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_AWUSER),
    .m_axi_gmem_0_WVALID(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_WVALID),
    .m_axi_gmem_0_WREADY(1'b0),
    .m_axi_gmem_0_WDATA(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_WDATA),
    .m_axi_gmem_0_WSTRB(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_WSTRB),
    .m_axi_gmem_0_WLAST(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_WLAST),
    .m_axi_gmem_0_WID(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_WID),
    .m_axi_gmem_0_WUSER(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_WUSER),
    .m_axi_gmem_0_ARVALID(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARVALID),
    .m_axi_gmem_0_ARREADY(m_axi_gmem_0_ARREADY),
    .m_axi_gmem_0_ARADDR(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARADDR),
    .m_axi_gmem_0_ARID(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARID),
    .m_axi_gmem_0_ARLEN(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARLEN),
    .m_axi_gmem_0_ARSIZE(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARSIZE),
    .m_axi_gmem_0_ARBURST(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARBURST),
    .m_axi_gmem_0_ARLOCK(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARLOCK),
    .m_axi_gmem_0_ARCACHE(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARCACHE),
    .m_axi_gmem_0_ARPROT(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARPROT),
    .m_axi_gmem_0_ARQOS(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARQOS),
    .m_axi_gmem_0_ARREGION(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARREGION),
    .m_axi_gmem_0_ARUSER(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARUSER),
    .m_axi_gmem_0_RVALID(m_axi_gmem_0_RVALID),
    .m_axi_gmem_0_RREADY(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_RREADY),
    .m_axi_gmem_0_RDATA(m_axi_gmem_0_RDATA),
    .m_axi_gmem_0_RLAST(m_axi_gmem_0_RLAST),
    .m_axi_gmem_0_RID(m_axi_gmem_0_RID),
    .m_axi_gmem_0_RFIFONUM(m_axi_gmem_0_RFIFONUM),
    .m_axi_gmem_0_RUSER(m_axi_gmem_0_RUSER),
    .m_axi_gmem_0_RRESP(m_axi_gmem_0_RRESP),
    .m_axi_gmem_0_BVALID(1'b0),
    .m_axi_gmem_0_BREADY(grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_BREADY),
    .m_axi_gmem_0_BRESP(2'd0),
    .m_axi_gmem_0_BID(1'd0),
    .m_axi_gmem_0_BUSER(1'd0),
    .W_strm_din(grp_push_tensor2d_bycol_4_fu_177_W_strm_din),
    .W_strm_full_n(W_strm_full_n),
    .W_strm_write(grp_push_tensor2d_bycol_4_fu_177_W_strm_write),
    .tsor(W3_vec_read_reg_259)
);

FFN_Multiply_Vec grp_Multiply_Vec_fu_186(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Multiply_Vec_fu_186_ap_start),
    .ap_done(grp_Multiply_Vec_fu_186_ap_done),
    .ap_idle(grp_Multiply_Vec_fu_186_ap_idle),
    .ap_ready(grp_Multiply_Vec_fu_186_ap_ready),
    .z1_strm_dout(z1_strm_dout),
    .z1_strm_empty_n(z1_strm_empty_n),
    .z1_strm_read(grp_Multiply_Vec_fu_186_z1_strm_read),
    .z2_Silu_strm_dout(z2_Silu_strm_dout),
    .z2_Silu_strm_empty_n(z2_Silu_strm_empty_n),
    .z2_Silu_strm_read(grp_Multiply_Vec_fu_186_z2_Silu_strm_read),
    .z3_strm_din(grp_Multiply_Vec_fu_186_z3_strm_din),
    .z3_strm_full_n(z3_strm_full_n),
    .z3_strm_write(grp_Multiply_Vec_fu_186_z3_strm_write)
);

FFN_Multiply_VecMat_5 grp_Multiply_VecMat_5_fu_193(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Multiply_VecMat_5_fu_193_ap_start),
    .ap_done(grp_Multiply_VecMat_5_fu_193_ap_done),
    .ap_idle(grp_Multiply_VecMat_5_fu_193_ap_idle),
    .ap_ready(grp_Multiply_VecMat_5_fu_193_ap_ready),
    .res_strm_din(grp_Multiply_VecMat_5_fu_193_res_strm_din),
    .res_strm_full_n(res_strm_full_n),
    .res_strm_write(grp_Multiply_VecMat_5_fu_193_res_strm_write),
    .res_strm_num_data_valid(7'd0),
    .res_strm_fifo_cap(7'd0),
    .z3_strm_dout(z3_strm_dout),
    .z3_strm_empty_n(z3_strm_empty_n),
    .z3_strm_read(grp_Multiply_VecMat_5_fu_193_z3_strm_read),
    .W_strm_dout(W_strm_dout),
    .W_strm_empty_n(W_strm_empty_n),
    .W_strm_read(grp_Multiply_VecMat_5_fu_193_W_strm_read),
    .grp_fu_264_p_din0(grp_Multiply_VecMat_5_fu_193_grp_fu_264_p_din0),
    .grp_fu_264_p_din1(grp_Multiply_VecMat_5_fu_193_grp_fu_264_p_din1),
    .grp_fu_264_p_din2(grp_Multiply_VecMat_5_fu_193_grp_fu_264_p_din2),
    .grp_fu_264_p_din3(grp_Multiply_VecMat_5_fu_193_grp_fu_264_p_din3),
    .grp_fu_264_p_dout0(grp_fu_264_p4),
    .grp_fu_264_p_ce(grp_Multiply_VecMat_5_fu_193_grp_fu_264_p_ce)
);

FFN_fmadd_32ns_32ns_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmadd_32ns_32ns_32ns_32ns_32_2_primitive_dsp_1_U77(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_264_p0),
    .din1(grp_fu_264_p1),
    .din2(grp_fu_264_p2),
    .din3(grp_fu_264_p3),
    .ce(grp_fu_264_ce),
    .dout(pre_grp_fu_264_p4)
);

FFN_fifo_w32_d64_A z2_Silu_strm_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_Swish_fu_171_z2_Silu_strm_din),
    .if_full_n(z2_Silu_strm_full_n),
    .if_write(z2_Silu_strm_write),
    .if_dout(z2_Silu_strm_dout),
    .if_empty_n(z2_Silu_strm_empty_n),
    .if_read(z2_Silu_strm_read)
);

FFN_fifo_w32_d64_A z3_strm_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_Multiply_Vec_fu_186_z3_strm_din),
    .if_full_n(z3_strm_full_n),
    .if_write(z3_strm_write),
    .if_dout(z3_strm_dout),
    .if_empty_n(z3_strm_empty_n),
    .if_read(z3_strm_read)
);

FFN_fifo_w32_d64_A z2_strm_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_Multiply_VecMat_3_fu_164_z2_strm_din),
    .if_full_n(z2_strm_full_n),
    .if_write(z2_strm_write),
    .if_dout(z2_strm_dout),
    .if_empty_n(z2_strm_empty_n),
    .if_read(z2_strm_read)
);

FFN_fifo_w32_d64_A z1_strm_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_Multiply_VecMat_fu_140_z1_strm_din),
    .if_full_n(z1_strm_full_n),
    .if_write(z1_strm_write),
    .if_dout(z1_strm_dout),
    .if_empty_n(z1_strm_empty_n),
    .if_read(z1_strm_read)
);

FFN_fifo_w32_d64_A W_strm_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(W_strm_din),
    .if_full_n(W_strm_full_n),
    .if_write(W_strm_write),
    .if_dout(W_strm_dout),
    .if_empty_n(W_strm_empty_n),
    .if_read(W_strm_read)
);

FFN_fifo_w32_d64_A x_strm_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(x_strm_din),
    .if_full_n(x_strm_full_n),
    .if_write(x_strm_write),
    .if_dout(x_strm_dout),
    .if_empty_n(x_strm_empty_n),
    .if_read(x_strm_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((grp_Multiply_VecMat_5_fu_193_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Multiply_VecMat_3_fu_164_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_Multiply_VecMat_3_fu_164_ap_start_reg <= 1'b1;
        end else if ((grp_Multiply_VecMat_3_fu_164_ap_ready == 1'b1)) begin
            grp_Multiply_VecMat_3_fu_164_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Multiply_VecMat_5_fu_193_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            grp_Multiply_VecMat_5_fu_193_ap_start_reg <= 1'b1;
        end else if ((grp_Multiply_VecMat_5_fu_193_ap_ready == 1'b1)) begin
            grp_Multiply_VecMat_5_fu_193_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Multiply_VecMat_fu_140_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_Multiply_VecMat_fu_140_ap_start_reg <= 1'b1;
        end else if ((grp_Multiply_VecMat_fu_140_ap_ready == 1'b1)) begin
            grp_Multiply_VecMat_fu_140_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Multiply_Vec_fu_186_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_Multiply_Vec_fu_186_ap_start_reg <= 1'b1;
        end else if ((grp_Multiply_Vec_fu_186_ap_ready == 1'b1)) begin
            grp_Multiply_Vec_fu_186_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Swish_fu_171_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_Swish_fu_171_ap_start_reg <= 1'b1;
        end else if ((grp_Swish_fu_171_ap_ready == 1'b1)) begin
            grp_Swish_fu_171_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_push_tensor1d_1_fu_147_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_push_tensor1d_1_fu_147_ap_start_reg <= 1'b1;
        end else if ((grp_push_tensor1d_1_fu_147_ap_ready == 1'b1)) begin
            grp_push_tensor1d_1_fu_147_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_push_tensor1d_fu_122_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1_ignore_call24))) begin
            grp_push_tensor1d_fu_122_ap_start_reg <= 1'b1;
        end else if ((grp_push_tensor1d_fu_122_ap_ready == 1'b1)) begin
            grp_push_tensor1d_fu_122_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_push_tensor2d_bycol_2_fu_155_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_push_tensor2d_bycol_2_fu_155_ap_start_reg <= 1'b1;
        end else if ((grp_push_tensor2d_bycol_2_fu_155_ap_ready == 1'b1)) begin
            grp_push_tensor2d_bycol_2_fu_155_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_push_tensor2d_bycol_4_fu_177_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_push_tensor2d_bycol_4_fu_177_ap_start_reg <= 1'b1;
        end else if ((grp_push_tensor2d_bycol_4_fu_177_ap_ready == 1'b1)) begin
            grp_push_tensor2d_bycol_4_fu_177_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_push_tensor2d_bycol_fu_131_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_push_tensor2d_bycol_fu_131_ap_start_reg <= 1'b1;
        end else if ((grp_push_tensor2d_bycol_fu_131_ap_ready == 1'b1)) begin
            grp_push_tensor2d_bycol_fu_131_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_264_ce <= grp_Multiply_VecMat_5_fu_193_grp_fu_264_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_264_ce <= grp_Multiply_VecMat_3_fu_164_grp_fu_264_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_264_ce <= grp_Multiply_VecMat_fu_140_grp_fu_264_p_ce;
    end else if (~(1'b1 == 1'b1)) begin
        grp_fu_264_ce <= 1'b0;
    end else begin
        grp_fu_264_ce <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_264_p0 <= grp_Multiply_VecMat_5_fu_193_grp_fu_264_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_264_p0 <= grp_Multiply_VecMat_3_fu_164_grp_fu_264_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_264_p0 <= grp_Multiply_VecMat_fu_140_grp_fu_264_p_din0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_264_p1 <= grp_Multiply_VecMat_5_fu_193_grp_fu_264_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_264_p1 <= grp_Multiply_VecMat_3_fu_164_grp_fu_264_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_264_p1 <= grp_Multiply_VecMat_fu_140_grp_fu_264_p_din1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_264_p2 <= grp_Multiply_VecMat_5_fu_193_grp_fu_264_p_din2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_264_p2 <= grp_Multiply_VecMat_3_fu_164_grp_fu_264_p_din2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_264_p2 <= grp_Multiply_VecMat_fu_140_grp_fu_264_p_din2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_264_p3 <= grp_Multiply_VecMat_5_fu_193_grp_fu_264_p_din3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_264_p3 <= grp_Multiply_VecMat_3_fu_164_grp_fu_264_p_din3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_264_p3 <= grp_Multiply_VecMat_fu_140_grp_fu_264_p_din3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        W1_vec_read_reg_249 <= W1_vec;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        W2_vec_read_reg_254 <= W2_vec;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        W3_vec_read_reg_259 <= W3_vec;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        i_vec_read_reg_201 <= i_vec;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_264_ce == 1'b1)) begin
        pre_grp_fu_264_p4_reg <= pre_grp_fu_264_p4;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        W_strm_din = grp_push_tensor2d_bycol_4_fu_177_W_strm_din;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        W_strm_din = grp_push_tensor2d_bycol_2_fu_155_W_strm_din;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        W_strm_din = grp_push_tensor2d_bycol_fu_131_W_strm_din;
    end else begin
        W_strm_din = grp_push_tensor2d_bycol_4_fu_177_W_strm_din;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        W_strm_read = grp_Multiply_VecMat_5_fu_193_W_strm_read;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        W_strm_read = grp_Multiply_VecMat_3_fu_164_W_strm_read;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        W_strm_read = grp_Multiply_VecMat_fu_140_W_strm_read;
    end else begin
        W_strm_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        W_strm_write = grp_push_tensor2d_bycol_4_fu_177_W_strm_write;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        W_strm_write = grp_push_tensor2d_bycol_2_fu_155_W_strm_write;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        W_strm_write = grp_push_tensor2d_bycol_fu_131_W_strm_write;
    end else begin
        W_strm_write = 1'b0;
    end
end

always @ (*) begin
    if ((grp_push_tensor2d_bycol_2_fu_155_ap_done == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

assign ap_ST_fsm_state11_blk = 1'b0;

always @ (*) begin
    if ((grp_Multiply_VecMat_3_fu_164_ap_done == 1'b0)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

assign ap_ST_fsm_state13_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state14_on_subcall_done)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

assign ap_ST_fsm_state15_blk = 1'b0;

always @ (*) begin
    if ((grp_Multiply_Vec_fu_186_ap_done == 1'b0)) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

assign ap_ST_fsm_state17_blk = 1'b0;

always @ (*) begin
    if ((grp_Multiply_VecMat_5_fu_193_ap_done == 1'b0)) begin
        ap_ST_fsm_state18_blk = 1'b1;
    end else begin
        ap_ST_fsm_state18_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_push_tensor1d_fu_122_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_push_tensor2d_bycol_fu_131_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_Multiply_VecMat_fu_140_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((grp_push_tensor1d_1_fu_147_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((grp_Multiply_VecMat_5_fu_193_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Multiply_VecMat_5_fu_193_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((grp_fu_264_ce == 1'b1)) begin
        grp_fu_264_p4 = pre_grp_fu_264_p4;
    end else begin
        grp_fu_264_p4 = pre_grp_fu_264_p4_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem_0_ARADDR = grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_gmem_0_ARADDR = grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_0_ARADDR = grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_0_ARADDR = grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_0_ARADDR = grp_push_tensor1d_fu_122_m_axi_gmem_0_ARADDR;
    end else begin
        m_axi_gmem_0_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem_0_ARBURST = grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_gmem_0_ARBURST = grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_0_ARBURST = grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_0_ARBURST = grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_0_ARBURST = grp_push_tensor1d_fu_122_m_axi_gmem_0_ARBURST;
    end else begin
        m_axi_gmem_0_ARBURST = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem_0_ARCACHE = grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_gmem_0_ARCACHE = grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_0_ARCACHE = grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_0_ARCACHE = grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_0_ARCACHE = grp_push_tensor1d_fu_122_m_axi_gmem_0_ARCACHE;
    end else begin
        m_axi_gmem_0_ARCACHE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem_0_ARID = grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARID;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_gmem_0_ARID = grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARID;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_0_ARID = grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARID;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_0_ARID = grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARID;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_0_ARID = grp_push_tensor1d_fu_122_m_axi_gmem_0_ARID;
    end else begin
        m_axi_gmem_0_ARID = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem_0_ARLEN = grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_gmem_0_ARLEN = grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_0_ARLEN = grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_0_ARLEN = grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_0_ARLEN = grp_push_tensor1d_fu_122_m_axi_gmem_0_ARLEN;
    end else begin
        m_axi_gmem_0_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem_0_ARLOCK = grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_gmem_0_ARLOCK = grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_0_ARLOCK = grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_0_ARLOCK = grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_0_ARLOCK = grp_push_tensor1d_fu_122_m_axi_gmem_0_ARLOCK;
    end else begin
        m_axi_gmem_0_ARLOCK = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem_0_ARPROT = grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_gmem_0_ARPROT = grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_0_ARPROT = grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_0_ARPROT = grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_0_ARPROT = grp_push_tensor1d_fu_122_m_axi_gmem_0_ARPROT;
    end else begin
        m_axi_gmem_0_ARPROT = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem_0_ARQOS = grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_gmem_0_ARQOS = grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_0_ARQOS = grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_0_ARQOS = grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_0_ARQOS = grp_push_tensor1d_fu_122_m_axi_gmem_0_ARQOS;
    end else begin
        m_axi_gmem_0_ARQOS = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem_0_ARREGION = grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_gmem_0_ARREGION = grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_0_ARREGION = grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_0_ARREGION = grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_0_ARREGION = grp_push_tensor1d_fu_122_m_axi_gmem_0_ARREGION;
    end else begin
        m_axi_gmem_0_ARREGION = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem_0_ARSIZE = grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_gmem_0_ARSIZE = grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_0_ARSIZE = grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_0_ARSIZE = grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_0_ARSIZE = grp_push_tensor1d_fu_122_m_axi_gmem_0_ARSIZE;
    end else begin
        m_axi_gmem_0_ARSIZE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem_0_ARUSER = grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_gmem_0_ARUSER = grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_0_ARUSER = grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_0_ARUSER = grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_0_ARUSER = grp_push_tensor1d_fu_122_m_axi_gmem_0_ARUSER;
    end else begin
        m_axi_gmem_0_ARUSER = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem_0_ARVALID = grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_gmem_0_ARVALID = grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_0_ARVALID = grp_push_tensor1d_1_fu_147_m_axi_gmem_0_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_0_ARVALID = grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_0_ARVALID = grp_push_tensor1d_fu_122_m_axi_gmem_0_ARVALID;
    end else begin
        m_axi_gmem_0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_gmem_0_RREADY = grp_push_tensor2d_bycol_4_fu_177_m_axi_gmem_0_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_gmem_0_RREADY = grp_push_tensor2d_bycol_2_fu_155_m_axi_gmem_0_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_0_RREADY = grp_push_tensor1d_1_fu_147_m_axi_gmem_0_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_0_RREADY = grp_push_tensor2d_bycol_fu_131_m_axi_gmem_0_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_0_RREADY = grp_push_tensor1d_fu_122_m_axi_gmem_0_RREADY;
    end else begin
        m_axi_gmem_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        x_strm_din = grp_push_tensor1d_1_fu_147_x_strm_din;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x_strm_din = grp_push_tensor1d_fu_122_x_strm_din;
    end else begin
        x_strm_din = grp_push_tensor1d_1_fu_147_x_strm_din;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        x_strm_read = grp_Multiply_VecMat_3_fu_164_x_strm_read;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x_strm_read = grp_Multiply_VecMat_fu_140_x_strm_read;
    end else begin
        x_strm_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        x_strm_write = grp_push_tensor1d_1_fu_147_x_strm_write;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x_strm_write = grp_push_tensor1d_fu_122_x_strm_write;
    end else begin
        x_strm_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        z1_strm_read = grp_Multiply_Vec_fu_186_z1_strm_read;
    end else begin
        z1_strm_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        z1_strm_write = grp_Multiply_VecMat_fu_140_z1_strm_write;
    end else begin
        z1_strm_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        z2_Silu_strm_read = grp_Multiply_Vec_fu_186_z2_Silu_strm_read;
    end else begin
        z2_Silu_strm_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        z2_Silu_strm_write = grp_Swish_fu_171_z2_Silu_strm_write;
    end else begin
        z2_Silu_strm_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        z2_strm_read = grp_Swish_fu_171_z2_strm_read;
    end else begin
        z2_strm_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        z2_strm_write = grp_Multiply_VecMat_3_fu_164_z2_strm_write;
    end else begin
        z2_strm_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        z3_strm_read = grp_Multiply_VecMat_5_fu_193_z3_strm_read;
    end else begin
        z3_strm_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        z3_strm_write = grp_Multiply_Vec_fu_186_z3_strm_write;
    end else begin
        z3_strm_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_push_tensor1d_fu_122_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_push_tensor2d_bycol_fu_131_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_Multiply_VecMat_fu_140_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_push_tensor1d_1_fu_147_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_push_tensor2d_bycol_2_fu_155_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_Multiply_VecMat_3_fu_164_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (1'b0 == ap_block_state14_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_Multiply_Vec_fu_186_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((grp_Multiply_VecMat_5_fu_193_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state14_on_subcall_done = ((grp_push_tensor2d_bycol_4_fu_177_ap_done == 1'b0) | (grp_Swish_fu_171_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state1_ignore_call24 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign grp_Multiply_VecMat_3_fu_164_ap_start = grp_Multiply_VecMat_3_fu_164_ap_start_reg;

assign grp_Multiply_VecMat_5_fu_193_ap_start = grp_Multiply_VecMat_5_fu_193_ap_start_reg;

assign grp_Multiply_VecMat_fu_140_ap_start = grp_Multiply_VecMat_fu_140_ap_start_reg;

assign grp_Multiply_Vec_fu_186_ap_start = grp_Multiply_Vec_fu_186_ap_start_reg;

assign grp_Swish_fu_171_ap_start = grp_Swish_fu_171_ap_start_reg;

assign grp_push_tensor1d_1_fu_147_ap_start = grp_push_tensor1d_1_fu_147_ap_start_reg;

assign grp_push_tensor1d_fu_122_ap_start = grp_push_tensor1d_fu_122_ap_start_reg;

assign grp_push_tensor2d_bycol_2_fu_155_ap_start = grp_push_tensor2d_bycol_2_fu_155_ap_start_reg;

assign grp_push_tensor2d_bycol_4_fu_177_ap_start = grp_push_tensor2d_bycol_4_fu_177_ap_start_reg;

assign grp_push_tensor2d_bycol_fu_131_ap_start = grp_push_tensor2d_bycol_fu_131_ap_start_reg;

assign m_axi_gmem_0_AWADDR = 64'd0;

assign m_axi_gmem_0_AWBURST = 2'd0;

assign m_axi_gmem_0_AWCACHE = 4'd0;

assign m_axi_gmem_0_AWID = 1'd0;

assign m_axi_gmem_0_AWLEN = 32'd0;

assign m_axi_gmem_0_AWLOCK = 2'd0;

assign m_axi_gmem_0_AWPROT = 3'd0;

assign m_axi_gmem_0_AWQOS = 4'd0;

assign m_axi_gmem_0_AWREGION = 4'd0;

assign m_axi_gmem_0_AWSIZE = 3'd0;

assign m_axi_gmem_0_AWUSER = 1'd0;

assign m_axi_gmem_0_AWVALID = 1'b0;

assign m_axi_gmem_0_BREADY = 1'b0;

assign m_axi_gmem_0_WDATA = 32'd0;

assign m_axi_gmem_0_WID = 1'd0;

assign m_axi_gmem_0_WLAST = 1'b0;

assign m_axi_gmem_0_WSTRB = 4'd0;

assign m_axi_gmem_0_WUSER = 1'd0;

assign m_axi_gmem_0_WVALID = 1'b0;

assign res_strm_din = grp_Multiply_VecMat_5_fu_193_res_strm_din;

assign res_strm_write = grp_Multiply_VecMat_5_fu_193_res_strm_write;

endmodule //FFN_Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc
