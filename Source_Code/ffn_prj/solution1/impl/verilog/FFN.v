// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="FFN_FFN,hls_ip_2025_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcv80-lsva4737-2MHP-e-S,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=2.920000,HLS_SYN_LAT=21242991,HLS_SYN_TPT=21242992,HLS_SYN_MEM=1,HLS_SYN_DSP=0,HLS_SYN_FF=5937,HLS_SYN_LUT=8345,HLS_VERSION=2025_1}" *)

module FFN (
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        s_axi_control_r_AWVALID,
        s_axi_control_r_AWREADY,
        s_axi_control_r_AWADDR,
        s_axi_control_r_WVALID,
        s_axi_control_r_WREADY,
        s_axi_control_r_WDATA,
        s_axi_control_r_WSTRB,
        s_axi_control_r_ARVALID,
        s_axi_control_r_ARREADY,
        s_axi_control_r_ARADDR,
        s_axi_control_r_RVALID,
        s_axi_control_r_RREADY,
        s_axi_control_r_RDATA,
        s_axi_control_r_RRESP,
        s_axi_control_r_BVALID,
        s_axi_control_r_BREADY,
        s_axi_control_r_BRESP,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER
);

parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_R_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_R_ADDR_WIDTH = 7;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_CONTROL_R_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input   s_axi_control_r_AWVALID;
output   s_axi_control_r_AWREADY;
input  [C_S_AXI_CONTROL_R_ADDR_WIDTH - 1:0] s_axi_control_r_AWADDR;
input   s_axi_control_r_WVALID;
output   s_axi_control_r_WREADY;
input  [C_S_AXI_CONTROL_R_DATA_WIDTH - 1:0] s_axi_control_r_WDATA;
input  [C_S_AXI_CONTROL_R_WSTRB_WIDTH - 1:0] s_axi_control_r_WSTRB;
input   s_axi_control_r_ARVALID;
output   s_axi_control_r_ARREADY;
input  [C_S_AXI_CONTROL_R_ADDR_WIDTH - 1:0] s_axi_control_r_ARADDR;
output   s_axi_control_r_RVALID;
input   s_axi_control_r_RREADY;
output  [C_S_AXI_CONTROL_R_DATA_WIDTH - 1:0] s_axi_control_r_RDATA;
output  [1:0] s_axi_control_r_RRESP;
output   s_axi_control_r_BVALID;
input   s_axi_control_r_BREADY;
output  [1:0] s_axi_control_r_BRESP;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;

 reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire   [63:0] i_vec;
wire   [63:0] o_vec;
wire   [63:0] W1_vec;
wire   [63:0] W2_vec;
wire   [63:0] W3_vec;
wire    gmem_0_AWREADY;
wire    gmem_0_WREADY;
wire    gmem_0_ARREADY;
wire    gmem_0_RVALID;
wire   [31:0] gmem_0_RDATA;
wire    gmem_0_RLAST;
wire   [0:0] gmem_0_RID;
wire   [8:0] gmem_0_RFIFONUM;
wire   [0:0] gmem_0_RUSER;
wire   [1:0] gmem_0_RRESP;
wire    gmem_0_BVALID;
wire   [1:0] gmem_0_BRESP;
wire   [0:0] gmem_0_BID;
wire   [0:0] gmem_0_BUSER;
wire    entry_proc_U0_ap_start;
wire    entry_proc_U0_ap_done;
wire    entry_proc_U0_ap_continue;
wire    entry_proc_U0_ap_idle;
wire    entry_proc_U0_ap_ready;
wire    entry_proc_U0_start_out;
wire    entry_proc_U0_start_write;
wire   [63:0] entry_proc_U0_o_vec_c_din;
wire    entry_proc_U0_o_vec_c_write;
wire    Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_ap_start;
wire    Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_ap_done;
wire    Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_ap_continue;
wire    Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_ap_idle;
wire    Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_ap_ready;
wire    Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_AWVALID;
wire   [63:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_AWADDR;
wire   [0:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_AWID;
wire   [31:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_AWLEN;
wire   [2:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_AWSIZE;
wire   [1:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_AWBURST;
wire   [1:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_AWLOCK;
wire   [3:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_AWCACHE;
wire   [2:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_AWPROT;
wire   [3:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_AWQOS;
wire   [3:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_AWREGION;
wire   [0:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_AWUSER;
wire    Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_WVALID;
wire   [31:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_WDATA;
wire   [3:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_WSTRB;
wire    Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_WLAST;
wire   [0:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_WID;
wire   [0:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_WUSER;
wire    Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARVALID;
wire   [63:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARADDR;
wire   [0:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARID;
wire   [31:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARLEN;
wire   [2:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARSIZE;
wire   [1:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARBURST;
wire   [1:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARLOCK;
wire   [3:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARCACHE;
wire   [2:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARPROT;
wire   [3:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARQOS;
wire   [3:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARREGION;
wire   [0:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARUSER;
wire    Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_RREADY;
wire    Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_BREADY;
wire   [31:0] Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_res_strm_din;
wire    Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_res_strm_write;
wire    pull_tensor1d_U0_ap_start;
wire    pull_tensor1d_U0_ap_done;
wire    pull_tensor1d_U0_ap_continue;
wire    pull_tensor1d_U0_ap_idle;
wire    pull_tensor1d_U0_ap_ready;
wire    pull_tensor1d_U0_tsor_read;
wire    pull_tensor1d_U0_m_axi_gmem_0_AWVALID;
wire   [63:0] pull_tensor1d_U0_m_axi_gmem_0_AWADDR;
wire   [0:0] pull_tensor1d_U0_m_axi_gmem_0_AWID;
wire   [31:0] pull_tensor1d_U0_m_axi_gmem_0_AWLEN;
wire   [2:0] pull_tensor1d_U0_m_axi_gmem_0_AWSIZE;
wire   [1:0] pull_tensor1d_U0_m_axi_gmem_0_AWBURST;
wire   [1:0] pull_tensor1d_U0_m_axi_gmem_0_AWLOCK;
wire   [3:0] pull_tensor1d_U0_m_axi_gmem_0_AWCACHE;
wire   [2:0] pull_tensor1d_U0_m_axi_gmem_0_AWPROT;
wire   [3:0] pull_tensor1d_U0_m_axi_gmem_0_AWQOS;
wire   [3:0] pull_tensor1d_U0_m_axi_gmem_0_AWREGION;
wire   [0:0] pull_tensor1d_U0_m_axi_gmem_0_AWUSER;
wire    pull_tensor1d_U0_m_axi_gmem_0_WVALID;
wire   [31:0] pull_tensor1d_U0_m_axi_gmem_0_WDATA;
wire   [3:0] pull_tensor1d_U0_m_axi_gmem_0_WSTRB;
wire    pull_tensor1d_U0_m_axi_gmem_0_WLAST;
wire   [0:0] pull_tensor1d_U0_m_axi_gmem_0_WID;
wire   [0:0] pull_tensor1d_U0_m_axi_gmem_0_WUSER;
wire    pull_tensor1d_U0_m_axi_gmem_0_ARVALID;
wire   [63:0] pull_tensor1d_U0_m_axi_gmem_0_ARADDR;
wire   [0:0] pull_tensor1d_U0_m_axi_gmem_0_ARID;
wire   [31:0] pull_tensor1d_U0_m_axi_gmem_0_ARLEN;
wire   [2:0] pull_tensor1d_U0_m_axi_gmem_0_ARSIZE;
wire   [1:0] pull_tensor1d_U0_m_axi_gmem_0_ARBURST;
wire   [1:0] pull_tensor1d_U0_m_axi_gmem_0_ARLOCK;
wire   [3:0] pull_tensor1d_U0_m_axi_gmem_0_ARCACHE;
wire   [2:0] pull_tensor1d_U0_m_axi_gmem_0_ARPROT;
wire   [3:0] pull_tensor1d_U0_m_axi_gmem_0_ARQOS;
wire   [3:0] pull_tensor1d_U0_m_axi_gmem_0_ARREGION;
wire   [0:0] pull_tensor1d_U0_m_axi_gmem_0_ARUSER;
wire    pull_tensor1d_U0_m_axi_gmem_0_RREADY;
wire    pull_tensor1d_U0_m_axi_gmem_0_BREADY;
wire    pull_tensor1d_U0_res_strm_read;
wire    o_vec_c_full_n;
wire   [63:0] o_vec_c_dout;
wire    o_vec_c_empty_n;
wire   [2:0] o_vec_c_num_data_valid;
wire   [2:0] o_vec_c_fifo_cap;
wire    res_strm_full_n;
wire   [31:0] res_strm_dout;
wire    res_strm_empty_n;
wire   [6:0] res_strm_num_data_valid;
wire   [6:0] res_strm_fifo_cap;
wire    ap_sync_ready;
reg    ap_sync_reg_entry_proc_U0_ap_ready;
wire    ap_sync_entry_proc_U0_ap_ready;
reg    ap_sync_reg_Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_ap_ready;
wire    ap_sync_Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_ap_ready;
wire   [0:0] start_for_pull_tensor1d_U0_din;
wire    start_for_pull_tensor1d_U0_full_n;
wire   [0:0] start_for_pull_tensor1d_U0_dout;
wire    start_for_pull_tensor1d_U0_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_entry_proc_U0_ap_ready = 1'b0;
#0 ap_sync_reg_Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_ap_ready = 1'b0;
end

FFN_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

FFN_control_r_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_R_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_R_DATA_WIDTH ))
control_r_s_axi_U(
    .AWVALID(s_axi_control_r_AWVALID),
    .AWREADY(s_axi_control_r_AWREADY),
    .AWADDR(s_axi_control_r_AWADDR),
    .WVALID(s_axi_control_r_WVALID),
    .WREADY(s_axi_control_r_WREADY),
    .WDATA(s_axi_control_r_WDATA),
    .WSTRB(s_axi_control_r_WSTRB),
    .ARVALID(s_axi_control_r_ARVALID),
    .ARREADY(s_axi_control_r_ARREADY),
    .ARADDR(s_axi_control_r_ARADDR),
    .RVALID(s_axi_control_r_RVALID),
    .RREADY(s_axi_control_r_RREADY),
    .RDATA(s_axi_control_r_RDATA),
    .RRESP(s_axi_control_r_RRESP),
    .BVALID(s_axi_control_r_BVALID),
    .BREADY(s_axi_control_r_BREADY),
    .BRESP(s_axi_control_r_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .i_vec(i_vec),
    .o_vec(o_vec),
    .W1_vec(W1_vec),
    .W2_vec(W2_vec),
    .W3_vec(W3_vec)
);

FFN_gmem_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 10 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ),
    .CH0_NUM_READ_OUTSTANDING( 16 ),
    .CH0_NUM_WRITE_OUTSTANDING( 16 ),
    .CH0_USER_RFIFONUM_WIDTH( 9 ),
    .CH0_USER_DW( 32 ),
    .CH0_USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_CH0_ARVALID(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARVALID),
    .I_CH0_ARREADY(gmem_0_ARREADY),
    .I_CH0_ARADDR(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARADDR),
    .I_CH0_ARLEN(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARLEN),
    .I_CH0_RVALID(gmem_0_RVALID),
    .I_CH0_RREADY(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_RREADY),
    .I_CH0_RDATA(gmem_0_RDATA),
    .I_CH0_RFIFONUM(gmem_0_RFIFONUM),
    .I_CH0_AWVALID(pull_tensor1d_U0_m_axi_gmem_0_AWVALID),
    .I_CH0_AWREADY(gmem_0_AWREADY),
    .I_CH0_AWADDR(pull_tensor1d_U0_m_axi_gmem_0_AWADDR),
    .I_CH0_AWLEN(pull_tensor1d_U0_m_axi_gmem_0_AWLEN),
    .I_CH0_WVALID(pull_tensor1d_U0_m_axi_gmem_0_WVALID),
    .I_CH0_WREADY(gmem_0_WREADY),
    .I_CH0_WDATA(pull_tensor1d_U0_m_axi_gmem_0_WDATA),
    .I_CH0_WSTRB(pull_tensor1d_U0_m_axi_gmem_0_WSTRB),
    .I_CH0_BVALID(gmem_0_BVALID),
    .I_CH0_BREADY(pull_tensor1d_U0_m_axi_gmem_0_BREADY)
);

FFN_entry_proc entry_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(entry_proc_U0_ap_start),
    .start_full_n(start_for_pull_tensor1d_U0_full_n),
    .ap_done(entry_proc_U0_ap_done),
    .ap_continue(entry_proc_U0_ap_continue),
    .ap_idle(entry_proc_U0_ap_idle),
    .ap_ready(entry_proc_U0_ap_ready),
    .start_out(entry_proc_U0_start_out),
    .start_write(entry_proc_U0_start_write),
    .o_vec(o_vec),
    .o_vec_c_din(entry_proc_U0_o_vec_c_din),
    .o_vec_c_full_n(o_vec_c_full_n),
    .o_vec_c_write(entry_proc_U0_o_vec_c_write),
    .o_vec_c_num_data_valid(o_vec_c_num_data_valid),
    .o_vec_c_fifo_cap(o_vec_c_fifo_cap)
);

FFN_Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_ap_start),
    .ap_done(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_ap_done),
    .ap_continue(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_ap_continue),
    .ap_idle(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_ap_idle),
    .ap_ready(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_ap_ready),
    .m_axi_gmem_0_AWVALID(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_AWVALID),
    .m_axi_gmem_0_AWREADY(1'b0),
    .m_axi_gmem_0_AWADDR(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_AWADDR),
    .m_axi_gmem_0_AWID(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_AWID),
    .m_axi_gmem_0_AWLEN(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_AWLEN),
    .m_axi_gmem_0_AWSIZE(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_AWSIZE),
    .m_axi_gmem_0_AWBURST(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_AWBURST),
    .m_axi_gmem_0_AWLOCK(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_AWLOCK),
    .m_axi_gmem_0_AWCACHE(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_AWCACHE),
    .m_axi_gmem_0_AWPROT(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_AWPROT),
    .m_axi_gmem_0_AWQOS(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_AWQOS),
    .m_axi_gmem_0_AWREGION(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_AWREGION),
    .m_axi_gmem_0_AWUSER(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_AWUSER),
    .m_axi_gmem_0_WVALID(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_WVALID),
    .m_axi_gmem_0_WREADY(1'b0),
    .m_axi_gmem_0_WDATA(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_WDATA),
    .m_axi_gmem_0_WSTRB(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_WSTRB),
    .m_axi_gmem_0_WLAST(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_WLAST),
    .m_axi_gmem_0_WID(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_WID),
    .m_axi_gmem_0_WUSER(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_WUSER),
    .m_axi_gmem_0_ARVALID(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARVALID),
    .m_axi_gmem_0_ARREADY(gmem_0_ARREADY),
    .m_axi_gmem_0_ARADDR(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARADDR),
    .m_axi_gmem_0_ARID(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARID),
    .m_axi_gmem_0_ARLEN(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARLEN),
    .m_axi_gmem_0_ARSIZE(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARSIZE),
    .m_axi_gmem_0_ARBURST(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARBURST),
    .m_axi_gmem_0_ARLOCK(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARLOCK),
    .m_axi_gmem_0_ARCACHE(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARCACHE),
    .m_axi_gmem_0_ARPROT(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARPROT),
    .m_axi_gmem_0_ARQOS(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARQOS),
    .m_axi_gmem_0_ARREGION(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARREGION),
    .m_axi_gmem_0_ARUSER(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_ARUSER),
    .m_axi_gmem_0_RVALID(gmem_0_RVALID),
    .m_axi_gmem_0_RREADY(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_RREADY),
    .m_axi_gmem_0_RDATA(gmem_0_RDATA),
    .m_axi_gmem_0_RLAST(gmem_0_RLAST),
    .m_axi_gmem_0_RID(gmem_0_RID),
    .m_axi_gmem_0_RFIFONUM(gmem_0_RFIFONUM),
    .m_axi_gmem_0_RUSER(gmem_0_RUSER),
    .m_axi_gmem_0_RRESP(gmem_0_RRESP),
    .m_axi_gmem_0_BVALID(1'b0),
    .m_axi_gmem_0_BREADY(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_m_axi_gmem_0_BREADY),
    .m_axi_gmem_0_BRESP(2'd0),
    .m_axi_gmem_0_BID(1'd0),
    .m_axi_gmem_0_BUSER(1'd0),
    .i_vec(i_vec),
    .W1_vec(W1_vec),
    .W2_vec(W2_vec),
    .W3_vec(W3_vec),
    .res_strm_din(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_res_strm_din),
    .res_strm_full_n(res_strm_full_n),
    .res_strm_write(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_res_strm_write),
    .res_strm_num_data_valid(res_strm_num_data_valid),
    .res_strm_fifo_cap(res_strm_fifo_cap)
);

FFN_pull_tensor1d pull_tensor1d_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(pull_tensor1d_U0_ap_start),
    .ap_done(pull_tensor1d_U0_ap_done),
    .ap_continue(pull_tensor1d_U0_ap_continue),
    .ap_idle(pull_tensor1d_U0_ap_idle),
    .ap_ready(pull_tensor1d_U0_ap_ready),
    .tsor_dout(o_vec_c_dout),
    .tsor_empty_n(o_vec_c_empty_n),
    .tsor_read(pull_tensor1d_U0_tsor_read),
    .tsor_num_data_valid(o_vec_c_num_data_valid),
    .tsor_fifo_cap(o_vec_c_fifo_cap),
    .m_axi_gmem_0_AWVALID(pull_tensor1d_U0_m_axi_gmem_0_AWVALID),
    .m_axi_gmem_0_AWREADY(gmem_0_AWREADY),
    .m_axi_gmem_0_AWADDR(pull_tensor1d_U0_m_axi_gmem_0_AWADDR),
    .m_axi_gmem_0_AWID(pull_tensor1d_U0_m_axi_gmem_0_AWID),
    .m_axi_gmem_0_AWLEN(pull_tensor1d_U0_m_axi_gmem_0_AWLEN),
    .m_axi_gmem_0_AWSIZE(pull_tensor1d_U0_m_axi_gmem_0_AWSIZE),
    .m_axi_gmem_0_AWBURST(pull_tensor1d_U0_m_axi_gmem_0_AWBURST),
    .m_axi_gmem_0_AWLOCK(pull_tensor1d_U0_m_axi_gmem_0_AWLOCK),
    .m_axi_gmem_0_AWCACHE(pull_tensor1d_U0_m_axi_gmem_0_AWCACHE),
    .m_axi_gmem_0_AWPROT(pull_tensor1d_U0_m_axi_gmem_0_AWPROT),
    .m_axi_gmem_0_AWQOS(pull_tensor1d_U0_m_axi_gmem_0_AWQOS),
    .m_axi_gmem_0_AWREGION(pull_tensor1d_U0_m_axi_gmem_0_AWREGION),
    .m_axi_gmem_0_AWUSER(pull_tensor1d_U0_m_axi_gmem_0_AWUSER),
    .m_axi_gmem_0_WVALID(pull_tensor1d_U0_m_axi_gmem_0_WVALID),
    .m_axi_gmem_0_WREADY(gmem_0_WREADY),
    .m_axi_gmem_0_WDATA(pull_tensor1d_U0_m_axi_gmem_0_WDATA),
    .m_axi_gmem_0_WSTRB(pull_tensor1d_U0_m_axi_gmem_0_WSTRB),
    .m_axi_gmem_0_WLAST(pull_tensor1d_U0_m_axi_gmem_0_WLAST),
    .m_axi_gmem_0_WID(pull_tensor1d_U0_m_axi_gmem_0_WID),
    .m_axi_gmem_0_WUSER(pull_tensor1d_U0_m_axi_gmem_0_WUSER),
    .m_axi_gmem_0_ARVALID(pull_tensor1d_U0_m_axi_gmem_0_ARVALID),
    .m_axi_gmem_0_ARREADY(1'b0),
    .m_axi_gmem_0_ARADDR(pull_tensor1d_U0_m_axi_gmem_0_ARADDR),
    .m_axi_gmem_0_ARID(pull_tensor1d_U0_m_axi_gmem_0_ARID),
    .m_axi_gmem_0_ARLEN(pull_tensor1d_U0_m_axi_gmem_0_ARLEN),
    .m_axi_gmem_0_ARSIZE(pull_tensor1d_U0_m_axi_gmem_0_ARSIZE),
    .m_axi_gmem_0_ARBURST(pull_tensor1d_U0_m_axi_gmem_0_ARBURST),
    .m_axi_gmem_0_ARLOCK(pull_tensor1d_U0_m_axi_gmem_0_ARLOCK),
    .m_axi_gmem_0_ARCACHE(pull_tensor1d_U0_m_axi_gmem_0_ARCACHE),
    .m_axi_gmem_0_ARPROT(pull_tensor1d_U0_m_axi_gmem_0_ARPROT),
    .m_axi_gmem_0_ARQOS(pull_tensor1d_U0_m_axi_gmem_0_ARQOS),
    .m_axi_gmem_0_ARREGION(pull_tensor1d_U0_m_axi_gmem_0_ARREGION),
    .m_axi_gmem_0_ARUSER(pull_tensor1d_U0_m_axi_gmem_0_ARUSER),
    .m_axi_gmem_0_RVALID(1'b0),
    .m_axi_gmem_0_RREADY(pull_tensor1d_U0_m_axi_gmem_0_RREADY),
    .m_axi_gmem_0_RDATA(32'd0),
    .m_axi_gmem_0_RLAST(1'b0),
    .m_axi_gmem_0_RID(1'd0),
    .m_axi_gmem_0_RFIFONUM(9'd0),
    .m_axi_gmem_0_RUSER(1'd0),
    .m_axi_gmem_0_RRESP(2'd0),
    .m_axi_gmem_0_BVALID(gmem_0_BVALID),
    .m_axi_gmem_0_BREADY(pull_tensor1d_U0_m_axi_gmem_0_BREADY),
    .m_axi_gmem_0_BRESP(gmem_0_BRESP),
    .m_axi_gmem_0_BID(gmem_0_BID),
    .m_axi_gmem_0_BUSER(gmem_0_BUSER),
    .res_strm_dout(res_strm_dout),
    .res_strm_empty_n(res_strm_empty_n),
    .res_strm_read(pull_tensor1d_U0_res_strm_read),
    .res_strm_num_data_valid(res_strm_num_data_valid),
    .res_strm_fifo_cap(res_strm_fifo_cap)
);

FFN_fifo_w64_d3_S o_vec_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_o_vec_c_din),
    .if_full_n(o_vec_c_full_n),
    .if_write(entry_proc_U0_o_vec_c_write),
    .if_dout(o_vec_c_dout),
    .if_empty_n(o_vec_c_empty_n),
    .if_read(pull_tensor1d_U0_tsor_read),
    .if_num_data_valid(o_vec_c_num_data_valid),
    .if_fifo_cap(o_vec_c_fifo_cap)
);

FFN_fifo_w32_d64_A_x res_strm_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_res_strm_din),
    .if_full_n(res_strm_full_n),
    .if_write(Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_res_strm_write),
    .if_dout(res_strm_dout),
    .if_empty_n(res_strm_empty_n),
    .if_read(pull_tensor1d_U0_res_strm_read),
    .if_num_data_valid(res_strm_num_data_valid),
    .if_fifo_cap(res_strm_fifo_cap)
);

FFN_start_for_pull_tensor1d_U0 start_for_pull_tensor1d_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_pull_tensor1d_U0_din),
    .if_full_n(start_for_pull_tensor1d_U0_full_n),
    .if_write(entry_proc_U0_start_write),
    .if_dout(start_for_pull_tensor1d_U0_dout),
    .if_empty_n(start_for_pull_tensor1d_U0_empty_n),
    .if_read(pull_tensor1d_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_ap_ready <= ap_sync_Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_entry_proc_U0_ap_ready <= ap_sync_entry_proc_U0_ap_ready;
        end
    end
end

assign Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_ap_continue = 1'b1;

assign Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_ap_start = ((ap_sync_reg_Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_ap_ready ^ 1'b1) & ap_start & 1'b1);

assign ap_done = pull_tensor1d_U0_ap_done;

assign ap_idle = (pull_tensor1d_U0_ap_idle & entry_proc_U0_ap_idle & Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_ap_idle);

assign ap_ready = ap_sync_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_ap_ready = (ap_sync_reg_Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_ap_ready | Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_ap_ready);

assign ap_sync_entry_proc_U0_ap_ready = (entry_proc_U0_ap_ready | ap_sync_reg_entry_proc_U0_ap_ready);

assign ap_sync_ready = (ap_sync_entry_proc_U0_ap_ready & ap_sync_Block_entry_x_strm_wr_x_strm_rd_W_strm_wr_W_strm_rd_proc_U0_ap_ready);

assign entry_proc_U0_ap_continue = 1'b1;

assign entry_proc_U0_ap_start = ((ap_sync_reg_entry_proc_U0_ap_ready ^ 1'b1) & ap_start & 1'b1);

assign gmem_0_BID = 1'd0;

assign gmem_0_BRESP = 2'd0;

assign gmem_0_BUSER = 1'd0;

assign gmem_0_RID = 1'd0;

assign gmem_0_RLAST = 1'b0;

assign gmem_0_RRESP = 2'd0;

assign gmem_0_RUSER = 1'd0;

assign pull_tensor1d_U0_ap_continue = 1'b1;

assign pull_tensor1d_U0_ap_start = start_for_pull_tensor1d_U0_empty_n;

assign start_for_pull_tensor1d_U0_din = 1'b1;

endmodule //FFN
